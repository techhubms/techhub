{
  "Tags": [
    "C#",
    "Snapshot Testing",
    "Testing",
    "xUnit"
  ],
  "OutputDir": "_posts",
  "FeedLevelAuthor": "Code Maze",
  "ProcessedDate": "2025-08-05 14:18:56",
  "FeedUrl": "https://code-maze.com/feed/",
  "Title": "How to Perform Snapshot Testing With Verify in C#",
  "Description": "In this article, we are going to discuss how to perform snapshot testing on objects using the Verify library. Testing is an important part of our software development pipeline. As developers, we often rely on familiar testing approaches like unit testing, where we assert the behavior of individual components of an application, and integration testing, […]\n\nThe post [How to Perform Snapshot Testing With Verify in C#](https://code-maze.com/csharp-snapshot-testing-with-verify/) appeared first on [Code Maze](https://code-maze.com).",
  "Link": "https://code-maze.com/csharp-snapshot-testing-with-verify/",
  "FeedName": "Code Maze Blog",
  "Author": "Januarius Njoku",
  "EnhancedContent": "# How to Perform Snapshot Testing With Verify in C#\n\nPosted by [Januarius Njoku](https://code-maze.com/author/njokujennaro/) | Jan 13, 2025 | [0](https://code-maze.com/csharp-snapshot-testing-with-verify/#comments)\n\n![How to Perform Snapshot Testing With Verify in C#](https://code-maze.com/wp-content/uploads/2021/12/social-csharp.png)\n\n[!\\[Code Maze Book Collection\\](https://code-maze.com/wp-content/uploads/2024/10/courses-template-wide.png)](https://courses.code-maze.com/courses/?source=tbanner&p=csharp-snapshot-testing-with-verify/)\n\nReady to take your skills to the next level? Jump into our high-impact courses in web development and software architecture, all with a focus on mastering the .NET/C# framework. Whether you're **building sleek web applications or designing scalable software solutions**, our expert-led training will give you the tools to succeed. Visit our **[COURSES](https://courses.code-maze.com/courses/?source=tbanner&p=csharp-snapshot-testing-with-verify/)** page now and kickstart your journey!\n\nIn this article, we are going to discuss how to perform snapshot testing on objects using the Verify library.\n\nTesting is an important part of our software development pipeline. As developers, we often rely on familiar testing approaches like unit testing, where we assert the behavior of individual components of an application, and integration testing, where we combine components and verify the application’s overall behavior.\n\nHowever, using these approaches to test complex objects can be challenging as there is the risk of overlooking newly added components of these objects. This challenge can be handled with another known testing approach called snapshot testing.\n\nSupport Code Maze on Patreon to get rid of ads and get the best discounts on our products!\n\n[![Become a patron at Patreon!](https://code-maze.com/wp-content/plugins/patron-plugin-pro/plugin/lib/patron-button-and-widgets-by-codebard/images/become_a_patron_button.png)](https://www.patreon.com/oauth2/become-patron?response_type=code&amp;min_cents=100&amp;client_id=9_akhcsDQMGo-FTlVmNpM_uxSV4fbW3vnrz7CBRV9RxwjMPCLfWgodhrcE0UuHH4&amp;scope=identity%20identity[email]&amp;redirect_uri=https://code-maze.com/patreon-authorization/&amp;state=eyJmaW5hbF9yZWRpcmVjdF91cmkiOiJodHRwczpcL1wvY29kZS1tYXplLmNvbVwvaGF0ZW9hcy1hc3BuZXQtY29yZS13ZWItYXBpXC8ifQ%3D%3D&amp;utm_source=https%3A%2F%2Fcode-maze.com%2Fhateoas-aspnet-core-web-api%2F&amp;utm_medium=patreon_wordpress_plugin&amp;utm_campaign=11086160&amp;utm_term=&amp;utm_content=post_unlock_button)\n\nTo download the source code for this article, you can visit our [GitHub repository](https://github.com/CodeMazeBlog/CodeMazeGuides/tree/main/dotnet-testing/SnapshotTestingWithVerify).\n\nLet’s begin.\n\n## What Is Snapshot Testing?\n\n**Snapshot testing is a software** **testing technique that allows us to verify the state of objects**. It works by taking a snapshot of an object and storing it as a binary artifact, such as a file, which serves as the expected result. During each test execution, the current state of the object is compared to this expected result. If they match, the test passes. Otherwise, the test fails. We can find this approach very useful when we want to assert the content of files, API responses, UI component output, logs, and more.\n\nIn .NET, we can utilize the [Verify](https://github.com/VerifyTests/Verify) library created by Simon Cropp to implement a snapshot test in our application. This library simplifies the process of capturing, storing, and comparing snapshots by providing a seamless integration with popular testing frameworks like xUnit, NUnit, and others.\n\nDo you want to find out more about the testing frameworks? Our articles [Unit Testing with xUnit in ASP.NET Core](https://code-maze.com/aspnetcore-unit-testing-xunit/) and [Introduction to Unit Testing With NUnit in C#](https://code-maze.com/csharp-nunit-unit-testing/) cover all you need to know!\n\nVerify supports different object types, including text files, JSON, images, and custom objects, making it suitable for a wide range of testing scenarios. Additionally, Verify automatically manages the storage of our snapshots and offers intuitive failure messages when they do not match.\n\n## How Does Verify Perform Snapshot Testing?\n\n**When we use Verify to implement snapshot tests in our applications, the first execution of our test will fail**. Verify will then take a snapshot of our model, store it in a file, and prompt us to accept the snapshot if it correctly represents our object, or reject if it does not.\n\nAfter this initial setup, on subsequent runs of our test, if there are no changes to our object, the test will always pass. However, if we make any change to our model, the test will fail again, and Verify will prompt us to accept or reject the latest model snapshot.\n\nLet’s see this in action.\n\n## Using Verify With xUnit\n\nTo see Verify in action with xUnit, let’s first create a sample object that we want to test.\n\nFor this, let’s imagine we have an API endpoint that returns a `Vehicle` :\n\n``` public class Vehicle { public Guid Id { get; set; } public string? Make { get; set; } public string? Model { get; set; } public int Year { get; set; } public string? Color { get; set; } public Address? Location { get; set; } public List<string>? Features { get; set; } }\n\npublic record Address(string Street, string City, string State, string Country); ```\n\nNext, let’s create a method that returns a `Vehicle` object:\n\nIs this material useful to you? Consider subscribing and get **ASP.NET Core Web API Best Practices** eBook for [FREE!](https://code-maze.com/free-ebook-aspnetcore-webapi-best-practices/)\n\n``` public static Vehicle GetVehicle() => new() { Id = new(\"ebced679-45d3-4653-8791-3d969c4a986c\"), Make = \"Toyota\", Model = \"Camry\", Year = 2022, Color = \"Blue\", Location = new Address(\"123 Main St\", \"Anytown\", \"CA\", \"USA\"), Features = [ \"Sunroof\", \"4 Seats\", \"Navigation\" ], }; ```\n\nHere, we define a `GetVehicle()` method that creates and returns a `Vehicle` object. We will use verify to snapshot test this endpoint, to ensure it always returns the expected object.\n\n### Implement the Snapshot Test\n\nTo implement our test, first, we have to create an xUnit test project:\n\n`dotnet new xunit -n Tests`\n\nThen, we need to install the Verify package:\n\n`dotnet add package Verify.Xunit`\n\nOnce we have installed the package, we can define our test:\n\n``` public class VerifyVehicleTests { [Fact] public Task WhenGetVehicleIsCalled_ThenReturnsTheCorrectObject() { var vehicle = VehicleFactory.GetVehicle();\n\nreturn Verify(vehicle); } } ```\n\nWe first call the `GetVehicle()` method to return the vehicle object that we want to test. Then we invoke the `Verify()` method on this returned object to check if it is correctly serialized and matches the previously stored snapshot.\n\nNow, on the first execution of this test, it will fail because we are comparing our model with an empty file. At this point, Verify generates a `WhenGetVehicleIsCalled_ThenReturnsTheCorrectObject.received.txt` file:\n\n``` { Id: Guid_1, Make: Toyota, Model: Camry, Year: 2022, Color: Blue, Location: { Street: 123 Main St, City: Anytown, State: CA, Country: USA }, Features: [ Sunroof, 4 Seats, Navigation ] } ```\n\nThis file contains the serialized values of our object. After generating this file, Verify will prompt us to inspect and accept our model’s snapshot.\n\nIs this material useful to you? Consider subscribing and get **ASP.NET Core Web API Best Practices** eBook for [FREE!](https://code-maze.com/free-ebook-aspnetcore-webapi-best-practices/)\n\nThere are several techniques that we can use to accept a snapshot. In this article, we simply copy the snapshot from the received file and paste it into the verified file.\n\nNow, once we accept the snapshot and save the file our test will pass on subsequent runs. But if we make changes to the state of our object, the next execution of our test will fail. Verify will then prompt us to accept or reject the latest snapshot.\n\nSo, that’s it!\n\nSetting up and using Verify to assert the state of objects in our apps is a quick and straightforward process. With the Verify package, we can focus on implementing and testing functionalities efficiently rather than writing assertions for complex objects. Always remember that correctly managing and accepting snapshot files is crucial to ensuring that our tests are successful.\n\n## Conclusion\n\nIn this article, we have seen that snapshot tests are an effective way of catching changes to complex objects in our applications. We started by discussing what snapshot testing is and how it works. Then, we used the Verify package to implement a snapshot test and saw how to inspect and accept snapshots.\n\nWith snapshot tests, we can accurately detect and manage changes in our codebase, thereby ensuring the stability of our applications.\n\n[!\\[Code Maze Book Collection\\](https://code-maze.com/wp-content/uploads/2024/10/courses-template-wide.png)](https://courses.code-maze.com/courses/?source=bbanner&p=csharp-snapshot-testing-with-verify/)\n\nReady to take your skills to the next level? Jump into our high-impact courses in web development and software architecture, all with a focus on mastering the .NET/C# framework. Whether you're **building sleek web applications or designing scalable software solutions**, our expert-led training will give you the tools to succeed. Visit our **[COURSES](https://courses.code-maze.com/courses/?source=bbanner&p=csharp-snapshot-testing-with-verify/)** page now and kickstart your journey!\n\nIs this material useful to you? Consider subscribing and get **ASP.NET Core Web API Best Practices** eBook for [FREE!](https://code-maze.com/free-ebook-aspnetcore-webapi-best-practices/)\n\nLiked it? Take a second to support Code Maze on Patreon and get the ad free reading experience!\n\n[![Become a patron at Patreon!](https://code-maze.com/wp-content/plugins/patron-plugin-pro/plugin/lib/patron-button-and-widgets-by-codebard/images/become_a_patron_button.png)](https://www.patreon.com/oauth2/become-patron?response_type=code&min_cents=100&client_id=9_akhcsDQMGo-FTlVmNpM_uxSV4fbW3vnrz7CBRV9RxwjMPCLfWgodhrcE0UuHH4&scope=identity%20identity[email]&redirect_uri=https://code-maze.com/patreon-authorization/&state=eyJmaW5hbF9yZWRpcmVjdF91cmkiOiJodHRwczpcL1wvY29kZS1tYXplLmNvbVwvY3NoYXJwLXNuYXBzaG90LXRlc3Rpbmctd2l0aC12ZXJpZnlcLyJ9&utm_source=https%3A%2F%2Fcode-maze.com%2Fcsharp-snapshot-testing-with-verify%2F&utm_medium=patreon_wordpress_plugin&utm_campaign=11086160&utm_term=&utm_content=post_unlock_button)\n\nShare:\n\nhttp://www.facebook.com/sharer.php?u=https://code-maze.com/csharp-snapshot-testing-with-verify/&#038;t=How%20to%20Perform%20Snapshot%20Testing%20With%20Verify%20in%20C%23http://twitter.com/intent/tweet?text=How%20to%20Perform%20Snapshot%20Testing%20With%20Verify%20in%20C%23%20https://code-maze.com/csharp-snapshot-testing-with-verify/http://www.linkedin.com/shareArticle?mini=true&#038;url=https://code-maze.com/csharp-snapshot-testing-with-verify/&#038;title=How%20to%20Perform%20Snapshot%20Testing%20With%20Verify%20in%20C%23\n\n### Leave a reply [Cancel reply](/csharp-snapshot-testing-with-verify/#respond)\n\nYour email address will not be published. Required fields are marked \\*\n\nCOMMENT\n\nName \\*\n\nEmail \\*\n\nWebsite\n\n#### Courses – Code Maze\n\n[!\\[code maze courses side\\](https://code-maze.com/wp-content/uploads/2024/10/code-maze-courses-template-v3.png)](https://courses.code-maze.com/courses/)\n\nWhether you want to master web development or software architecture you should check our [COURSES](https://courses.code-maze.com/courses/) and pick the one that you like.\n\n#### Ad 1\n\n#### Ad 2\n\n#### Ad 3\n\n#### Ad 4",
  "PubDate": "2025-01-13T07:47:49+00:00"
}
