{
  "ProcessedDate": "2025-10-01 22:03:06",
  "Author": "Harald Binkle",
  "Title": "Using GitHub Copilot for Multiple Tasks in Parallel",
  "Description": "Discover how to break free from the sequential developer workflow and use GitHub Copilot, Copilot CLI and the coding agent to run multiple independent tasks in parallel—boosting your productivity and speeding up project delivery.",
  "FeedName": "Harald Binkle's blog",
  "PubDate": "2025-10-01T23:51:00+00:00",
  "OutputDir": "_posts",
  "Link": "https://harrybin.de/posts/parallel-github-copilot-workflow/",
  "Tags": [],
  "FeedUrl": "https://harrybin.de/rss.xml",
  "FeedLevelAuthor": "Harald Binkle",
  "EnhancedContent": "# Using GitHub Copilot for Multiple Tasks in Parallel\n\nPosted on:October 1, 2025 |  at 11:51 PM\n\n## Why Wait? Unlocking Parallelism with GitHub Copilot\n\nWhen working with GitHub Copilot, have you ever wondered: *Why do I have to wait for my current prompt to finish before starting the next task?* The traditional developer workflow is often sequential - one step at a time, waiting for each to complete. But what if you could break this pattern and run multiple independent tasks in parallel, letting Copilot do more for you, faster?\n\n## Table of contents\n\nOpen Table of contents\n\n- A Real-World Example: Bootstrapping a New Project\n- The Trick: Copilot CLI and Multiple Terminals\n- Four Copilots, One Developer\n- Try It Yourself!\n\n## A Real-World Example: Bootstrapping a New Project\n\nLet’s say you’re starting a new app or module. Here’s a typical to-do list:\n\n- Scaffold the project file structure (source code folders, config)\n- Add essential files: `README.md`\n, `LICENSE` , etc.\n- Implement initial logic, UI, or core features\n- Write project-specific Copilot instructions\n- Set up GitHub Actions workflows for CI/CD\n- Create documentation\n\nLooking at this list, you’ll notice several tasks are independent, they don’t need to wait for each other. So why not run them in parallel?\n\n## The Trick: Copilot CLI and Multiple Terminals\n\nHere’s an example how you can do it:\n\n1. **Scaffold the project structure**: Use Copilot (chat) to generate your folders and starter files. If you use a context-aware prompt (like context7), you’ll often get a `copilot-instructions`\nfile right away.\n2. **Open a terminal**: Install the [GitHub Copilot CLI](https://docs.github.com/en/copilot/github-copilot-cli/getting-started-with-github-copilot-cli) (having NodeJS installed)\n\n``` npm install -g @githubnext/github-copilot-cli ```\n\nand start a new Copilot CLI session using:\n\n``` copilot ```\n\n![copilot-cli](/assets/copilot-cli.webp)\n3. **You may open more terminals** and start a new Copilot CLI session in each terminal.\n\nNow, in one terminal, prompt Copilot CLI to create your `README.md` . In another, generate your `LICENSE` .\n\nIn a second start on documentation or config files. Each Copilot CLI instance works independently.\n4. **Commit early**: As soon as the basic structure is ready, make your initial git commit and push to GitHub. This unlocks even more automation.\n5. **Leverage the Copilot coding agent**: For tasks like setting up GitHub Actions workflows, use the Copilot **coding agent**. It runs asynchronously on the GitHub platform, so you can delegate long-running or background tasks while you keep working locally.\n![coding agent button](/assets/cp-coding-agent-button.webp)\n6. **Continue in parallel**: While **Copilot CLI** and the **coding agent** are working, you can still use Copilot chat for implementation details, bug fixes, or further enhancements.\n\n## Four Copilots, One Developer\n\nWith this approach, you can have:\n\n- Multiple Copilot CLI sessions (each in its own terminal)\n- Copilot chat in your editor\n- The Copilot coding agent running tasks asynchronously on GitHub\n\nThat’s up to four Copilots working for you at once supercharging your productivity and letting you focus on higher-level design and decision-making.\n\n## Try It Yourself!\n\nNext time you start a project, see how many Copilots you can coordinate in parallel. Break your work into independent tasks, open a few terminals, and let Copilot handle the busywork. You’ll be amazed at how much faster you can move.\n\n*How many Copilots can you manage at once? Let me know your record!*\n\n- [github-copilot](/tags/github-copilot)\n- [github-copilot-cli](/tags/github-copilot-cli)\n- [github-copilot-coding-agent](/tags/github-copilot-coding-agent)\n- [vscode](/tags/vscode)\n- [productivity](/tags/productivity)\n- [developer-tools](/tags/developer-tools)\n- [automation](/tags/automation)\n\nThis site uses cookies for analytics (Microsoft Clarity). By clicking Accept, you consent to the use of cookies for analytics purposes. See our [privacy policy](/privacy)."
}
