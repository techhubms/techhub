{
  "FeedLevelAuthor": "DevOps.com",
  "Tags": [
    "AI",
    "Blogs",
    "devops",
    "Features",
    "OX Security",
    "Social - Facebook",
    "Social - LinkedIn",
    "Social - X",
    "software engineering"
  ],
  "Author": "Mike Vizard",
  "FeedUrl": "https://devops.com/feed/",
  "EnhancedContent": "[![](https://devops.com/wp-content/uploads/2025/02/cropped-devops-logo.png)](https://devops.com/)\n\n# Sign up for our newsletter! Stay informed on the latest DevOps news\n\nAnalysis Identifies 10 AI Coding Tool Behaviors That Ignore Best Software Engineering Practices\n\nAn [analysis](https://www.prnewswire.com/news-releases/ox-report-ai-generated-code-violates-engineering-best-practices-undermining-software-security-at-scale-302592642.html) of more than 300 open source repositories published today by Ox Security, a provider of an application security posture management (ASPM) platform, identifies 10 systematic behaviors of artificial intelligence (AI) coding tools that ignore established best practices for software engineering.\n\nEyal Paz, vice president of research at OX Security, said that while policies can be put in place to ensure best practices are followed, the report makes it clear DevOps teams will need to validate the output of the code generated because of anti-patterns that AI coding tools are not capable of consistently avoiding.\n\nSpecifically, systematic behaviors that run afoul for best software engineering practices include:\n\n**Comments Everywhere**: Excessive inline commenting dramatically increases computational burden and makes code harder to check\n\n**By-The-Book Fixation**: Rigidly follows conventional rules, missing opportunities for more innovative, improved solutions\n\n**Over-Specification**: Creates hyper-specific, single-use solutions instead of generalizable, reusable components\n\n[![Techstrong Gang Youtube](https://securityboulevard.com/wp-content/uploads/2024/12/Techstrong-Gang-Youtube-PodcastV2-770.png)](https://youtu.be/Fojn5NFwaw8)\n\n[![Techstrong Gang Youtube](https://devops.com/wp-content/uploads/2025/03/770X330-DevOps-AppDev-Mar2025D.jpg)](https://info.futurumgroup.com/devops_appdev?utm_source=referral&utm_medium=in-article&utm_campaign=DevOps-Application-Report)\n\n[![Techstrong Gang Youtube](https://devops.com/wp-content/uploads/2025/03/770X330-DevOps-AppDev-Mar2025-2D.jpg)](https://info.futurumgroup.com/devops_appdev?utm_source=referral&utm_medium=in-article&utm_campaign=DevOps-Application-Report)\n\n**Avoidance of Refactors**: Generates functional code for immediate prompts but never refactors or architecturally improves existing code\n\n**Bugs Déjà-Vu**: Violates code reuse principles, causing identical bugs to recur throughout codebases, requiring redundant fixes\n\n**Worked on My Machine Syndrome**: Lacks deployment environment awareness, generating code that runs locally but fails in production\n\n**Return of Monoliths**: Defaults to tightly-coupled monolithic architectures, reversing decade-long progress toward microservices\n\n**Fake Test Coverage**: Inflates coverage metrics with meaningless tests rather than validating logic\n\n**Vanilla Style**: Reimplements from scratch instead of using established libraries, SDKs, or proven solutions\n\n**Phantom Bugs**: Over-engineers for improbable edge cases, causing performance degradation and resource waste\n\nThe degree to which AI coding tools are susceptible to these issues tends to vary. Issues such as Comments Everywhere, By-The-Book Fixation, Over-Specification and Avoidance of Refactors can be found in 80% of the code analyzed, according to the report. Phantom bugs are, in comparison, an issue that arises in 20 to 30% of the code generated.\n\nIn effect, AI coding tools are providing organizations with an army of junior developers that lack judgement and context, said Paz. In fact, it’s not until a senior developer that understands the nuance of writing code adheres to best practices that organizations really derive value from investments in AI coding tools that generate more code faster, noted Paz.\n\nThe challenge is that as more non-technical users and junior human developers are using AI coding tools to generate code, that code still needs to be reviewed by senior developers to ensure best practices are followed, he added. In fact, unlike human developers, an AI coding tool is never going to question the validity of the task being assigned and will in many instances continue to, for example, generate false unit tests unless specifically told to desist, noted Paz\n\nOn the plus side, however, the report surprisingly finds that AI coding tools are not generating any more security vulnerabilities than human developers. Instead, DevOps teams are simply being overwhelmed by vulnerabilities as the total amount of code being generated exponentially increases, said Paz.\n\nThe only way to effectively respond to that onslaught is to build security instruction sets directly into AI coding processes rather than continuing to rely on security reviews that can’t be conducted at the level of scale required, he noted.\n\nEach DevOps team will, depending on the use case, need to determine for itself to what degree to rely on the output generated by AI coding tools, but the one thing that is clear is that many of these tools if left ungoverned may turn out to be far too much of what otherwise might be a potentially good thing.\n\nhttps://www.addtoany.com/add_to/x?linkurl=https%3A%2F%2Fdevops.com%2Fanalysis-identifies-10-ai-coding-tool-behaviors-that-ignore-best-software-engineering-practices%2F&amp;linkname=Analysis%20Identifies%2010%20AI%20Coding%20Tool%20Behaviors%20That%20Ignore%20Best%20Software%20Engineering%20Practiceshttps://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevops.com%2Fanalysis-identifies-10-ai-coding-tool-behaviors-that-ignore-best-software-engineering-practices%2F&amp;linkname=Analysis%20Identifies%2010%20AI%20Coding%20Tool%20Behaviors%20That%20Ignore%20Best%20Software%20Engineering%20Practiceshttps://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevops.com%2Fanalysis-identifies-10-ai-coding-tool-behaviors-that-ignore-best-software-engineering-practices%2F&amp;linkname=Analysis%20Identifies%2010%20AI%20Coding%20Tool%20Behaviors%20That%20Ignore%20Best%20Software%20Engineering%20Practiceshttps://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevops.com%2Fanalysis-identifies-10-ai-coding-tool-behaviors-that-ignore-best-software-engineering-practices%2F&amp;linkname=Analysis%20Identifies%2010%20AI%20Coding%20Tool%20Behaviors%20That%20Ignore%20Best%20Software%20Engineering%20Practiceshttps://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevops.com%2Fanalysis-identifies-10-ai-coding-tool-behaviors-that-ignore-best-software-engineering-practices%2F&amp;linkname=Analysis%20Identifies%2010%20AI%20Coding%20Tool%20Behaviors%20That%20Ignore%20Best%20Software%20Engineering%20Practiceshttps://www.addtoany.com/share\n\nhttps://www.addtoany.com/add_to/x?linkurl=https%3A%2F%2Fdevops.com%2Fanalysis-identifies-10-ai-coding-tool-behaviors-that-ignore-best-software-engineering-practices%2F&amp;linkname=Analysis%20Identifies%2010%20AI%20Coding%20Tool%20Behaviors%20That%20Ignore%20Best%20Software%20Engineering%20Practices%20-%20DevOps.comhttps://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevops.com%2Fanalysis-identifies-10-ai-coding-tool-behaviors-that-ignore-best-software-engineering-practices%2F&amp;linkname=Analysis%20Identifies%2010%20AI%20Coding%20Tool%20Behaviors%20That%20Ignore%20Best%20Software%20Engineering%20Practices%20-%20DevOps.comhttps://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevops.com%2Fanalysis-identifies-10-ai-coding-tool-behaviors-that-ignore-best-software-engineering-practices%2F&amp;linkname=Analysis%20Identifies%2010%20AI%20Coding%20Tool%20Behaviors%20That%20Ignore%20Best%20Software%20Engineering%20Practices%20-%20DevOps.comhttps://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevops.com%2Fanalysis-identifies-10-ai-coding-tool-behaviors-that-ignore-best-software-engineering-practices%2F&amp;linkname=Analysis%20Identifies%2010%20AI%20Coding%20Tool%20Behaviors%20That%20Ignore%20Best%20Software%20Engineering%20Practices%20-%20DevOps.comhttps://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevops.com%2Fanalysis-identifies-10-ai-coding-tool-behaviors-that-ignore-best-software-engineering-practices%2F&amp;linkname=Analysis%20Identifies%2010%20AI%20Coding%20Tool%20Behaviors%20That%20Ignore%20Best%20Software%20Engineering%20Practices%20-%20DevOps.comhttps://www.addtoany.com/share\n\n[« Harness Adds Vibecoding Tool to Migrate Databases Within DevOps Workflows](https://devops.com/harness-adds-vibecoding-tool-to-migrate-databases-within-devops-workflows/)\n\n[![](https://devops.com/wp-content/uploads/2024/11/Copy-of-DO-Banners-1540x660-1.png)](https://webinars.devops.com/in-article-newsletter-popup)\n\n×",
  "Link": "https://devops.com/analysis-identifies-10-ai-coding-tool-behaviors-that-ignore-best-software-engineering-practices/",
  "FeedName": "DevOps Blog",
  "PubDate": "2025-10-23T17:51:27+00:00",
  "ProcessedDate": "2025-10-23 19:04:06",
  "Description": "![](https://devops.com/wp-content/uploads/2025/10/770-330-2025-10-23T135216.281.png)\n\n![](https://devops.com/wp-content/uploads/2025/10/770-330-2025-10-23T135216.281-150x150.png)An analysis of more than 300 open source repositories published today by Ox Security, a provider of an application security posture management (ASPM) platform, identifies 10 systematic behaviors of artificial intelligence (AI) coding tools that ignore established best practices for software engineering. Eyal Paz, vice president of research at OX Security, said that while policies […]",
  "OutputDir": "_posts",
  "Title": "Analysis Identifies 10 AI Coding Tool Behaviors That Ignore Best Software Engineering Practices"
}
