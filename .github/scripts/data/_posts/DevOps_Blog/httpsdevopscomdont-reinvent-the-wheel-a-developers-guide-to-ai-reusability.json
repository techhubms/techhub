{
  "Author": "Daniel Helfand",
  "Tags": [
    "agentic AI",
    "AI",
    "AI in software engineering",
    "AI model versioning",
    "AI platform engineering",
    "AI reusability",
    "AI reuse framework",
    "AI workflow management",
    "AI workflow standardization",
    "AI-driven developer productivity",
    "Blogs",
    "Business of DevOps",
    "CI/CD AI",
    "Contributed Content",
    "devsecops automation",
    "reusable AI workflows",
    "Social - Facebook",
    "Social - LinkedIn",
    "Social - X",
    "software catalog for AI"
  ],
  "FeedUrl": "https://devops.com/feed/",
  "Title": "Don’t Reinvent the Wheel: A Developer’s Guide to AI Reusability",
  "FeedLevelAuthor": "DevOps.com",
  "Link": "https://devops.com/dont-reinvent-the-wheel-a-developers-guide-to-ai-reusability/",
  "PubDate": "2025-10-24T08:02:18+00:00",
  "OutputDir": "_posts",
  "EnhancedContent": "[![](https://devops.com/wp-content/uploads/2025/02/cropped-devops-logo.png)](https://devops.com/)\n\n# Sign up for our newsletter! Stay informed on the latest DevOps news\n\nDon’t Reinvent the Wheel: A Developer’s Guide to AI Reusability\n\nEvery great innovation brings on new challenges, and AI is no exception. As technology leaders instruct their workforces to default to using AI in their day-to-day tasks and as [AI workflows become increasingly critical to software engineering practices](https://devops.com/why-you-shouldnt-forget-workflows-with-agentic-ai-systems/), a familiar challenge persists: reusability.\n\nThere are libraries, packages and shared components available for reuse with traditional software, but developers are currently being tasked with building AI workflows from scratch. Having multiple developers within one organization writing the same AI prompts and workflows is inefficient, wastes resources, can result in inconsistent outcomes, and potentially hinders wider adoption of AI.\n\nThe solution is applying standard software engineering principles to AI: Build once, reuse everywhere. In this post, we will cover some of the ways we have been thinking about the challenge of AI reusability at GitLab.\n\n### The Problem With Current AI Development Practices\n\nWhether it’s a chat experience, a remotely executed AI workflow, or local code suggestions, developers have many opportunities to bring AI into their work.\n\nAs organizations encourage the increased use of AI in daily workflows, developers have largely been left to figure out how to utilize AI on their own. Broadly, there is very little guidance available on what works well in the context of an organization’s development practices.\n\nAs detailed in the soon-to-be-published 2025 GitLab DevSecOps Report, 85% of DevSecOps professionals agree that “Agentic AI will be most successful when implemented in a platform engineering approach.” When AI can be packaged and easily consumed by developers in a self-service way, it will help developers quickly onboard to AI experiences, share best practices, and maintain AI workflows via strong developer communities.\n\n[![Techstrong Gang Youtube](https://securityboulevard.com/wp-content/uploads/2024/12/Techstrong-Gang-Youtube-PodcastV2-770.png)](https://youtu.be/Fojn5NFwaw8)\n\n[![Techstrong Gang Youtube](https://devops.com/wp-content/uploads/2025/03/770X330-DevOps-AppDev-Mar2025D.jpg)](https://info.futurumgroup.com/devops_appdev?utm_source=referral&utm_medium=in-article&utm_campaign=DevOps-Application-Report)\n\n[![Techstrong Gang Youtube](https://devops.com/wp-content/uploads/2025/03/770X330-DevOps-AppDev-Mar2025-2D.jpg)](https://info.futurumgroup.com/devops_appdev?utm_source=referral&utm_medium=in-article&utm_campaign=DevOps-Application-Report)\n\nOrganizations will be rewarded for their investment in this area with saved time for their development teams, cost savings from optimizing AI workflows, and the ability to deliver better results faster for customers. But what does it actually mean to make AI reusable?\n\n### Key Considerations for Making AI Reusable\n\nThere are several key considerations to keep in mind when creating reusable AI workflows. Let’s walk through the process of creating a reusable workflow using a common developer productivity issue as an example, and use this process to help developers fix failing pipelines more efficiently.\n\n**Step 1: Identify time-consuming developer workflows**\n\nOne of the most common challenges developers face when using any CI/CD tool is the need to fix failing pipelines. This is a time-consuming task that requires looking through CI/CD logs, understanding the pipeline configuration, and iterating on potential solutions.\n\n**Step 2: Provide the appropriate context and permissions that will help focus AI models**\n\nBy providing AI with lowest-level access to code repositories and CI/CD logs, along with a detailed system prompt, testing can be conducted to see how well AI handles different kinds of pipeline failures.\n\n**Step 3: Verify how well AI handles the task**\n\nAs initial testing is conducted, access, context, tools, and prompts can be tweaked to produce better fixes. After testing AI’s ability to address pipeline failures, the next consideration is ensuring anyone can use this approach consistently.\n\n**Step 4: Define what hardware and tools can execute the AI workflow**\n\nWhat hardware is available to run this AI workflow reliably and with easy access? A common pattern is to use CI/CD jobs to remotely execute AI workflows, providing consistent tooling, prompts, and context.\n\nFor this particular workflow, CI/CD jobs enable the cloning of code repositories, installation of tools on underlying hardware, issuing API calls to AI models, and providing access tokens that grant the necessary permissions to suggest pipeline fixes back to a code repository. While CI/CD is one mechanism for executing AI workflows, organizations have many hardware options to consider.\n\n**Step 5: Version the workflow**\n\nVersioning becomes critical once the workflow is operational. For the pipeline fix workflow, consider what needs to be tracked: Which version of the AI model produces the best results for different failure types? What specific system prompt led to improvements in fix accuracy? Which tool versions are installed in the CI/CD environment?\n\nEach tool used, the AI model version, hardware specification, system prompt, and even sample context data should be versioned together as a cohesive unit. This ensures that developers get a tested and reliable combination of all these elements.\n\n### Discoverability and Community\n\nOnce you have a strong process in place that others can benefit from, the next step is to make it findable. One suggestion is to apply an old idea to this new AI context: Software catalogs.\n\nThe idea behind a catalog is to make it easy for developers to search for what already exists. This should be the first step any development team takes before creating something new. As the old saying goes, let’s not reinvent the wheel.\n\nSoftware catalogs have been a popular tool for promoting reusability across various areas of software development. For example, organizations have leveraged service catalogs to promote the reuse of APIs, CI/CD catalogs to share CI/CD best practices across the organization, and configuration catalogs to share infrastructure setups.\n\nAI workflows need this same experience. Having a central location for all existing organizational information is crucial for facilitating AI adoption. It also helps promote community-driven development. Open source and inner source practices are not going to immediately change as a result of AI. When AI workflows are available to view and use, developers will contribute to improving the experience for themselves and others.\n\nWhether you use a catalog experience or another way of centralizing AI workflows, it is important to think about how developers will find and contribute to already existing ideas for AI.\n\nTreating AI workflows as reusable engineering assets rather than one-off implementations will accelerate AI adoption and improve consistency across development teams. Standard software engineering practices (modularization, packaging, versioning, and community contribution) apply directly to AI workflow development. Just as it is important to encourage AI usage throughout an organization, organizations must invest in frameworks that make it easy to discover and contribute to existing AI innovations.\n\nhttps://www.addtoany.com/add_to/x?linkurl=https%3A%2F%2Fdevops.com%2Fdont-reinvent-the-wheel-a-developers-guide-to-ai-reusability%2F&amp;linkname=Don%E2%80%99t%20Reinvent%20the%20Wheel%3A%20A%20Developer%E2%80%99s%20Guide%20to%20AI%20Reusability%C2%A0https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevops.com%2Fdont-reinvent-the-wheel-a-developers-guide-to-ai-reusability%2F&amp;linkname=Don%E2%80%99t%20Reinvent%20the%20Wheel%3A%20A%20Developer%E2%80%99s%20Guide%20to%20AI%20Reusability%C2%A0https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevops.com%2Fdont-reinvent-the-wheel-a-developers-guide-to-ai-reusability%2F&amp;linkname=Don%E2%80%99t%20Reinvent%20the%20Wheel%3A%20A%20Developer%E2%80%99s%20Guide%20to%20AI%20Reusability%C2%A0https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevops.com%2Fdont-reinvent-the-wheel-a-developers-guide-to-ai-reusability%2F&amp;linkname=Don%E2%80%99t%20Reinvent%20the%20Wheel%3A%20A%20Developer%E2%80%99s%20Guide%20to%20AI%20Reusability%C2%A0https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevops.com%2Fdont-reinvent-the-wheel-a-developers-guide-to-ai-reusability%2F&amp;linkname=Don%E2%80%99t%20Reinvent%20the%20Wheel%3A%20A%20Developer%E2%80%99s%20Guide%20to%20AI%20Reusability%C2%A0https://www.addtoany.com/share\n\nhttps://www.addtoany.com/add_to/x?linkurl=https%3A%2F%2Fdevops.com%2Fdont-reinvent-the-wheel-a-developers-guide-to-ai-reusability%2F&amp;linkname=Don%26%23039%3Bt%20Reinvent%20the%20Wheel%3A%20A%20Developer%26%23039%3Bs%20Guide%20to%20AI%20Reusability%C2%A0%20-%20DevOps.comhttps://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevops.com%2Fdont-reinvent-the-wheel-a-developers-guide-to-ai-reusability%2F&amp;linkname=Don%26%23039%3Bt%20Reinvent%20the%20Wheel%3A%20A%20Developer%26%23039%3Bs%20Guide%20to%20AI%20Reusability%C2%A0%20-%20DevOps.comhttps://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevops.com%2Fdont-reinvent-the-wheel-a-developers-guide-to-ai-reusability%2F&amp;linkname=Don%26%23039%3Bt%20Reinvent%20the%20Wheel%3A%20A%20Developer%26%23039%3Bs%20Guide%20to%20AI%20Reusability%C2%A0%20-%20DevOps.comhttps://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevops.com%2Fdont-reinvent-the-wheel-a-developers-guide-to-ai-reusability%2F&amp;linkname=Don%26%23039%3Bt%20Reinvent%20the%20Wheel%3A%20A%20Developer%26%23039%3Bs%20Guide%20to%20AI%20Reusability%C2%A0%20-%20DevOps.comhttps://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevops.com%2Fdont-reinvent-the-wheel-a-developers-guide-to-ai-reusability%2F&amp;linkname=Don%26%23039%3Bt%20Reinvent%20the%20Wheel%3A%20A%20Developer%26%23039%3Bs%20Guide%20to%20AI%20Reusability%C2%A0%20-%20DevOps.comhttps://www.addtoany.com/share\n\n[« The New Metrics of DevOps: Speed, Trust and Transparency](https://devops.com/the-new-metrics-of-devops-speed-trust-and-transparency/)\n\n[Rewriting the Rules of Software Quality: Why Agentic QA is the Future CIOs Must Champion »](https://devops.com/rewriting-the-rules-of-software-quality-why-agentic-qa-is-the-future-cios-must-champion/)\n\n[![](https://devops.com/wp-content/uploads/2024/11/Copy-of-DO-Banners-1540x660-1.png)](https://webinars.devops.com/in-article-newsletter-popup)\n\n×",
  "Description": "![](https://devops.com/wp-content/uploads/2025/05/DevOps-and-AIOps-1.jpg)\n\n![](https://devops.com/wp-content/uploads/2025/05/DevOps-and-AIOps-1-150x150.jpg)Every great innovation brings on new challenges, and AI is no exception. As technology leaders instruct their workforces to default to using AI in their day-to-day tasks and as AI workflows become increasingly critical to software engineering practices, a familiar challenge persists: reusability. There are libraries, packages and shared components available for reuse with traditional […]",
  "ProcessedDate": "2025-10-25 02:28:58",
  "FeedName": "DevOps Blog"
}
