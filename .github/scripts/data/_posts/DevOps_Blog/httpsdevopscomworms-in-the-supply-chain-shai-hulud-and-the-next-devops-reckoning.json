{
  "FeedLevelAuthor": "DevOps.com",
  "Tags": [
    "artifact provenance",
    "Blogs",
    "Business of DevOps",
    "CI/CD security",
    "continuous verification",
    "credential theft",
    "devops security",
    "DevSecOps",
    "Features",
    "GitHub tokens",
    "npm malware",
    "OIDC",
    "pipeline security",
    "SBoM",
    "Secure software delivery",
    "Shai-Hulud worm",
    "short-lived tokens",
    "Social - Facebook",
    "Social - LinkedIn",
    "Social - X",
    "Software Supply Chain",
    "supply chain attack"
  ],
  "Author": "Alan Shimel",
  "Title": "Worms in the Supply Chain: Shai-Hulud and the Next DevOps Reckoning",
  "PubDate": "2025-10-01T09:23:26+00:00",
  "Description": "![supply chain, software, Checkmarx, data, Endor, SCA, supply chain, security, workflows, supply chain, software, supply chain security, appsec, polyfill, software, supply chains, DevOps, DevSecOps, Google supply chain](https://devops.com/wp-content/uploads/2020/08/Overheard-at-CloudBees-Connect-The-Reality-of-Delivering-Modern-Software.jpg)\n\n![supply chain, software, Checkmarx, data, Endor, SCA, supply chain, security, workflows, supply chain, software, supply chain security, appsec, polyfill, software, supply chains, DevOps, DevSecOps, Google supply chain](https://devops.com/wp-content/uploads/2020/08/Overheard-at-CloudBees-Connect-The-Reality-of-Delivering-Modern-Software-150x150.jpg)DevOps was supposed to make software delivery faster, safer and more reliable. For the most part, it has. But every so often, something nasty crawls out of the shadows and reminds us how fragile the system really is. It wasn’t a zero-day in Kubernetes or a cloud misconfiguration that caught my eye. It was a […]",
  "Link": "https://devops.com/worms-in-the-supply-chain-shai-hulud-and-the-next-devops-reckoning/",
  "FeedUrl": "https://devops.com/feed/",
  "EnhancedContent": "[![](https://devops.com/wp-content/uploads/2025/02/cropped-devops-logo.png)](https://devops.com/)\n\n# Sign up for our newsletter! Stay informed on the latest DevOps news\n\nWorms in the Supply Chain: Shai-Hulud and the Next DevOps Reckoning\n\nDevOps was supposed to make software delivery faster, safer and more reliable. For the most part, it has. But every so often, something nasty crawls out of the shadows and reminds us how fragile the system really is.\n\nIt wasn’t a zero-day in Kubernetes or a cloud misconfiguration that caught my eye. It was a worm. Not a metaphorical one, not a cute “bug.” A self-replicating, credential-stealing worm slithering through npm, GitHub, and CI/CD pipelines. Its name: [Shai-Hulud](https://devops.com/shai-hulud-attacks-shake-software-supply-chain-security-confidence/), after the sandworms of Dune. And like those great worms of Arrakis, this one tunneled through the ground beneath our feet — our supply chain.\n\n### **How Shai-Hulud Struck**\n\nSecurity researchers at Wiz, Zscaler and StepSecurity described how the worm infected 200+ npm packages and over 500 versions in just a few days. Some of those packages had millions of weekly downloads.\n\nOnce installed, the malware pulled in TruffleHog to scan for secrets in environment variables and config files. It stole GitHub tokens, dumped them into a public repo called Shai-Hulud, and then planted malicious GitHub Actions workflows for persistence. In some cases, it even migrated private repos to public forks — broadcasting secrets to the world.\n\nCharlie Eriksen from Aikido summed it up: “At least 187 code packages … have been infected with a self-replicating worm that steals credentials from developers and publishes those secrets on GitHub.” That’s not a nuisance. That’s a supply chain wildfire.\n\n### **Why This is a DevOps Problem**\n\nYou could argue this is just another npm mess. “Don’t use random packages,” “lock dependencies,” “scan for secrets.” We’ve heard it all before. But if you’re in DevOps, you can’t shrug this one off.\n\n[![Techstrong Gang Youtube](https://securityboulevard.com/wp-content/uploads/2024/12/Techstrong-Gang-Youtube-PodcastV2-770.png)](https://youtu.be/Fojn5NFwaw8)\n\n[![Techstrong Gang Youtube](https://devops.com/wp-content/uploads/2025/03/770X330-DevOps-AppDev-Mar2025D.jpg)](https://info.futurumgroup.com/devops_appdev?utm_source=referral&utm_medium=in-article&utm_campaign=DevOps-Application-Report)\n\n[![Techstrong Gang Youtube](https://devops.com/wp-content/uploads/2025/03/770X330-DevOps-AppDev-Mar2025-2D.jpg)](https://info.futurumgroup.com/devops_appdev?utm_source=referral&utm_medium=in-article&utm_campaign=DevOps-Application-Report)\n\nWhy? Because Shai-Hulud didn’t just target developers at their laptops. It went straight after the DevOps machinery: the pipelines, the tokens, the workflows. That’s our house. That’s our responsibility.\n\nThink about what DevOps has become. CI/CD pipelines aren’t side projects — they’re the factories. Every commit goes in, every release comes out. If attackers compromise that factory, they don’t just own one app, they own everything that factory produces.\n\nThis worm was tailor-made for that reality.\n\n### **Lessons for the DevOps Community**\n\nSo what do we do about it? A few takeaways hit me square in the face:\n\n1. Long-lived tokens are suicide notes. If your pipelines still rely on credentials that never expire, you’re inviting attackers to take up permanent residence. Shift to OIDC or short-lived tokens.\n2. Pipelines must be locked down. Too many orgs let builds run with full internet access, install scripts from who-knows-where, and treat CI environments as disposable. They’re not disposable—they’re crown jewels. Lock them down.\n3. Provenance is not optional. If you can’t prove where an artifact came from, you shouldn’t be shipping it. Signed builds, SBOMs, attestations — call it bureaucracy if you want, but it’s the only way to stop worms from tunneling in.\n4. Golden paths need teeth. DevOps teams love paved roads, but paved roads without guardrails are just fast lanes to compromise. Harden your templates. Don’t make security an optional checkbox.\n5. Continuous verification beats once-a-year audits. Secret scanning, anomaly detection, policy enforcement — these need to be continuous. A worm doesn’t wait for your quarterly review.\n\n### **A Pattern We’ve Seen Before**\n\nIf all this feels eerily familiar, it should. Every era of computing has had its worm moment. Networks had SQL Slammer. Email had ILOVEYOU. Mobile had Stagefright. And now, the DevOps era has Shai-Hulud.\n\nThe pattern is always the same: systems grow fast, guardrails lag, and attackers exploit the gap. Worms are the blunt instruments that expose just how thin our defenses really are.\n\n### **Shimmy’s Take**\n\nFor me, Shai-Hulud is more than a clever name in the npm registry. It’s a warning shot across the bow of DevOps. We’ve built incredible factories of automation, but too many of them are made of cardboard and duct tape.\n\nThe bad news? Worms thrive in that environment. The good news? We know what to do. Kill the zombie tokens. Lock down the build rooms. Demand provenance. Make golden paths truly golden.\n\nDevOps was always supposed to be about culture and discipline, not just tooling. Shai-Hulud is reminding us of that in the harshest way possible. If we treat pipelines as disposable plumbing, they’ll fail us. If we treat them as infrastructure, they can withstand worms.\n\nThe spice — the code — must flow. But it’s up to us in DevOps to make sure it flows safely, not straight into the desert for the worms to feast on.\n\nhttps://www.addtoany.com/add_to/x?linkurl=https%3A%2F%2Fdevops.com%2Fworms-in-the-supply-chain-shai-hulud-and-the-next-devops-reckoning%2F&amp;linkname=Worms%20in%20the%20Supply%20Chain%3A%20Shai-Hulud%20and%20the%20Next%20DevOps%20Reckoninghttps://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevops.com%2Fworms-in-the-supply-chain-shai-hulud-and-the-next-devops-reckoning%2F&amp;linkname=Worms%20in%20the%20Supply%20Chain%3A%20Shai-Hulud%20and%20the%20Next%20DevOps%20Reckoninghttps://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevops.com%2Fworms-in-the-supply-chain-shai-hulud-and-the-next-devops-reckoning%2F&amp;linkname=Worms%20in%20the%20Supply%20Chain%3A%20Shai-Hulud%20and%20the%20Next%20DevOps%20Reckoninghttps://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevops.com%2Fworms-in-the-supply-chain-shai-hulud-and-the-next-devops-reckoning%2F&amp;linkname=Worms%20in%20the%20Supply%20Chain%3A%20Shai-Hulud%20and%20the%20Next%20DevOps%20Reckoninghttps://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevops.com%2Fworms-in-the-supply-chain-shai-hulud-and-the-next-devops-reckoning%2F&amp;linkname=Worms%20in%20the%20Supply%20Chain%3A%20Shai-Hulud%20and%20the%20Next%20DevOps%20Reckoninghttps://www.addtoany.com/share\n\nhttps://www.addtoany.com/add_to/x?linkurl=https%3A%2F%2Fdevops.com%2Fworms-in-the-supply-chain-shai-hulud-and-the-next-devops-reckoning%2F&amp;linkname=Worms%20in%20the%20Supply%20Chain%3A%20Shai-Hulud%20and%20the%20Next%20DevOps%20Reckoning%20-%20DevOps.comhttps://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevops.com%2Fworms-in-the-supply-chain-shai-hulud-and-the-next-devops-reckoning%2F&amp;linkname=Worms%20in%20the%20Supply%20Chain%3A%20Shai-Hulud%20and%20the%20Next%20DevOps%20Reckoning%20-%20DevOps.comhttps://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevops.com%2Fworms-in-the-supply-chain-shai-hulud-and-the-next-devops-reckoning%2F&amp;linkname=Worms%20in%20the%20Supply%20Chain%3A%20Shai-Hulud%20and%20the%20Next%20DevOps%20Reckoning%20-%20DevOps.comhttps://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevops.com%2Fworms-in-the-supply-chain-shai-hulud-and-the-next-devops-reckoning%2F&amp;linkname=Worms%20in%20the%20Supply%20Chain%3A%20Shai-Hulud%20and%20the%20Next%20DevOps%20Reckoning%20-%20DevOps.comhttps://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevops.com%2Fworms-in-the-supply-chain-shai-hulud-and-the-next-devops-reckoning%2F&amp;linkname=Worms%20in%20the%20Supply%20Chain%3A%20Shai-Hulud%20and%20the%20Next%20DevOps%20Reckoning%20-%20DevOps.comhttps://www.addtoany.com/share\n\n[« How Model Context Protocol (MCP) is Fueling the Next Era of Developer Productivity](https://devops.com/how-model-context-protocol-mcp-is-fueling-the-next-era-of-developer-productivity/)\n\n[NLP Tools for Intelligent Documentation and Developer Enablement »](https://devops.com/nlp-tools-for-intelligent-documentation-and-developer-enablement/)\n\n[![](https://devops.com/wp-content/uploads/2024/11/Copy-of-DO-Banners-1540x660-1.png)](https://webinars.devops.com/in-article-newsletter-popup)\n\n×",
  "FeedName": "DevOps Blog",
  "ProcessedDate": "2025-10-01 21:03:27",
  "OutputDir": "_posts"
}
