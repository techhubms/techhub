{
  "Title": "Establishing Visibility and Governance for Your Software Supply Chain",
  "Description": "![supply chain, software, Checkmarx, data, Endor, SCA, supply chain, security, workflows, supply chain, software, supply chain security, appsec, polyfill, software, supply chains, DevOps, DevSecOps, Google supply chain](https://devops.com/wp-content/uploads/2020/08/Overheard-at-CloudBees-Connect-The-Reality-of-Delivering-Modern-Software.jpg)\n\n![supply chain, software, Checkmarx, data, Endor, SCA, supply chain, security, workflows, supply chain, software, supply chain security, appsec, polyfill, software, supply chains, DevOps, DevSecOps, Google supply chain](https://devops.com/wp-content/uploads/2020/08/Overheard-at-CloudBees-Connect-The-Reality-of-Delivering-Modern-Software-150x150.jpg)Asset visibility and cloud governance start with SBOMs, VEX, and provenance tracking. Learn how to secure your software supply chain.",
  "Tags": [
    "application security",
    "asset visibility",
    "attack surface management",
    "Blogs",
    "build-time security",
    "Business of DevOps",
    "Cloud Governance",
    "context-aware security",
    "Contributed Content",
    "cybersecurity governance",
    "dependency tracking",
    "eBPF runtime analysis",
    "Kubernetes Gatekeeper",
    "Log4Shell",
    "open source security",
    "provenance attestation",
    "risk reduction",
    "SBoM",
    "SBOM automation",
    "secure software development",
    "SLSA",
    "Social - Facebook",
    "Social - LinkedIn",
    "Social - X",
    "software bill of materials",
    "software provenance",
    "Software Supply Chain Security",
    "supply chain risk",
    "Third-party Dependencies",
    "VEX",
    "vulnerability management",
    "vulnerability prioritization"
  ],
  "PubDate": "2025-10-14T12:27:14+00:00",
  "OutputDir": "_posts",
  "ProcessedDate": "2025-10-14 14:03:40",
  "EnhancedContent": "[![](https://devops.com/wp-content/uploads/2025/02/cropped-devops-logo.png)](https://devops.com/)\n\n# Sign up for our newsletter! Stay informed on the latest DevOps news\n\nEstablishing Visibility and Governance for Your Software Supply Chain\n\nAmong the top cybersecurity projects for CSOs in 2025 is “establishing asset visibility and strong cloud governance.” But what does this mean in practice? Many organizations have a good handle on their data storage and compute infrastructure. However, while they may know which virtual servers or serverless platforms are in use, they often don’t know what’s in the applications that are running. The Log4Shell vulnerability was a wakeup call: companies scrambled — and often failed — to find all affected systems.\n\n### Why it Matters\n\nThe pace and sophistication of attacks continue to increase. The model of a lone hoodie-wearing hacker sitting in a dark room defacing websites doesn’t represent the modern threat landscape. Attackers are large, organized operations, often crime rings or even nation-states. They’re not just going after the easy targets; they’re going after impactful targets: companies that can afford to pay large ransoms, critical infrastructure controls, and government databases. Sometimes the motivation is purely financial, sometimes it’s geopolitical. Either way, attackers are well-resourced and determined.\n\nEven if your organization isn’t the direct target, you can fall victim to attackers. A supply chain attack designed to gain access to a bank, for example, could also poison your supply chain. The attackers will gladly take your customer information or hold your servers hostage to ransomware.\n\nModern software supply chains are incredibly complex webs of third-party code. To properly secure the supply chain, organizations must first gain visibility into all of the components that go into their applications. This is necessary not just on a per-application basis, but across the entire portfolio. From there, organizations can make prioritization decisions based on context and set automated policy enforcement to ensure that applications are securely developed and deployed.\n\nSecurity requires constant vigilance, and vigilance requires visibility. How can you hope to secure what you can’t see? That means you need to know what goes into your software and you need to know where that software is running. The faster you can start fixing vulnerabilities instead of looking for them, the quicker you’re protected against the latest attack.\n\n### Challenges in Securing Your Supply Chain\n\nMost of your software isn’t yours. In other words, your employees didn’t write it; they brought in third-party dependencies. Whether from vendors or open source projects, these libraries provide a foundation that allows your developers to focus on the differentiated functionality that your company provides, which speeds your innovation and delivery.\n\n[![Techstrong Gang Youtube](https://securityboulevard.com/wp-content/uploads/2024/12/Techstrong-Gang-Youtube-PodcastV2-770.png)](https://youtu.be/Fojn5NFwaw8)\n\n[![Techstrong Gang Youtube](https://devops.com/wp-content/uploads/2025/03/770X330-DevOps-AppDev-Mar2025D.jpg)](https://info.futurumgroup.com/devops_appdev?utm_source=referral&utm_medium=in-article&utm_campaign=DevOps-Application-Report)\n\n[![Techstrong Gang Youtube](https://devops.com/wp-content/uploads/2025/03/770X330-DevOps-AppDev-Mar2025-2D.jpg)](https://info.futurumgroup.com/devops_appdev?utm_source=referral&utm_medium=in-article&utm_campaign=DevOps-Application-Report)\n\nThe tradeoff for this increased speed is taking on the risk of your dependencies’ security posture. Do you know what vulnerabilities exist in your dependencies? If you do, you can’t necessarily fix them yourself. Even if you have a good relationship with the providers of your direct dependencies, they have their own dependencies, and these transitive dependencies can number in the hundreds and be several layers deep. How do you track all of those dependencies for vulnerabilities?\n\nOnce you know what [vulnerabilities exist in your supply chain](https://devops.com/securing-the-software-supply-chain-with-full-visibility-and-compliance/), do you know where the vulnerable versions are deployed? 10 days after the Log4Shell vulnerability was announced, less than half of the publicly-reachable vulnerable applications had been patched. That’s a big window for attackers.\n\nKnowing where all of the vulnerable applications are running doesn’t give you the full picture. Just because an application contains a vulnerability doesn’t mean the vulnerable part of the code is used. It may be the case that your application doesn’t call the vulnerable code path or that the vulnerability is conditional on a configuration that you’re not using. While you may still want to address the vulnerability, it’s not as high a priority if it doesn’t affect your current application portfolio.\n\n### Establishing Visibility and Governance\n\nThankfully, you can overcome all of the challenges. The first step is to start building software bills of materials (SBOMs) at build time. The SBOM records what goes into your software, so it is the foundational piece of building asset visibility. You can then use that information to build a knowledge graph about your supply chain, including vulnerabilities and software licenses. When you aggregate these SBOMs across all of your application portfolio, you get a holistic view of all dependencies.\n\nThis portfolio-wide view helps you prioritize which issues to fix first. The impact of fixing a vulnerability in one or two applications is a lot less than fixing a vulnerability in all applications. Similarly, fixing a vulnerability in a production, external-facing application is more impactful than fixing a vulnerability in an internal development environment.\n\nAs mentioned above, knowing if a vulnerability even affects the application that contains it is a key part of the overall visibility picture. Ingesting VEX (Vulnerability Exploitability eXchange) statements, when available from your dependencies, will help you eliminate the vulnerabilities that are irrelevant to your code. Runtime analysis, like with eBPF, adds more filtering by determining which code paths are actually loaded into memory. This gives you more detail on which vulnerabilities are exploitable in your specific application, especially when VEX statements aren’t available.\n\nContext-aware prioritization makes responding to issues easier and faster. But what’s even better is preventing issues in the first place. Creating SBOMs at build time means you can enforce policies to prevent issues. For example, you can use the SBOM that you just produced in the build pipeline to check for known vulnerabilities in the dependencies and block merging the code into the main branch if it contains vulnerabilities or if it has a poor security posture. After build, tools like Kubernetes Gatekeeper can automatically enforce policies to block deployment of applications with critical vulnerabilities, missing or incorrect cryptographic signatures, and other security concerns.\n\nOne final piece of the puzzle is tracking software provenance. Tracking and gating on software provenance gives you another avenue to protect yourself from vulnerable code. This is often overlooked, but given the prevalence of attacks against open source library repositories, it’s more important than ever. Provenance is a provable record of how software was built, where it was built, and by whom it was built. These cryptographically-signed attestations mean that you can know if the package you downloaded from npm came from your dependency’s official build system or from hackerman9000’s laptop after he compromised the project’s npm account. But provenance doesn’t just help with deliberately altered, it also gives you a sense of the security practices used in the build process. Standards like SLSA give you assurance that builds took place in environments with sound security.\n\n### Start Somewhere\n\nImplementing all these practices takes work and cultural change. You don’t have to do everything at once; each step you take reduces risk. For example, we know that SBOMs alone won’t solve supply chain issues, but having them is better than not having them. Once you have SBOMs, you can build on them to collect more data. Don’t let the perfect be the enemy of the good. After all, security is a process, not a destination.\n\nhttps://www.addtoany.com/add_to/x?linkurl=https%3A%2F%2Fdevops.com%2Festablishing-visibility-and-governance-for-your-software-supply-chain%2F&amp;linkname=Establishing%20Visibility%20and%20Governance%20for%20Your%20Software%20Supply%20Chainhttps://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevops.com%2Festablishing-visibility-and-governance-for-your-software-supply-chain%2F&amp;linkname=Establishing%20Visibility%20and%20Governance%20for%20Your%20Software%20Supply%20Chainhttps://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevops.com%2Festablishing-visibility-and-governance-for-your-software-supply-chain%2F&amp;linkname=Establishing%20Visibility%20and%20Governance%20for%20Your%20Software%20Supply%20Chainhttps://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevops.com%2Festablishing-visibility-and-governance-for-your-software-supply-chain%2F&amp;linkname=Establishing%20Visibility%20and%20Governance%20for%20Your%20Software%20Supply%20Chainhttps://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevops.com%2Festablishing-visibility-and-governance-for-your-software-supply-chain%2F&amp;linkname=Establishing%20Visibility%20and%20Governance%20for%20Your%20Software%20Supply%20Chainhttps://www.addtoany.com/share\n\nhttps://www.addtoany.com/add_to/x?linkurl=https%3A%2F%2Fdevops.com%2Festablishing-visibility-and-governance-for-your-software-supply-chain%2F&amp;linkname=Establishing%20Visibility%20and%20Governance%20for%20Your%20Software%20Supply%20Chain%20-%20DevOps.comhttps://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevops.com%2Festablishing-visibility-and-governance-for-your-software-supply-chain%2F&amp;linkname=Establishing%20Visibility%20and%20Governance%20for%20Your%20Software%20Supply%20Chain%20-%20DevOps.comhttps://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevops.com%2Festablishing-visibility-and-governance-for-your-software-supply-chain%2F&amp;linkname=Establishing%20Visibility%20and%20Governance%20for%20Your%20Software%20Supply%20Chain%20-%20DevOps.comhttps://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevops.com%2Festablishing-visibility-and-governance-for-your-software-supply-chain%2F&amp;linkname=Establishing%20Visibility%20and%20Governance%20for%20Your%20Software%20Supply%20Chain%20-%20DevOps.comhttps://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevops.com%2Festablishing-visibility-and-governance-for-your-software-supply-chain%2F&amp;linkname=Establishing%20Visibility%20and%20Governance%20for%20Your%20Software%20Supply%20Chain%20-%20DevOps.comhttps://www.addtoany.com/share\n\n[« Secure By Design, Secure by Default](https://devops.com/secure-by-design-secure-by-default/)\n\n[![](https://devops.com/wp-content/uploads/2024/11/Copy-of-DO-Banners-1540x660-1.png)](https://webinars.devops.com/in-article-newsletter-popup)\n\n×\n\nExecutive Security as a Strategic Priority\n\nStep 1 of 8\n\n12%\n\nWhich best describes your level of influence on cybersecurity, risk and/or data protection in your organization?(Required) I make decisions about or have influence over cybersecurity strategy\n\nI make decisions about or have influence over risk strategy\n\nI am responsible for protecting data at my organization\n\nI am responsible for building and/or implementing solutions that protect the PII of employees and customers\n\nI am responsible for building and/or implementing solutions to underpin our cybersecurity strategy\n\nI am responsible for building and/or implementing solutions to manage and mitigate risk\n\nOther/NA\n\nHave you or members of your family or other executives and members of their families been targets of social engineering attacks? (Select All That Apply)(Required) I have personally been targeted\n\nA member of my family has been targeted\n\nExecutives at my organization have been targets of AI social engineering attacks\n\nWere any of the attacks successful?(Required) Yes\n\nNo\n\nDon’t know\n\nN/A\n\nWhich best describes your organization’s efforts to protect executives and their families against AI social engineering attacks?(Required) Has discussed the potential impact of such attacks but has not executed a strategy\n\nHas developed a strategy to protect executives and has begun to execute it\n\nHas not addressed the impact of these attacks\n\nHas made protecting executive PII a strategic priority and has a fully executed plan in place\n\nHas taken rudimentary steps to protect executives and their families\n\nWhat challenges have prevented you from more fully securing the PII of executives and their families?(Required) Poor visibility into what should be protected\n\nEase of use\n\nLack of executive/board support\n\nTech spend is too high\n\nPotential disruption to business operations\n\nIntegration into existing security strategies\n\nWhich of the following do you think are true about the level of threat posed by AI social engineering attacks?(Required) AI social engineering attacks against executives and their families are on the rise, and we struggle to stay ahead of them\n\nAI social engineering attacks raise my organization’s risk exposure\n\nMy organization doesn’t have a firm understanding of the risk from AI social engineering attacks\n\nExecutives have often handled the most sensitive data—often on the fly—and have access to a company’s most valuable assets from their homes and personal devices\n\nProtecting executives—and their families—should be a critical risk management priority\n\nObtaining executives’ available personal data online and that of their families can create extremely important leverage for threat actors seeking access to corporate assets\n\nWhat steps has your organization taken to protect executives and their families from AI social engineering attacks? (Select All That Apply)(Required) Reduce attack surface\n\nProtect the integrity of confidential information and communications\n\nBlock lateral movement\n\nInvest in training\n\nHow valuable do you think it would it be to have an easy to integrate and use tool that protects the PII of executives and their families from AI social engineering attacks?(Required) Extremely valuable\n\nVery valuable\n\nSomewhat valuable\n\nSlightly valuable\n\nNot valuable\n\nΔ\n\n×",
  "Author": "Parth Patel",
  "FeedLevelAuthor": "DevOps.com",
  "FeedName": "DevOps Blog",
  "Link": "https://devops.com/establishing-visibility-and-governance-for-your-software-supply-chain/",
  "FeedUrl": "https://devops.com/feed/"
}
