{
  "Link": "https://devops.com/how-github-plans-to-secure-npm-after-recent-supply-chain-attacks/",
  "FeedLevelAuthor": "DevOps.com",
  "Tags": [
    "API token deprecation",
    "Blogs",
    "Business of DevOps",
    "CI/CD authentication",
    "crates.io security",
    "Features",
    "npm 2FA",
    "npm registry attack",
    "npm token theft",
    "open source security",
    "package registry malware",
    "PyPI trusted publishing",
    "Shai-Hulud worm",
    "Social - Facebook",
    "Social - LinkedIn",
    "Social - X",
    "Software Supply Chain Security",
    "trusted publishing"
  ],
  "PubDate": "2025-09-26T07:58:54+00:00",
  "Title": "How GitHub Plans to Secure npm After Recent Supply Chain Attacks",
  "FeedName": "DevOps Blog",
  "EnhancedContent": "[![](https://devops.com/wp-content/uploads/2025/02/cropped-devops-logo.png)](https://devops.com/)\n\n# Sign up for our newsletter! Stay informed on the latest DevOps news\n\nHow GitHub Plans to Secure npm After Recent Supply Chain Attacks\n\nThe npm registry just weathered one of its most sophisticated attacks yet. On September 14, 2025, the [Shai-Hulud worm](https://devops.com/shai-hulud-attacks-shake-software-supply-chain-security-confidence/) infiltrated the JavaScript ecosystem through compromised maintainer accounts, spreading malicious code across popular packages. GitHub’s response signals a significant shift in how we approach security for package registries.\n\n### **The Shai-Hulud Attack Changed Everything**\n\nThis wasn’t your typical malware injection. The Shai-Hulud worm was self-replicating, spreading through npm packages while stealing multiple types of secrets—not just npm tokens. It used post-install scripts to propagate, turning trusted packages into attack vectors.\n\nGitHub moved quickly. They removed over 500 compromised packages and blocked uploads containing the malware’s indicators of compromise. However, the damage highlighted a harsh reality: Current authentication methods are insufficient to protect the open-source supply chain.\n\n### **GitHub’s New Security Roadmap**\n\nStarting soon, npm will only support three publishing methods:\n\n**Local publishing with mandatory two-factor authentication.** No more bypassing 2FA for convenience. If you’re publishing from your machine, you’ll need proper authentication every time.\n\n**Granular tokens with seven-day expiration limits.** The days of long-lived tokens are ending. These shorter-lived credentials reduce the window for abuse if compromised.\n\n[![Techstrong Gang Youtube](https://securityboulevard.com/wp-content/uploads/2024/12/Techstrong-Gang-Youtube-PodcastV2-770.png)](https://youtu.be/Fojn5NFwaw8)\n\n[![Techstrong Gang Youtube](https://devops.com/wp-content/uploads/2025/03/770X330-DevOps-AppDev-Mar2025D.jpg)](https://info.futurumgroup.com/devops_appdev?utm_source=referral&utm_medium=in-article&utm_campaign=DevOps-Application-Report)\n\n[![Techstrong Gang Youtube](https://devops.com/wp-content/uploads/2025/03/770X330-DevOps-AppDev-Mar2025-2D.jpg)](https://info.futurumgroup.com/devops_appdev?utm_source=referral&utm_medium=in-article&utm_campaign=DevOps-Application-Report)\n\n**Trusted publishing.** This removes API tokens from CI/CD pipelines entirely, letting package repositories verify your identity through your build environment.\n\n### **What’s Getting Deprecated**\n\nGitHub isn’t just adding new security features — they’re removing weak ones:\n\n- Legacy classic tokens are going away\n- Time-based one-time passwords (TOTP) are being replaced with FIDO-based 2FA\n- Publishing tokens will be disabled by default\n- The 2FA bypass option for local publishing is disappearing\n\nThese changes might disrupt some workflows. But GitHub plans a gradual rollout with migration guides and support.\n\n### **Why Trusted Publishing Matters**\n\nTrusted publishing started with PyPI in April 2023. The idea is simple: Instead of managing API tokens in your build system, the package registry verifies your identity through your CI/CD platform.\n\nRubyGems added it in December 2023, followed by crates.io and npm in July 2025, and NuGet in September 2025. The timing isn’t coincidental—package registries are racing to eliminate token-based authentication vulnerabilities.\n\nHere’s how it works: When your GitHub Actions workflow runs, it generates a signed token that proves the code came from your repository. The package registry verifies this signature and publishes your package without needing stored credentials.\n\nNo tokens to steal. No secrets to manage. No attack surface for malware to exploit.\n\n### **The Broader Context**\n\nThe Shai-Hulud attack wasn’t an isolated incident. Package registries have faced a surge in account takeovers recently. Attackers are getting more sophisticated, combining traditional credential theft with self-replicating malware designed specifically for package ecosystems.\n\nThe open source community’s response has been swift. The OpenSSF Securing Software Repositories Working Group now recommends trusted publishing as a best practice for security. Package registries are implementing it faster than originally planned.\n\n### **What Maintainers Should Do Now**\n\nDon’t wait for the forced migration. Here’s what you can implement today:\n\n**Switch to trusted publishing** for all your packages. It’s already available on npm and eliminates the biggest attack vector.\n\n**Enable 2FA requirements** for all publishing actions on your accounts, organizations and packages.\n\n**Use WebAuthn instead of TOTP** when setting up two-factor authentication. Hardware keys and biometric authentication are more secure than authenticator apps.\n\n**Audit your existing tokens.** Review what’s still active and remove anything you don’t actively use.\n\n### **The Road Ahead**\n\nThese security improvements come with trade-offs. Some automation workflows will need updates. Some convenience features are disappearing. However, the alternative, watching malware spread through the packages we all depend on, is unacceptable.\n\nThe software industry relies heavily on open-source software. When package registries get compromised, it affects everyone downstream. That’s why GitHub’s aggressive timeline makes sense. They’re not waiting for the next attack to implement these changes.\n\nTrue [supply chain security](https://devops.com/survey-surfaces-software-supply-chain-security-gains/) requires the participation of everyone. Package registries can implement better authentication, but maintainers need to adopt these tools to benefit from them. The ecosystem’s security is only as strong as its weakest authentication method.\n\nThe Shai-Hulud attack was a wake-up call. Now it’s time to build the defenses that should have been in place years ago.\n\nhttps://www.addtoany.com/add_to/x?linkurl=https%3A%2F%2Fdevops.com%2Fhow-github-plans-to-secure-npm-after-recent-supply-chain-attacks%2F&amp;linkname=How%20GitHub%20Plans%20to%20Secure%20npm%20After%20Recent%20Supply%20Chain%20Attackshttps://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevops.com%2Fhow-github-plans-to-secure-npm-after-recent-supply-chain-attacks%2F&amp;linkname=How%20GitHub%20Plans%20to%20Secure%20npm%20After%20Recent%20Supply%20Chain%20Attackshttps://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevops.com%2Fhow-github-plans-to-secure-npm-after-recent-supply-chain-attacks%2F&amp;linkname=How%20GitHub%20Plans%20to%20Secure%20npm%20After%20Recent%20Supply%20Chain%20Attackshttps://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevops.com%2Fhow-github-plans-to-secure-npm-after-recent-supply-chain-attacks%2F&amp;linkname=How%20GitHub%20Plans%20to%20Secure%20npm%20After%20Recent%20Supply%20Chain%20Attackshttps://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevops.com%2Fhow-github-plans-to-secure-npm-after-recent-supply-chain-attacks%2F&amp;linkname=How%20GitHub%20Plans%20to%20Secure%20npm%20After%20Recent%20Supply%20Chain%20Attackshttps://www.addtoany.com/share\n\nhttps://www.addtoany.com/add_to/x?linkurl=https%3A%2F%2Fdevops.com%2Fhow-github-plans-to-secure-npm-after-recent-supply-chain-attacks%2F&amp;linkname=How%20GitHub%20Plans%20to%20Secure%20npm%20After%20Recent%20Supply%20Chain%20Attacks%20-%20DevOps.comhttps://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevops.com%2Fhow-github-plans-to-secure-npm-after-recent-supply-chain-attacks%2F&amp;linkname=How%20GitHub%20Plans%20to%20Secure%20npm%20After%20Recent%20Supply%20Chain%20Attacks%20-%20DevOps.comhttps://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevops.com%2Fhow-github-plans-to-secure-npm-after-recent-supply-chain-attacks%2F&amp;linkname=How%20GitHub%20Plans%20to%20Secure%20npm%20After%20Recent%20Supply%20Chain%20Attacks%20-%20DevOps.comhttps://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevops.com%2Fhow-github-plans-to-secure-npm-after-recent-supply-chain-attacks%2F&amp;linkname=How%20GitHub%20Plans%20to%20Secure%20npm%20After%20Recent%20Supply%20Chain%20Attacks%20-%20DevOps.comhttps://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevops.com%2Fhow-github-plans-to-secure-npm-after-recent-supply-chain-attacks%2F&amp;linkname=How%20GitHub%20Plans%20to%20Secure%20npm%20After%20Recent%20Supply%20Chain%20Attacks%20-%20DevOps.comhttps://www.addtoany.com/share\n\n[« Living Security Unveils HRMCon 2025 Speakers as Report Finds Firms Detect Just 19% of Human Risk](https://devops.com/living-security-unveils-hrmcon-2025-speakers-as-report-finds-firms-detect-just-19-of-human-risk/)\n\n[Microsoft’s AI Agents Target Technical Debt Crisis »](https://devops.com/microsofts-ai-agents-target-technical-debt-crisis/)\n\n[![](https://devops.com/wp-content/uploads/2024/11/Copy-of-DO-Banners-1540x660-1.png)](https://webinars.devops.com/in-article-newsletter-popup)\n\n×",
  "Author": "Tom Smith",
  "Description": "![supply chain, software, Checkmarx, data, Endor, SCA, supply chain, security, workflows, supply chain, software, supply chain security, appsec, polyfill, software, supply chains, DevOps, DevSecOps, Google supply chain](https://devops.com/wp-content/uploads/2020/08/Overheard-at-CloudBees-Connect-The-Reality-of-Delivering-Modern-Software.jpg)\n\n![supply chain, software, Checkmarx, data, Endor, SCA, supply chain, security, workflows, supply chain, software, supply chain security, appsec, polyfill, software, supply chains, DevOps, DevSecOps, Google supply chain](https://devops.com/wp-content/uploads/2020/08/Overheard-at-CloudBees-Connect-The-Reality-of-Delivering-Modern-Software-150x150.jpg)GitHub strengthens npm security after Shai-Hulud worm attack with mandatory 2FA, granular tokens, and trusted publishing to protect the open source supply chain.",
  "FeedUrl": "https://devops.com/feed/",
  "ProcessedDate": "2025-09-27 03:11:57",
  "OutputDir": "_posts"
}
