{
  "ProcessedDate": "2025-10-31 16:03:51",
  "Description": "Use reflection prompts to make Copilot explain its reasoning first, then decide what to accept.",
  "Title": "Context Engineering Recipes ‚Ä¢ The Reflection Pattern",
  "OutputDir": "_posts",
  "EnhancedContent": "[‚Üê Back to Main Page](../index.html)\n\n# Context Engineering Recipes ‚Äî The Reflection Pattern\n\n*Posted on Oct 31, 2025*\n\nUsage\n\nIt‚Äôs time for another Cook‚Äôn with GitHub Copilot ProTip, continuing our Context Engineering Recipes mini series.\n\nLast time, you learned how the Persona Pattern gives Copilot a role to think like a pro.\n\nToday‚Äôs recipe is the Reflection Pattern, it teaches Copilot to look in the mirror and explain its own reasoning. No magic potions required, just smarter prompts for deeper understanding.\n\nAnd remember, GitHub Copilot does not ghost you, it just needs the right rephrase. üëª\n\nProTip\n\n**Ask Copilot to Reflect Before You Correct**\n\nWhen you ask GitHub Copilot why it made a suggestion, you are not second guessing, you are guiding.\n\nReflection prompts help Copilot surface its assumptions and logic, so you can decide whether its answer truly fits your intent.\n\nTry These Approaches\n\n**1Ô∏è‚É£ Self Explanation**\n\nPrompt Copilot to explain how it reached a result.\n\n`Explain the reasoning behind this code suggestion, step by step.`\n\n*Best for:* Understanding non obvious logic or complex generated code.\n\n**2Ô∏è‚É£ Self Critique**\n\nAsk Copilot to review its own output before you do.\n\n`Review your previous answer. Identify any logical or security issues and suggest improvements.`\n\n*Best for:* Code audits, refactoring, or design reviews.\n\n**3Ô∏è‚É£ Reflection Before Rewrite**\n\nGet Copilot to evaluate before editing.\n\n`Before refactoring, explain what parts of this function are redundant or risky to change.`\n\n*Best for:* Safer rewrites and better context awareness.\n\n**4Ô∏è‚É£ Teach Back Mode**\n\nHave Copilot explain as if it were mentoring a new developer.\n\n`Explain this function to a junior developer and include why each step is needed.`\n\n*Best for:* Documentation, onboarding, and code walkthroughs.\n\nQuick Tip\n\nReflection prompts do not slow you down, they sharpen the reasoning.\n\nIf GitHub Copilot‚Äôs answer feels spooky vague, ask it why. You will get clarity instead of mystery.\n\nQuick Takeaway\n\nThe Reflection Pattern turns Copilot into your debugging sidekick, one that can explain its thoughts before you accept its help.\n\nNo haunted logic here, just transparent, confident collaboration.\n\nDo you ever ask Copilot to explain its answers? Try the Reflection Pattern this week and share your favorite reflective prompts!",
  "FeedUrl": "https://www.cooknwithcopilot.com/rss.xml",
  "PubDate": "2025-10-31T00:00:00+00:00",
  "Author": "randy.pagels@xebia.com (Randy Pagels)",
  "Tags": [],
  "FeedLevelAuthor": "randy.pagels@xebia.com (Randy Pagels)",
  "Link": "https://www.cooknwithcopilot.com/blog/context-engineering-recipes-the-reflection-pattern.html",
  "FeedName": "Randy Pagels's Blog"
}
