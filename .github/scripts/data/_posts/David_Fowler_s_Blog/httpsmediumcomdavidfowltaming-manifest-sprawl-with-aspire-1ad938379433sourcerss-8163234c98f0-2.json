{
  "Title": "Taming Manifest Sprawl with Aspire",
  "FeedName": "David Fowler's Blog",
  "OutputDir": "_posts",
  "Tags": [
    "cloud-native",
    "docker",
    "software-development"
  ],
  "ProcessedDate": "2025-08-05 17:20:07",
  "Description": "You know the drill: a new service hits the repo and suddenly you’re editing **three different manifests** — docker-compose.yml for local runs, Kubernetes YAML for prod, and a .env file to keep the secrets straight. Miss one line and something breaks hours (or days) later. And that’s still a *simple* setup— we haven’t even touched multiple environments, separate secret stores, or CI/CD pipelines. That duplication is **manifest sprawl**, and it taxes every deploy, code review, and onboarding session.\n\n### Manifest Sprawl Hurts\n\n- **Drift** — Local and prod configs diverge when someone forgets to copy a port or env‑var.\n- **Onboarding toil** — New devs spend their first day wiring containers instead of writing code.\n- **Review fatigue** — PRs drown in boilerplate YAML nobody really reads.\n- **Hidden coupling** — Runtime links live in wikis or a senior dev’s head, not in version control.\n- **Under‑modeled relationships** — When those links aren’t captured in a single source of truth, humans become the glue, and breakages surface late in the cycle.\n\n### Aspire in a Nutshell\n\nAspire collapses the sprawl into one **C# model** — a typed graph that names every service, container, secret, and dependency:\n\n``` var db = builder.AddPostgres(\"db\");var api = builder.AddProject(\"api\").WithReference(db); ```\n\n*(Workloads can be* ***any*** *container; C# is just the modeling language.)*\n\n### Dev loop: one command\n\n``` aspire run ```\n\n- Boots the entire stack on your laptop.\n- Generates ports, secrets, and connection strings automatically.\n- Pops open a dashboard with a live dependency graph, logs, and traces via OpenTelemetry.\n\n### Ship it: one command\n\n``` aspire publish ```\n\n- Spits out plain Kubernetes YAML, Docker‑Compose files, or whatever adapter you’ve plugged in.\n- Artifacts are deterministic — perfect for CI/CD.\n- Wiring and telemetry match what you ran locally.\n\n### Why It Sticks\n\n- **Goodbye drift** — Change a port once in code; dev and prod stay aligned.\n- **Zero‑setup onboarding** — Clone → aspire run → code.\n- **Observability baked in** — Logs & traces without bolting on sidecars.\n- **Plug‑in everything** — aspire add redis or write your own NuGet for in‑house services; swap publishers to target ECS, Nomad—whatever.\n- **No lock‑in** — Generated files are standard YAML you can tweak or ditch.\n\nIf that feels cleaner than juggling YAML, keep it. If not, stick with Compose — no harm done.\n\n![](https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=1ad938379433)",
  "Author": "David Fowler",
  "Link": "https://medium.com/@davidfowl/taming-manifest-sprawl-with-aspire-1ad938379433?source=rss-8163234c98f0------2",
  "PubDate": "2025-05-16T15:15:55+00:00",
  "EnhancedContent": "[Sitemap](/sitemap/sitemap.xml)\n\n[Open in app](https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F1ad938379433&amp;%7Efeature=LoOpenInAppButton&amp;%7Echannel=ShowPostUnderUser&amp;%7Estage=mobileNavBar&amp;source=post_page---top_nav_layout_nav-----------------------------------------) [Sign in](/m/signin?operation=login&amp;redirect=https%3A%2F%2Fmedium.com%2F%40davidfowl%2Ftaming-manifest-sprawl-with-aspire-1ad938379433&amp;source=post_page---top_nav_layout_nav-----------------------global_nav------------------)\n\n[Medium Logo](/?source=post_page---top_nav_layout_nav-----------------------------------------)\n\n[Write](/m/signin?operation=register&amp;redirect=https%3A%2F%2Fmedium.com%2Fnew-story&amp;source=---top_nav_layout_nav-----------------------new_post_topnav------------------)\n\n/search?source=post_page---top_nav_layout_nav-----------------------------------------\n\n[Sign in](/m/signin?operation=login&amp;redirect=https%3A%2F%2Fmedium.com%2F%40davidfowl%2Ftaming-manifest-sprawl-with-aspire-1ad938379433&amp;source=post_page---top_nav_layout_nav-----------------------global_nav------------------)\n\n# Taming Manifest Sprawl with Aspire\n\n[!\\[David Fowler\\](https://miro.medium.com/v2/resize:fill:64:64/1*xIMgAFfe7TtYOd2L_Mrrgw.jpeg)](/@davidfowl?source=post_page---byline--1ad938379433---------------------------------------)\n\n[David Fowler](/@davidfowl?source=post_page---byline--1ad938379433---------------------------------------)\n\n2 min read ·\n\nMay 16, 2025\n\n/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fp%2F1ad938379433&amp;operation=register&amp;redirect=https%3A%2F%2Fmedium.com%2F%40davidfowl%2Ftaming-manifest-sprawl-with-aspire-1ad938379433&amp;user=David+Fowler&amp;userId=8163234c98f0&amp;source=---header_actions--1ad938379433---------------------clap_footer------------------\n\n--\n\n/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F1ad938379433&amp;operation=register&amp;redirect=https%3A%2F%2Fmedium.com%2F%40davidfowl%2Ftaming-manifest-sprawl-with-aspire-1ad938379433&amp;source=---header_actions--1ad938379433---------------------bookmark_footer------------------\n\nYou know the drill: a new service hits the repo and suddenly you’re editing **three different manifests** — `docker-compose.yml` for local runs, Kubernetes YAML for prod, and a `.env` file to keep the secrets straight. Miss one line and something breaks hours (or days) later. And that’s still a *simple* setup— we haven’t even touched multiple environments, separate secret stores, or CI/CD pipelines. That duplication is **manifest sprawl**, and it taxes every deploy, code review, and onboarding session.\n\n# Manifest Sprawl Hurts\n\n- **Drift** — Local and prod configs diverge when someone forgets to copy a port or env‑var.\n- **Onboarding toil** — New devs spend their first day wiring containers instead of writing code.\n- **Review fatigue** — PRs drown in boilerplate YAML nobody really reads.\n- **Hidden coupling** — Runtime links live in wikis or a senior dev’s head, not in version control.\n- **Under‑modeled relationships** — When those links aren’t captured in a single source of truth, humans become the glue, and breakages surface late in the cycle.\n\n# Aspire in a Nutshell\n\nAspire collapses the sprawl into one **C# model** — a typed graph that names every service, container, secret, and dependency:\n\n``` var db = builder.AddPostgres(\"db\");var api = builder.AddProject<Api>(\"api\").WithReference(db); ```\n\n*(Workloads can be* ***any*** *container; C# is just the modeling language.)*\n\n# Dev loop: one command\n\n``` aspire run ```\n\n- Boots the entire stack on your laptop.\n- Generates ports, secrets, and connection strings automatically.\n- Pops open a dashboard with a live dependency graph, logs, and traces via OpenTelemetry.\n\n# Ship it: one command\n\n``` aspire publish ```\n\n- Spits out plain Kubernetes YAML, Docker‑Compose files, or whatever adapter you’ve plugged in.\n- Artifacts are deterministic — perfect for CI/CD.\n- Wiring and telemetry match what you ran locally.\n\n# Why It Sticks\n\n- **Goodbye drift** — Change a port once in code; dev and prod stay aligned.\n- **Zero‑setup onboarding** — Clone → `aspire run`\n→ code.\n- **Observability baked in** — Logs & traces without bolting on sidecars.\n- **Plug‑in everything** — `aspire add redis`\nor write your own NuGet for in‑house services; swap publishers to target ECS, Nomad—whatever.\n- **No lock‑in** — Generated files are standard YAML you can tweak or ditch.\n\nIf that feels cleaner than juggling YAML, keep it. If not, stick with Compose — no harm done.\n\n[Software Development](/tag/software-development?source=post_page-----1ad938379433---------------------------------------)\n\n[Cloud Native](/tag/cloud-native?source=post_page-----1ad938379433---------------------------------------)\n\n[Docker](/tag/docker?source=post_page-----1ad938379433---------------------------------------)\n\n[!\\[David Fowler\\](https://miro.medium.com/v2/resize:fill:96:96/1*xIMgAFfe7TtYOd2L_Mrrgw.jpeg)](/@davidfowl?source=post_page---post_author_info--1ad938379433---------------------------------------)\n\n[!\\[David Fowler\\](https://miro.medium.com/v2/resize:fill:128:128/1*xIMgAFfe7TtYOd2L_Mrrgw.jpeg)](/@davidfowl?source=post_page---post_author_info--1ad938379433---------------------------------------)\n\n[## Written by David Fowler](/@davidfowl?source=post_page---post_author_info--1ad938379433---------------------------------------) [4.5K followers](/@davidfowl/followers?source=post_page---post_author_info--1ad938379433---------------------------------------)\n\n·[132 following](/@davidfowl/following?source=post_page---post_author_info--1ad938379433---------------------------------------)\n\nDistinguished Engineer at Microsoft\n\n## No responses yet\n\nhttps://policy.medium.com/medium-rules-30e5502c4eb4?source=post_page---post_responses--1ad938379433---------------------------------------\n\n[Help](https://help.medium.com/hc/en-us?source=post_page-----1ad938379433---------------------------------------)\n\n[Status](https://medium.statuspage.io/?source=post_page-----1ad938379433---------------------------------------)\n\n[About](/about?autoplay=1&amp;source=post_page-----1ad938379433---------------------------------------)\n\n[Careers](/jobs-at-medium/work-at-medium-959d1a85284e?source=post_page-----1ad938379433---------------------------------------)\n\n[Press](mailto:pressinquiries@medium.com)\n\n[Blog](https://blog.medium.com/?source=post_page-----1ad938379433---------------------------------------)\n\n[Privacy](https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----1ad938379433---------------------------------------)\n\n[Rules](https://policy.medium.com/medium-rules-30e5502c4eb4?source=post_page-----1ad938379433---------------------------------------)\n\n[Terms](https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----1ad938379433---------------------------------------)\n\n[Text to speech](https://speechify.com/medium?source=post_page-----1ad938379433---------------------------------------)",
  "FeedLevelAuthor": "yourfriends@medium.com",
  "FeedUrl": "https://medium.com/feed/@davidfowl"
}
