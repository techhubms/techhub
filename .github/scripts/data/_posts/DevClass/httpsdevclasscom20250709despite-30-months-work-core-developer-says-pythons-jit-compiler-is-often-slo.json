{
  "OutputDir": "_posts",
  "Link": "https://devclass.com/2025/07/09/despite-30-months-work-core-developer-says-pythons-jit-compiler-is-often-slower-than-the-interpreter/",
  "FeedLevelAuthor": "DEVCLASS",
  "EnhancedContent": "[Linkedin](https://www.linkedin.com/company/devclass/)\n\n[RSS](https://devclass.com/feed/)\n\n[Twitter](https://twitter.com/d3vclass?lang=en)\n\n[Youtube](https://www.youtube.com/channel/UCEk1p4Omxqi0E0ij6Bfy4HQ)\n\n- [Newsletter](https://devclass.com/newsletter/)\n- [Archive](https://devclass.com/archive/)\n- [The Register](https://www.theregister.com/)\n- [Blocks&Files](https://blocksandfiles.com/)\n- [The Next Platform](https://www.nextplatform.com/)\n\nSearch\n\n[!\\[DevClass\\](https://devclass.com/wp-content/uploads/2018/08/DevClass_logo_White_small-Horizontal.png)NewsPaperDeveloper News](https://devclass.com/)\n\n- [Newsletter](https://devclass.com/newsletter/)\n- [Archive](https://devclass.com/archive/)\n- [The Register](https://www.theregister.com/)\n- [Blocks&Files](https://blocksandfiles.com/)\n- [The Next Platform](https://www.nextplatform.com/)\n\n- [Newsletter](https://devclass.com/newsletter/)\n- [Archive](https://devclass.com/archive/)\n- [The Register](https://www.theregister.com/)\n- [Blocks&Files](https://blocksandfiles.com/)\n- [The Next Platform](https://www.nextplatform.com/)\n\n[!\\[DevClass\\](https://devclass.com/wp-content/uploads/2018/08/DevClass_logo_White_small-Horizontal.png)DevClassDeveloper News](https://devclass.com/)\n\n- [Home](https://devclass.com/)\n- [DevOps](https://devclass.com/devops/)\n- [Serverless](https://devclass.com/serverless/)\n- [Containers](https://devclass.com/containers/)\n- [CI/CD](https://devclass.com/ci-cd/)\n- [ML/AI](https://devclass.com/ml-ai/)\n\n[Home](https://devclass.com/) [Development](https://devclass.com/category/development/) Despite 30 months work, core developer says Python’s JIT compiler is often slower than the interpreter\n\n- [Development](https://devclass.com/category/development/)\n\n![Despite 30 months work, core developer says Python&#8217;s JIT compiler is often slower than the interpreter](https://devclass.com/wp-content/uploads/2022/05/python-768x512.jpg \"Despite 30 months work, core developer says Python&#8217;s JIT compiler is often slower than the interpreter\")\n\nKen Jin, a CPython core developer who works on the experimental JIT (just in time) compiler optimizer, says that after two and half years work, the “JIT ranges from slower than the interpreter to roughly equivalent to the interpreter.”\n\nThe JIT compiler is included in Python 3.13, released in October 2024, but only when CPython is built using the –enable-experimental-jit option. Early reports spoke of a speed-up of between 2 and 9 percent; but Jin [said](https://fidget-spinner.github.io/posts/jit-reflections.html) that “it’s really more nuanced than that. Often times, the CPython 3.13 JIT is a lot slower than the interpreter.”\n\nPart of the confusion, Jin said, is because Python 3.13 has more than one interpreter. The [docs](https://docs.python.org/3.13/whatsnew/3.13.html#an-experimental-just-in-time-jit-compiler) explain that at runtime the python interpreter “starts with specialized Tier 1 bytecode” but when it sees repeated use of the same code, “it gets translated to a new purely internal intermediate representation (IR) called the Tier 2 IR.” This Tier 2 IR is better suited to JIT compilation to machine code. However there is also a Tier 2 interpeter which is “mostly intended for debugging the earlier stages of the optimization pipeline.” Some performance comparisons are between the JIT-compiled code and the Tier 2 interpreter, which is misleading as “it’s not comparing to the actual CPython interpreter.”\n\nAnother complication is that the performance of CPython varies according to the compiler used to build it. When it is built using a modern compiler like Clang 20, Jin said, the interpreter often out-performs the JIT. If an old compiler like GCC 11 is used though, the JIT may be equal or faster than the interpreter.\n\nPython 3.14 is in development, with release scheduled for October 2025. Will JIT performance improve? In some cases, Jin said, but overall “the 3.14 JIT has almost no major optimizer features over 3.13.” There are improvements to the code generator, he said.\n\nOne reason for the slow progress of the JIT is that the work on it is done by a small, community-driven team, led by Mark Shannon. Microsoft [cancelled its support](https://www.theregister.com/2025/05/16/microsofts_axe_software_developers/) for the Faster CPython project in May this year, as part of a round of layoffs; but this did not impact the work on the JIT, Jin said, as this was always a community project. At times, only one person was working on it, Brandt Bucher who co-wrote [PEP 744](https://peps.python.org/pep-0744/), the Python Enhancement Proposal regarding the JIT compiler. Increasing the size of the team has been a focus, and Jin names three additional contributors.\n\nJin is hopeful that there could be “single-digit percentage speedups to the JIT” in Python 3.15, the major version after the next release.\n\nPython is the second most popular language after JavaScript according to [rankings such as this](https://redmonk.com/sogrady/2025/06/18/language-rankings-1-25/), but the standard implementation, CPython, is slow compared to most other languages, not only native compiled languages such as C++ or Go, but also versus interpreted languages like Java and JavaScript.\n\nThe JIT compiler is part of an effort to speed up Python, but not the only one. The Faster CPython project has introduced other optimizations which have been effective. The option to disable the GIL (Global Interpreter Lock), which is in 3.13, enables better performance by running threads in parallel.\n\nCPython is getting faster; but in most cases it is not yet because of the newly available JIT. Although disappointing, we note that Shannon [told sister publication *The Register* in 2021](https://www.theregister.com/2021/05/19/faster_python_mark_shannon_author/) that a JIT compiler was not a “magic cure-all” and that prioritising optimisation of the interpreter makes sense. “if you do it in the interpreter then it is already done for the compiler, and the interpreter gets faster, so it makes sense to do it first,” he said.\n\n[## Google VP of development explains how 'citizen developers' must be tempered by the pros](https://devclass.com/2025/07/18/google-vp-of-development-explains-how-citizen-developers-must-be-tempered-by-the-pros/)[## Hands on with Kiro, the AWS preview of an agentic AI IDE driven by specifications](https://devclass.com/2025/07/15/hands-on-with-kiro-the-aws-preview-of-an-agentic-ai-ide-driven-by-specifications/)[## Microsoft shovels extra Copilot features into VS Code amid dev complaints of 'more AI bloat'](https://devclass.com/2025/07/14/microsoft-shovels-extra-copilot-features-into-vs-code-amid-dev-complaints-of-more-ai-bloat/)[## Things Go better with telemetry: Microsoft adds phone home to its Go build](https://devclass.com/2025/07/08/things-go-better-with-telemetry-microsoft-adds-phone-home-to-its-go-build/)[## Zig lead makes 'extremely breaking' change to std.io ahead of Async and Await's return](https://devclass.com/2025/07/07/zig-lead-makes-extremely-breaking-change-to-std-io-ahead-of-async-and-awaits-return/)[## Microsoft SQL Server MCP tool: 'Leap in data interaction' or limited and frustrating?](https://devclass.com/2025/07/02/microsoft-sql-server-mcp-tool-leap-in-data-interaction-or-limited-and-frustrating/)[## Cloudflare container platform in public preview with scale to zero pricing, some initial limitations](https://devclass.com/2025/07/01/cloudflare-container-platform-in-public-preview-with-scale-to-zero-pricing-some-initial-limitations/)[## Microsoft to finally expunge the Azure AD Graph API](https://devclass.com/2025/06/30/microsoft-to-finally-expunge-the-azure-ad-graph-api/)[## Avalonia UI sponsorship 'completely removes' open source vs commercial conflict claims CEO](https://devclass.com/2025/06/26/avalonia-ui-sponsorship-completely-removes-open-source-vs-commercial-conflict-claims-ceo/)[## Google positions itself for 'next decade' of AI as Gemini CLI arrives with generous free tier](https://devclass.com/2025/06/25/google-positions-itself-for-next-decade-of-ai-as-gemini-cli-arrives-with-generous-free-tier/)[## \"Serious\" MySQL bug celebrates 20 years unfixed - another reason to switch to PostgreSQL?](https://devclass.com/2025/06/24/serious-mysql-bug-celebrates-20-years-unfixed-another-reason-to-switch-to-postgresql/)[## React ecosystem is fractured but Vercel is not the villain, argues Redux maintainer](https://devclass.com/2025/06/23/react-ecosystem-is-fractured-but-vercel-is-not-the-villain-argues-redux-maintainer/)\n\n[!\\[DevClass\\](https://devclass.com/wp-content/uploads/2018/08/DevClass_logo_White_small-Horizontal.png)DevClassDeveloper News](https://devclass.com/)\n\n### ABOUT US\n\nDevClass is the news and analysis site covering modern software development issues, from the team behind the Continuous Lifecycle, Serverless Computing and MCubed conferences\n\nContact us: [devclass@sitpub.com](mailto:devclass@sitpub.com)\n\n### FOLLOW US\n\n[Linkedin](https://www.linkedin.com/company/devclass/)\n\n[RSS](https://devclass.com/feed/)\n\n[Twitter](https://twitter.com/d3vclass?lang=en)\n\n[Youtube](https://www.youtube.com/channel/UCEk1p4Omxqi0E0ij6Bfy4HQ)\n\n© Situation Publishing, 2018-2024\n\n- [About](https://devclass.com/about/)\n- [Contribute](https://devclass.com/contribute/)\n- [Contact](https://devclass.com/contact-us/)\n- [Sales](https://situationpublishing.com/home/contact-us/)\n- [Privacy](https://devclass.com/privacy/)\n- [Cookies](https://devclass.com/cookies/)\n- [Terms & Conditions](https://devclass.com/tc/)\n- [Do not sell my personal information](https://devclass.com/devclass-privacy-policy-for-california-residents/)",
  "Description": "Ken Jin, a CPython core developer who works on the experimental JIT (just in time) compiler optimizer, says […]",
  "Title": "Despite 30 months work, core developer says Python’s JIT compiler is often slower than the interpreter",
  "FeedUrl": "https://devclass.com/feed/",
  "PubDate": "2025-07-09T17:01:21+00:00",
  "Author": "Tim Anderson",
  "ProcessedDate": "2025-08-09 20:23:24",
  "Tags": [
    "CPython",
    "Development",
    "Global Interpreter Lock",
    "JIT"
  ],
  "FeedName": "DevClass"
}
