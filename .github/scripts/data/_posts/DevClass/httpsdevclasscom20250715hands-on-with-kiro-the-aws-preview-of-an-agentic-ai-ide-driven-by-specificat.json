{
  "OutputDir": "_posts",
  "Link": "https://devclass.com/2025/07/15/hands-on-with-kiro-the-aws-preview-of-an-agentic-ai-ide-driven-by-specifications/",
  "FeedLevelAuthor": "DEVCLASS",
  "EnhancedContent": "[Linkedin](https://www.linkedin.com/company/devclass/)\n\n[RSS](https://devclass.com/feed/)\n\n[Twitter](https://twitter.com/d3vclass?lang=en)\n\n[Youtube](https://www.youtube.com/channel/UCEk1p4Omxqi0E0ij6Bfy4HQ)\n\n- [Newsletter](https://devclass.com/newsletter/)\n- [Archive](https://devclass.com/archive/)\n- [The Register](https://www.theregister.com/)\n- [Blocks&Files](https://blocksandfiles.com/)\n- [The Next Platform](https://www.nextplatform.com/)\n\nSearch\n\n[!\\[DevClass\\](https://devclass.com/wp-content/uploads/2018/08/DevClass_logo_White_small-Horizontal.png)NewsPaperDeveloper News](https://devclass.com/)\n\n- [Newsletter](https://devclass.com/newsletter/)\n- [Archive](https://devclass.com/archive/)\n- [The Register](https://www.theregister.com/)\n- [Blocks&Files](https://blocksandfiles.com/)\n- [The Next Platform](https://www.nextplatform.com/)\n\n- [Newsletter](https://devclass.com/newsletter/)\n- [Archive](https://devclass.com/archive/)\n- [The Register](https://www.theregister.com/)\n- [Blocks&Files](https://blocksandfiles.com/)\n- [The Next Platform](https://www.nextplatform.com/)\n\n[!\\[DevClass\\](https://devclass.com/wp-content/uploads/2018/08/DevClass_logo_White_small-Horizontal.png)DevClassDeveloper News](https://devclass.com/)\n\n- [Home](https://devclass.com/)\n- [DevOps](https://devclass.com/devops/)\n- [Serverless](https://devclass.com/serverless/)\n- [Containers](https://devclass.com/containers/)\n- [CI/CD](https://devclass.com/ci-cd/)\n- [ML/AI](https://devclass.com/ml-ai/)\n\n[Home](https://devclass.com/) [AI/ML](https://devclass.com/category/ai-ml/) Hands on with Kiro, the AWS preview of an agentic AI IDE driven by specifications\n\n- [AI/ML](https://devclass.com/category/ai-ml/)\n- [Development](https://devclass.com/category/development/)\n\n![Hands on with Kiro, the AWS preview of an agentic AI IDE driven by specifications](https://devclass.com/wp-content/uploads/2025/06/aiagent-768x379.webp \"Hands on with Kiro, the AWS preview of an agentic AI IDE driven by specifications\")\n\nAWS has previewed Kiro, a fork of Code OSS (the open-source part of Visual Studio Code) which promotes a AI-driven developer workflow based on specifications including requirements documents.\n\nKiro is a standalone IDE and although it is an AWS product, it is presented as “slightly separated from the rest of core AWS,” according to Nathan Peck, AWS developer advocate for AI, commenting in an [extensive discussion](https://news.ycombinator.com/item?id=44560662) of the preview. Kiro can be used without an AWS account, by logging into either Google or GitHub. Why the separation? Peck said that the goal is for Kiro to have a “unique identity outside AWS” in order to appeal to developers using other platforms.\n\nKiro has its [own site](https://kiro.dev/) and according to the About page is built and operated by a small, opinionated team within AWS. It is free during preview, following which there will be a free tier with 50 agentic interactions per month, Pro accounts for $19.00 per user/month with 1,000 interactions, and Pro+ accounts for $39.00 with 3,000 interactions. Additional interactions will cost $0.04 each. A single interaction can be a lengthy response to a detailed prompt that “potentially runs for 3-5 minutes of Kiro iterating away on writing code,” said Peck.\n\nKiro collects both telemetry data and content by default for “service improvement” in the free version, but this can be disabled in settings.\n\n![](https://devclass.com/wp-content/uploads/2025/07/kiro1-1024x673.jpg)Let me Vibe that for you: Kiro ready to go\n\nAccording to the docs, the key differentiation for Kiro is the use of specifications (specs). Specs are defined in three markdown files: requirements.md, design.md, and tasks.md. The requirements file uses EARS (Easy Approach to Requirements Syntax) – a mechanism for constraining textual requirements [developed](https://alistairmavin.com/ears/) by Andrew Mavin and others at Rolls Royce. The design document describes the tech stack and architecture of the application, and the tasks list shows a series of steps needed to implement the design, right through to deployment.\n\nThe docs recommend having multiple specs for a project. For example, in an ecommerce application there might be one set for user authentication, another for the product catalog, another for the shopping cart, and so on. This separation will make the project more manageable and collaboration easier.\n\nAlong with the spec files, Kiro supports “steering” files, used to set standards for code generation including the technology stack, project structure, naming conventions and more. MCP servers are also supported, with JSON configuration files.\n\nAnother important feature is agent hooks. These are agentic actions triggered by file events (create, save, delete) or invoked manually, for example for code review. Hooks are generated by describing what they should do, such as to generate tests, or to examine files for security issues.\n\nWe put Kiro to the test by describing an application to manage a rota of volunteers running game sessions, without stating any particular technology. We used the default LLM which is Claude Sonnet 4.0. The output from a few minutes work included specification documents for a React frontend, Node.js/Express backend, and PostgreSQL database. Further details included Material-UI components, React Router for navigation, Prisma ORM for database code, Jest unit testing, all code in TypeScript, and more.\n\n![](https://devclass.com/wp-content/uploads/2025/07/kiro2-1-1024x685.jpg)Our Kiro-generated application under development, with 2 of 20 tasks completed\n\nKiro generated 20 tasks, each of which had several steps. The first task, setting up the initial project, completed successfully. The second, initializing the database, was more of a struggle, as the AI struggled with how to connect to a suitable PostgreSQL instance and hit an error attempting to run the prisma dev server. Rather than fix the error, Kiro generated a readme on database setup.\n\nSome manual steps will be needed to progress; but we were impressed with how much the AI achieved, work which would have taken several days without its assistance. The output is also, so far, not AWS-specific, and task 19, “set up deployment configuration”, sets up Docker containers which could run in a variety of environments.\n\n“Current LLMs still need a human SDE [software development engineer] in the loop,” said Peck, making the point that this type of tool is not intended to automate everything but can save a huge amount of time.\n\n[According](https://www.linkedin.com/feed/update/urn:li:activity:7350558499971522564/) to AWS CEO Matt Garman, Kiro is “an agentic IDE that gets developers from prototype to production with the structure that production-ready code requires.” The existence of the specification documents means that both the AI and human developers have a reference to guide development.\n\nThis tidiness may fail as a project evolves though. “Currently specifications are mostly static documents,” said Peck, implying that the spec can easily get out of sync with the actual state of the code as changes are made.\n\nKiro does not only generate applications from scratch, but also works in a similar manner to other chat-based AI coding assistants for existing projects. Vibe mode is used for quick assistance with coding questions. There is also a terminal integration where Kiro responds to general questions and instructions.\n\nSecurity is an issue and Kiro installs by default in Autopilot mode, in which the agent is free to make code changes. If turned off, Kiro runs in Supervised mode with prompts for approval before any change. Even in Autopilot mode, there are user approval prompts for critical actions such as installing npm modules or running commands with npx, as we saw in our brief hands on. Commands can be added to an allow list for automatic approval.\n\nKiro supports a variety of programming languages, but the documentation specifically references TypeScript/JavaScript, Python, or Java; and we have the impression that it will work best with these. There is a particular snag for .NET developers, in that Kiro uses the Open VSX registry for extensions which excludes the proprietary Microsoft C# support available in VS Code. Some developers would prefer Kiro to be a CLI that was IDE-independent.\n\nPeck said that there is “room for a CLI version as well” but that IDEs have an advantage over CLIs because more tools are available.\n\nAlthough it arrived in a crowded market, Kiro does feel distinctive and its spec-driven approach will help to mitigate the sometimes-disorderly outcomes from AI-driven coding – though developers may be wary of the default Autopilot mode.\n\n[## Google VP of development explains how 'citizen developers' must be tempered by the pros](https://devclass.com/2025/07/18/google-vp-of-development-explains-how-citizen-developers-must-be-tempered-by-the-pros/)[## AWS S3 gets vector buckets with new algorithms for reasonable performance at lower cost, VP tells us](https://devclass.com/2025/07/17/aws-s3-gets-vector-buckets-with-new-algorithms-for-reasonable-performance-at-lower-cost-vp-tells-us/)[## Microsoft shovels extra Copilot features into VS Code amid dev complaints of 'more AI bloat'](https://devclass.com/2025/07/14/microsoft-shovels-extra-copilot-features-into-vs-code-amid-dev-complaints-of-more-ai-bloat/)[## Docker adds AI agents to Compose along with GPU-powered cloud Offload service](https://devclass.com/2025/07/10/docker-adds-ai-agents-to-compose-along-with-gpu-powered-cloud-offload-service/)[## Despite 30 months work, core developer says Python's JIT compiler is often slower than the interpret...](https://devclass.com/2025/07/09/despite-30-months-work-core-developer-says-pythons-jit-compiler-is-often-slower-than-the-interpreter/)[## Things Go better with telemetry: Microsoft adds phone home to its Go build](https://devclass.com/2025/07/08/things-go-better-with-telemetry-microsoft-adds-phone-home-to-its-go-build/)[## Zig lead makes 'extremely breaking' change to std.io ahead of Async and Await's return](https://devclass.com/2025/07/07/zig-lead-makes-extremely-breaking-change-to-std-io-ahead-of-async-and-awaits-return/)[## Microsoft SQL Server MCP tool: 'Leap in data interaction' or limited and frustrating?](https://devclass.com/2025/07/02/microsoft-sql-server-mcp-tool-leap-in-data-interaction-or-limited-and-frustrating/)[## Cloudflare container platform in public preview with scale to zero pricing, some initial limitations](https://devclass.com/2025/07/01/cloudflare-container-platform-in-public-preview-with-scale-to-zero-pricing-some-initial-limitations/)[## Microsoft to finally expunge the Azure AD Graph API](https://devclass.com/2025/06/30/microsoft-to-finally-expunge-the-azure-ad-graph-api/)[## Avalonia UI sponsorship 'completely removes' open source vs commercial conflict claims CEO](https://devclass.com/2025/06/26/avalonia-ui-sponsorship-completely-removes-open-source-vs-commercial-conflict-claims-ceo/)[## Google positions itself for 'next decade' of AI as Gemini CLI arrives with generous free tier](https://devclass.com/2025/06/25/google-positions-itself-for-next-decade-of-ai-as-gemini-cli-arrives-with-generous-free-tier/)\n\n[!\\[DevClass\\](https://devclass.com/wp-content/uploads/2018/08/DevClass_logo_White_small-Horizontal.png)DevClassDeveloper News](https://devclass.com/)\n\n### ABOUT US\n\nDevClass is the news and analysis site covering modern software development issues, from the team behind the Continuous Lifecycle, Serverless Computing and MCubed conferences\n\nContact us: [devclass@sitpub.com](mailto:devclass@sitpub.com)\n\n### FOLLOW US\n\n[Linkedin](https://www.linkedin.com/company/devclass/)\n\n[RSS](https://devclass.com/feed/)\n\n[Twitter](https://twitter.com/d3vclass?lang=en)\n\n[Youtube](https://www.youtube.com/channel/UCEk1p4Omxqi0E0ij6Bfy4HQ)\n\n© Situation Publishing, 2018-2024\n\n- [About](https://devclass.com/about/)\n- [Contribute](https://devclass.com/contribute/)\n- [Contact](https://devclass.com/contact-us/)\n- [Sales](https://situationpublishing.com/home/contact-us/)\n- [Privacy](https://devclass.com/privacy/)\n- [Cookies](https://devclass.com/cookies/)\n- [Terms & Conditions](https://devclass.com/tc/)\n- [Do not sell my personal information](https://devclass.com/devclass-privacy-policy-for-california-residents/)",
  "Description": "AWS has previewed Kiro, a fork of Code OSS (the open-source part of Visual Studio Code) which promotes […]",
  "Title": "Hands on with Kiro, the AWS preview of an agentic AI IDE driven by specifications",
  "FeedUrl": "https://devclass.com/feed/",
  "PubDate": "2025-07-15T15:43:14+00:00",
  "Author": "Tim Anderson",
  "ProcessedDate": "2025-08-09 20:23:24",
  "Tags": [
    "AI/ML",
    "AWS",
    "Development",
    "Kiro",
    "Visual Studio Code"
  ],
  "FeedName": "DevClass"
}
