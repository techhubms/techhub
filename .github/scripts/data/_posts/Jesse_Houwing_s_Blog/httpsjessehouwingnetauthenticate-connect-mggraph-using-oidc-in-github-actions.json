{
  "ProcessedDate": "2025-08-05 09:48:42",
  "FeedUrl": "https://jessehouwing.net/rss/",
  "EnhancedContent": "I'm running a number of maintenance scripts against our Azure EntraId to manage GitHub related things. Removing dormant users, asking users to setup their notification email correctly etc.\n\nFor a long time, I ran these scripts with an interactive session, before moving them over to GitHub Actions. Recently I made the move to convert my scripts to a workflow and changed the authentication mechanism to OIDC-connect, in order to remove the need to manage secrets and tokens.\n\nThe documentation is quite clear on how to set things up:\n\n[Authenticate to Azure from GitHub Actions by OpenID Connect Securely authenticate to Azure services from GitHub Actions workflows using Azure Login action with OpenID Connect (OIDC). !\\[\\](https://jessehouwing.net/content/images/icon/favicon.ico)Microsoft LearnMoChilia !\\[\\](https://jessehouwing.net/content/images/thumbnail/open-graph-image.png)](https://learn.microsoft.com/en-us/azure/developer/github/connect-from-azure-openid-connect?ref=jessehouwing.net) Unfortunately, while it explains how to setup an Azure PowerShell session using `enable-AzPSSession: true` , it doesn't explain how to authenticate using `connect-mggraph` .\n\nAfter some experimentation (and of course some help from GitHub Copilot), I figured out I could query the access token from `az` , then pass that straight to `connect-mggraph` . So now my workflow looks like this:\n\n```yaml\n- name: Azure CLI Login\nuses: azure/login@v2 with: client-id: ${{ secrets.AZURE_CLIENT_ID }} tenant-id: ${{ secrets.AZURE_TENANT_ID }} allow-no-subscriptions: true\n\n- name: Assign Costcenters\nrun: | $accessToken = az account get-access-token --resource https://graph.microsoft.com ` --query accessToken --output tsv write-host \"::add-mask::$accessToken\" $accessToken = $accessToken | ConvertTo-SecureString -AsPlainText -Force Connect-MgGraph -AccessToken $accessToken -NoWelcome\n\n# rest of the script here ...\nshell: pwsh ```\n\nAnd my scripts can happily query the Microsoft Graph.",
  "FeedLevelAuthor": "Scrum Bug",
  "OutputDir": "_posts",
  "Tags": [
    "Azure",
    "GitHub",
    "GitHub Actions",
    "PowerShell",
    "Security"
  ],
  "Author": "Jesse Houwing",
  "FeedName": "Jesse Houwing's Blog",
  "Link": "https://jessehouwing.net/authenticate-connect-mggraph-using-oidc-in-github-actions/",
  "Description": "I'm running a number of maintenance scripts against our Azure EntraId to manage GitHub related things. Removing dormant users, asking users to setup their notification email correctly etc.\n\nFor a long time, I ran these scripts with an interactive session, before moving them over to GitHub Actions. Recently",
  "Title": "Authenticate Connect-MgGraph  using OIDC in GitHub Actions",
  "PubDate": "2025-06-10T15:08:58+00:00"
}
