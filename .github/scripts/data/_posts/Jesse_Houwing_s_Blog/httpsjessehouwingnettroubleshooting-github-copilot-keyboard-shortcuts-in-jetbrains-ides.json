{
  "ProcessedDate": "2025-08-05 09:50:03",
  "FeedUrl": "https://jessehouwing.net/rss/",
  "EnhancedContent": "Over the past months I've delivered 100s of GitHub Copilot workshops. Ranging from 2 hour introduction talks, where I quickly walk through the main features of the product, up to day-long workshops with interactive hands-on.\n\nFor most people it's pretty easy to get started. In Visual Studio Code you install a plugin, in Visual Studio 2022 it's installed by default, but in other IDEs it can be a bit trickier to get GitHub Copilot to work.\n\nIn my experience the different [Jetbrains IDEs are among the trickiest. This includes IntelliJ, Rider, Pycharm, Webstorm, RubyMine and more](https://www.jetbrains.com/ides/?ref=jessehouwing.net). So far I've found two main problems that break GitHub Copilot.\n\n## Keyboard shortcut is already assigned to another command\n\nThe Jetbrains IDEs, for many users, are an alternative IDE which at some point in their career replaced another product. Because of that there are many predefined keymaps available. For example, Rider offers the following:\n\n- IntelliJ\n- Emacs\n- Resharper\n- Sublime Text\n- Visual Assist\n- Visual Studio\n- Visual Studio 2022\n- Visual Studio Code\n\nPlugins that install themselves in these IDEs need to find a keyboard shortcut which isn't already in use, and among all of these different layouts that leaves very few easily accessible keys available.\n\nYou can see whether an assigned keyboard shortcut is conflicting with other assigned commands by double-clicking the command in the keymap and picking **Add keyboard shortcut** from the context menu.\n\n![](https://jessehouwing.net/content/images/2025/01/image-3.png)See whether an assigned keyboard shortcut is conflicting with other assigned commands by double-clicking the command in the keymap and picking **Add keyboard shortcut** from the context menu For example, the default `alt` +`\\` keyboard shortcut is used by GitHub Copilot to Show Completions, but in the Visual Studio 2022 keymap, which is my preference, that shortcut is already assigned to 3 other commands:\n\n![](https://jessehouwing.net/content/images/2025/01/image.png)`alt` +`\\` is already assigned to 3 other commands In order to use GitHub Copilot to its fullest potential, you need to go through each of its keyboard shortcuts and either assign a free key combination or remove the other assigned actions by clicking `ok` and then choosing to `remove` the other assigned actions:\n\n![](https://jessehouwing.net/content/images/2025/01/image-1.png)Remove other assigned actions to allow GitHub Copilot to use the keyboard shortcut For now, I haven't found a better solution. On the plus side, this will allow me to assign the same keyboard shortcuts I use in Visual Studio 2022 or Visual Studio Code so that I don't need to juggle even more shortcuts in my head.\n\n## Conflict between GitHub Copilot and Jetbrains' bundled line completion\n\n> Note: this problem should now be solved in the 2024.3.6 version, which automatically turns the full line completion back on if you've previously turned it off:\n\n![](https://jessehouwing.net/content/images/2025/03/image-1.png)Rider automatically re-enabling Full Line Completion Completing a suggestion using `tab` might not work when **GitHub Copilot** and Jetbrains' bundled **Full line code completion** are enabled at the same time. Work is clearly underway to let these two coexist and work together.\n\nYet I've encountered issues when GitHub Copilot and Jetbrains' Inline completion are both turned on. Under normal circumstances the two features work it out among eachother, but when connecting to a remote IDE using ssh (using GitHub Codespaces for example) the assigned keyboard shortcuts may fail.\n\nThis is either fixed by ensuring **GitHub Copilot** and **Full line code completion** are both installed locally as well as remotely and are both up to date. In case `tab` completion still fails, disabling the **Full line code completion** plugin both locally and remotely usually solves the problem.\n\n![](https://jessehouwing.net/content/images/2025/01/image-2.png)Disable the \"Full line completion\" plugin in case GitHub Copilot can't `tab` complete.",
  "FeedLevelAuthor": "Scrum Bug",
  "OutputDir": "_posts",
  "Tags": [
    "GitHub",
    "github copilot",
    "jetbrains",
    "rider"
  ],
  "Author": "Jesse Houwing",
  "FeedName": "Jesse Houwing's Blog",
  "Link": "https://jessehouwing.net/troubleshooting-github-copilot-keyboard-shortcuts-in-jetbrains-ides/",
  "Description": "Over the past months I've delivered 100s of GitHub Copilot workshops. Ranging from 2 hour introduction talks, where I quickly walk through the main features of the product, up to day-long workshops with interactive hands-on.\n\nFor most people it's pretty easy to get started. In Visual",
  "Title": "Troubleshooting GitHub Copilot keyboard shortcuts in Jetbrains IDEs",
  "PubDate": "2025-01-22T18:39:29+00:00"
}
