{
  "ProcessedDate": "2025-08-05 09:49:12",
  "FeedUrl": "https://jessehouwing.net/rss/",
  "EnhancedContent": "As you might know, I maintain a few Azure Pipelines extensions, for backwards compatibility many of these include Typescript targeting Node 16 still. Today I was playing around with Model Context Protocol (MCP) servers in Visual Studio Code Insiders and ran into an issue where the current active Node version on my system was older than the one required by the MCP server.\n\nTo allow me to easily switch between Node versions I rely on [Fast Node Switcher](https://github.com/Schniz/fnm?ref=jessehouwing.net), which sets up the local environment variables, changes the PATH and does some magic with symlinks to seamlessly switch from one Node version to another in a matter of seconds.\n\nThis also requires me to select the node version I want to use, either before starting Visual Studio Code, or inside the terminal of Visual Studio Code. So, a normal startup sequence would look like this for me:\n\n``` cd azure-pipelines-variables-tasks fnm use v16 code . ```\n\nMCP Servers can be written in any programming language, but many are distributed as npm packages. And given that they're pretty recent, they often don't work on older node versions. As was the case with the `@playwright/mcp@latest` package to allow GitHub Copilot to interact with the UI presented by my extensions.\n\nWhen installing the playwright MCP server, the following snippet is stored in the Visual Studio Code settings.json:\n\n```json \"mcp\": { \"servers\": { \"playwright\": { \"command\": \"npx\", \"args\": [ \"-y\", \"@playwright/mcp@latest\" ] } } } ```\n\nBut this will rely on the version of `npx` and the version of `node` that are available on the path. As mentioned before, these are too old in my case.\n\nI tried using `fnm exec --using v22` to launch the version of `npx` matching node 22, but unfortunately, there seems to be [a quirk in `fnm` which fails to find `npx` in this specific usecase](https://github.com/Schniz/fnm/issues/1406?ref=jessehouwing.net). The MCP server fails to start with the following error message:\n\n``` 2025-04-02 17:34:19.103 [info] Starting server from LocalProcess extension host 2025-04-02 17:34:19.120 [info] Connection state: Starting 2025-04-02 17:34:19.120 [info] Connection state: Running 2025-04-02 17:34:19.160 [warning] [server stderr] error: Can't spawn program: program not found 2025-04-02 17:34:19.160 [warning] [server stderr] Maybe the program npx does not exist on not available in PATH? 2025-04-02 17:34:19.164 [info] Connection state: Error Process exited with code 1 ```\n\nAfter some additional searching I found an alternative option in [Node Version Switcher](https://github.com/jasongin/nvs?ref=jessehouwing.net). Which has a similar `exec` option. It's just as easy to install:\n\n``` winget install jasongin.nvs\n# restart shell\nnvs install 22.14.0 ```\n\nI then had to change my MCP server configuration in Visual Studio Code to match:\n\n```json \"mcp\": { \"servers\": { \"playwright\": { \"command\": \"nvs\", \"args\": [\"exec\", \"22.14.0\", \"npx\", \"-y\", \"@playwright/mcp@latest\"] } } } ```\n\nAnd now my build terminal uses Node 16 and the Playwright MCP server happily runs in Node 22! It looks like I can even combine this with `fnm` for now, though I might just rewrite my current scripts to rely on `nvs` instead.",
  "FeedLevelAuthor": "Scrum Bug",
  "OutputDir": "_posts",
  "Tags": [
    "GitHub",
    "github copilot",
    "Visual Studio Code"
  ],
  "Author": "Jesse Houwing",
  "FeedName": "Jesse Houwing's Blog",
  "Link": "https://jessehouwing.net/vscode-running-mcp-using-node-version/",
  "Description": "As you might know, I maintain a few Azure Pipelines extensions, for backwards compatibility many of these include Typescript targeting Node 16 still. Today I was playing around with Model Context Protocol (MCP) servers in Visual Studio Code Insiders and ran into an issue where the current active Node version",
  "Title": "Running Model Context protocol servers in a specific Node version inside Visual Studio Code",
  "PubDate": "2025-04-02T17:56:59+00:00"
}
