{
  "OutputDir": "_videos",
  "PubDate": "2025-10-31T00:00:22+00:00",
  "Author": "Microsoft Developer",
  "FeedName": "Microsoft Developer YouTube",
  "Link": "https://www.youtube.com/watch?v=HQQavvdrAA0",
  "EnhancedContent": null,
  "Description": "In this episode, Ayan Gupta is joined again by Bruno Borges and Sandra Ahlgrimm, who show you the other side of MCP (Model Context Protocol): building clients! If the server is the barista, the client is the customer placing the order. This is where user needs get translated into actual requests, making client-server architectures so powerful.\n\nBuilding directly on the last session where you created an MCP server, this session demonstrates how to consume that server from multiple client applications. You'll learn three distinct approaches to working with MCP: testing with the MCP Inspector tool, integrating into Visual Studio Code with GitHub Copilot, and building a Java application using LangChain4j.\n\nBruno and Sandra first show you how to configure VS Code to use your MCP server, allowing GitHub Copilot to access your custom tools during development. You'll see how the AI can automatically call your server's functions to retrieve accurate, domain-specific data rather than relying solely on its training data. This creates a powerful workflow where your development environment becomes aware of your business logic and APIs.\n\nNext, they build a complete Java chat application using LangChain4j that integrates with the MCP server. You'll see how to configure chat models (including local models like Llama), set up chat memory, and register MCP tools as providers. The application demonstrates real-time interaction, with the AI model calling your MCP tools to answer questions about monkey species, but the same patterns work for any domain.\n\n0:00 - Introduction: Clients Drive the Interaction 0:57 - Recap: The MCP Server We Built 1:36 - Testing with MCP Inspector Tool 2:21 - Configuring MCP in Visual Studio Code 3:00 - Using MCP Resources in Copilot 3:42 - Enabling Agent Mode for MCP 4:42 - Querying the MCP Server via VS Code 5:40 - Getting Accurate Data from MCP Tools 6:23 - Building a Java Client Application 7:01 - Integrating LangChain4j with MCP 7:42 - Running the Chat Application 8:27 - Querying for Monkey Species 8:51 - Testing with Fictional Species 9:29 - Using Other AI CLI Tools with MCP 10:05 - Session Recap and Wrap-Up\n\nResources: aka.ms/JavaAndAIForBeginners\n\n#MCP #ModelContextProtocol #JavaClient #LangChain4j #GitHubCopilot #AIIntegration #JavaDevelopment #ChatApplications #VSCode #LocalLLM #AITools #LlamaAI",
  "Tags": [
    "AIIntegration",
    "AITools",
    "ChatApplications",
    "GitHubCopilot",
    "JavaClient",
    "JavaDevelopment",
    "LangChain4j",
    "LlamaAI",
    "LocalLLM",
    "MCP",
    "ModelContextProtocol",
    "VSCode"
  ],
  "ProcessedDate": "2025-10-31 00:08:52",
  "FeedUrl": "https://www.youtube.com/feeds/videos.xml?channel_id=UCsMica-v34Irf9KVTh6xx-g",
  "Title": "MCP and Java Apps: Building a Client",
  "FeedLevelAuthor": "Microsoft Developer"
}
