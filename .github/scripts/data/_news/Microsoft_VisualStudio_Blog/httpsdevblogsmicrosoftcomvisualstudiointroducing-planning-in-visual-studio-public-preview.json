{
  "Author": "Rhea Patel",
  "PubDate": "2025-10-22T15:54:18+00:00",
  "Title": "Introducing Planning in Visual Studio (Public Preview)",
  "Tags": [
    "Artificial Intelligence",
    "Copilot",
    "GitHub Copilot",
    "Planning",
    "Planning Mode",
    "Spec Driven Development",
    "Visual Studio"
  ],
  "ProcessedDate": "2025-10-22 16:03:20",
  "FeedName": "Microsoft VisualStudio Blog",
  "EnhancedContent": "Quick prompts are great for small fixes, but they fall short on big projects. You end up rewriting instructions, tweaking them constantly, and hoping the model stays on track. It gives Copilot a visible, structured path to follow, one that updates as it works and keeps you in control at every step.\n\nIn Agent Mode, Copilot can now create plans that research your codebase, break down big tasks, and run them step by step while iterating along the way. The result is a more predictable and transparent workflow that helps you understand exactly what itâ€™s doing.\n\n[https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/10/Planning-quick-quick-1.mp4](https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/10/Planning-quick-quick-1.mp4)\n\nðŸŸ© **Now available:** Planning in Chat is in *public preview* in Visual Studio 2022 17.14. Weâ€™re rolling this out gradually, so you might already have it enabled. If not, you can turn it on via **Tools &gt; Options &gt; Copilot &gt; Enable Planning.**\n\n# How It Works\n\nPlanning uses transparent tool calls to manage complex tasks in a structured way.\n\nWhen you ask Copilot to handle a multi-step task, it automatically determines whether to respond directly or switch into built in planning. Simple prompts get quick answers, while multi-step ones trigger a coordinated plan. When invoked, Planning creates a markdown file that defines the task, research steps, and progress updates as each execution begins. As Copilot works, it revises and refines the plan â€” adapting to new context or results.\n\nA few details to keep in mind:\n\n- The plan is written to a temporary file (`%TEMP%\\VisualStudio\\copilot-vs\\`\n). To reuse it across threads, add it to your repo. If you want longer-term storage options, upvote [this request.](https://developercommunity.visualstudio.com/t/Allow-saving-and-reusing-Copilot-plans-i/10985882)\n- If you edit the plan while a response is running, changes may not take effect immediately. Stop the response, update the file or prompt, and restart it. Weâ€™re exploring ways to make mid-response edits smoother. [Upvote this idea -&gt;](https://developercommunity.visualstudio.com/t/Redirect-Agent-Mode-Mid-Response/10956902) if youâ€™d like to see it sooner.\n- Progress is tracked directly in the plan file, so you can always see whatâ€™s completed and whatâ€™s next.\n\n## **How Planning Impacts Response Quality**\n\nPlanning makes Copilot more predictable and consistent by giving it a structured way to reason about your project. It builds on techniques from hierarchical and closed-loop planning research â€“ enabling Copilot to plan at a high level, execute step-by-step, and adjust dynamically as it learns more about your codebase and issues encountered during implementation.\n\nIn our latest SWE-bench runs, both GPT-5 and Claude Sonnet 4 performed better with planning, around 15% higher success and 20% more tasks resolved and weâ€™re continuing to test additional models to confirm the trend.\n\nThese early results show measurable gains in reliability and task completion, especially for larger, multi-step problems.\n\n# Whatâ€™s Next\n\nWeâ€™re actively collecting feedback as we evolve Copilotâ€™s planning system to better fit your workflow. This marks the foundation of planning-driven development in Visual Studio. Upcoming improvements will focus on smarter caching, refined reasoning, and deeper project context. Itâ€™s an early milestone â€“ but one we believe will make Copilot a more predictable and transparent collaborator. Share your feedback here: [Planning/To dos in Copilot Chat.](https://developercommunity.visualstudio.com/t/PlanningTo-dos-in-Copilot-Chat/10951150)\n\nThis remains a preview feature as we continue refining the planning format, expanding tests across newer models, and validating how these structured plans evolve alongside model improvements.",
  "OutputDir": "_news",
  "Link": "https://devblogs.microsoft.com/visualstudio/introducing-planning-in-visual-studio-public-preview/",
  "Description": "Quick prompts are great for small fixes, but they fall short on big projects. You end up rewriting instructions, tweaking them constantly, and hoping the model stays on track. It gives Copilot a visible, structured path to follow, one that updates as it works and keeps you in control at every step. In Agent Mode, [â€¦]\n\nThe post [Introducing Planning in Visual Studio (Public Preview)](https://devblogs.microsoft.com/visualstudio/introducing-planning-in-visual-studio-public-preview/) appeared first on [Visual Studio Blog](https://devblogs.microsoft.com/visualstudio).",
  "FeedLevelAuthor": "Visual Studio Blog",
  "FeedUrl": "https://devblogs.microsoft.com/visualstudio/feed/"
}
