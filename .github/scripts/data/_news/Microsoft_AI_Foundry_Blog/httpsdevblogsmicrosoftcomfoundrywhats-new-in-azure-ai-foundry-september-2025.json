{
  "FeedUrl": "https://devblogs.microsoft.com/foundry/feed/",
  "PubDate": "2025-10-08T00:58:44+00:00",
  "ProcessedDate": "2025-10-08 01:30:15",
  "EnhancedContent": "## TL;DR\n\n- **Models (GA + Preview):** GPT‑5‑Codex (GA) brings multimodal code reasoning & repo intelligence; Sora adds video‑to‑video (Preview); Grok 4 Fast (Preview) enables low‑latency reasoning / non‑reasoning routing; o4‑mini RFT graduates to GA for reward‑driven optimization.\n- **Realtime & Voice:** gpt‑realtime (GA) unifies low‑latency speech ↔ reasoning; Voice Live API GA + new Marin/Cedar voices; Avatar 4K + Emotion delivers higher‑fidelity expressive agents.\n- **Agents & Tools:** Browser Automation (Preview) gains resilient DOM + telemetry; new Computer Use (Preview) unlocks pixel workflows; Python & .NET Agents betas add multi‑tool helper APIs, streaming tool deltas, and AOT readiness.\n- **Retrieval & Evaluation:** Azure AI Search knowledge sources + answer synthesis (Preview) replace single target index patterns; `azure-ai-evaluation`\n1.11.0 adds experiment tags, groundedness-with-tool-context, and multilingual red team categories.\n- **Platform & Security:** Key Vault connections (New) eliminate inline secrets; Identity SDKs (all major languages) enforce required env vars + clearer claims challenges; structured outputs & function calling converge on /openai/v1.\n- **Language & Data Services:** Translator API (Public Preview) integrates real‑time + batch multilingual flows; Text Analytics 6.0.0b1 debuts next‑gen surface; Foundry Local v0.7 expands Windows NPU coverage.\n\n## Models\n\n### GPT-5-Codex (GA)\n\nOpenAI’s GPT‑5‑Codex is now generally available in Azure AI Foundry. It unifies multimodal code reasoning (text + image context) with advanced repository awareness:\n\n- Multimodal coding: Provide architecture diagrams or UI screenshots alongside code / build logs for contextually coherent fixes.\n- Deep refactors & migration flows: Long‑context reasoning supports staged changes (IaC, build scripts, tests) with function calling to execute or validate steps.\n- Code review intelligence: Trained to surface critical dependency, security, and performance patterns early—reducing manual review cycles.\nAccess & deployment: Locate GPT‑5‑Codex in the Model Catalog (Standard Global). Use the v1 latest REST / SDK surface; avoid legacy preview API parameters unless consuming preview‑only capabilities. Pricing table (see announcement) includes cached input tier—incorporate `cache_control` only where reuse materially lowers token spend. Migration guidance: Prior Codex / codex‑mini workflows can usually migrate by (1) re‑deploying under a new deployment name (treat that name as `model` ), (2) re‑enabling tool/function calling with structured JSON schema, and (3) validating temperature & reasoning tokens (if customizing). Evaluate hallucination deltas with groundedness metrics in `azure-ai-evaluation` 1.11.0.\n\n[Explore GPT‑5‑Codex announcement](https://techcommunity.microsoft.com/blog/azure-ai-foundry-blog/announcing-gpt%E2%80%915%E2%80%91codex-redefining-developer-experience-in-azure-ai-foundry/4455524)\n\n### Sora video-to-video (Preview)\n\nSora expands beyond image‑to‑video into early video‑to‑video transformation: supply an input clip plus natural language directives (“retain scene pacing; stylize lighting cyber‑noir; smooth camera jitter”). Output preserves temporal coherence while applying style / minor layout edits. Current preview guardrails: capped clip duration, resolution ceilings, stricter content safety (strong rejection for unapproved sensitive categories). Apply via existing Sora preview access form if not already onboarded. Use for: creative iteration loops, marketing variant generation, synthetic dataset augmentation (post review of policy). Not for: photorealistic biometric reenactment or disallowed content categories.\n\n[Try Sora video quickstart](https://learn.microsoft.com/en-us/azure/ai-foundry/openai/video-generation-quickstart?tabs=windows%2Ckeyless)\n\n### gpt‑realtime (GA)\n\nThe new gpt‑realtime model unifies Azure’s speech‑to‑speech capabilities—improved instruction following, lower latency, higher naturalness, and image input support. It collapses prior multi‑model pipelines (STT → LLM → TTS) into a single low‑latency loop, lowering end‑to‑end round‑trip times for live support, IVR deflection, education, and collaborative coding voice agents. New Marin & Cedar voices add expressive prosody; pricing undercuts the earlier realtime preview by ~20%. Combine with Voice Live API session state for resilient interruption handling and with function calling to execute quick lookups or transactions mid‑dialog.\n\nKey advantages:\n\n- Fewer moving parts (simpler scaling & observability)\n- Better barge‑in / interruption handling\n- Native tool/function calling for orchestration\n- Direct multimodal (describe image via voice, then refine)\n\n[Read gpt‑realtime GA blog](https://techcommunity.microsoft.com/blog/azure-ai-foundry-blog/announcing-gpt-realtime-on-azure-ai-foundry/4449666)\n\n### Grok 4 Fast models (Preview)\n\n`grok-4-fast-reasoning` and `grok-4-fast-non-reasoning` from xAI bring parallel function calling, long (~131K) context, multimodal image understanding (with tokenizer), and structured JSON output schemas tuned for agentic tool orchestration. Choose the reasoning variant for complex planning / analytical hops; choose non‑reasoning for deterministic low‑latency classification, extraction, or lightweight chaining. Efficient H100 utilization lowers per‑request latency, allowing cost/quality routing (e.g., default to non‑reasoning; escalate to reasoning when confidence or complexity thresholds are unmet).\n\nImplementation tips:\n\n- Define JSON Schema for predictable tool outputs—minimizes downstream validation.\n- Log reasoning depth metrics (tokens/time) to refine router thresholds.\n- Pair with answer synthesis evaluation to measure citation correctness.\n\n[Preview Grok 4 Fast models](https://techcommunity.microsoft.com/blog/azure-ai-foundry-blog/announcing-the-grok-4-fast-models-from-xai-now-available-in-azure-ai-foundry/4456701)\n\n### o4‑mini Reinforcement Fine-Tuning (GA)\n\nReinforcement Fine-Tuning (RFT) for `o4-mini` graduates to GA. Instead of curating thousands of labeled completions (SFT), supply a grading function or choose built‑in graders (code correctness, groundedness, format adherence, safety) and let iterative sampling optimize for reward. Start effective runs with ~100 scored examples; expand only if reward plateaus. Use RFT when: multi‑step reasoning consistency matters; policy adherence needs dynamic evaluation; or SFT plateaued on edge‑case reasoning.\n\nWorkflow outline:\n\n1. Draft concise rubric (YAML / Python grader) with explicit pass/fail + optional scalar score.\n2. Seed minimal diverse prompts (avoid near duplicates).\n3. Kick off RFT job; monitor reward trend & variance.\n4. Post‑train, re‑run evaluation suite (groundedness, red team) to validate safety/regression.\n\n![o4-mini RFT fine-tuning Python grading loop example showing iterative reward improvements](https://devblogs.microsoft.com/foundry/wp-content/uploads/sites/89/2025/10/o4mini_Python.gif)\n\n[Learn about o4‑mini RFT GA](https://techcommunity.microsoft.com/blog/azure-ai-foundry-blog/o4-mini-reinforcement-fine-tuning-rft-now-generally-available-on-azure-ai-foundr/4452597)\n\n### Local + edge\n\n- Foundry Local v0.7: Expanded NPU support (Intel & AMD) on Windows 11, dynamic execution provider detection via Windows ML—simplifies distributing hybrid local/cloud fallback apps.\n\n[Voice Live API GA](https://techcommunity.microsoft.com/blog/azure-ai-foundry-blog/upgrade-your-voice-agent-with-azure-ai-voice-live-api/4458247) [Foundry Local docs](http://aka.ms/foundry-local-docs)\n\n### Avatar 4K + Emotion Control\n\nHigh‑fidelity 4K avatar rendering plus synchronized emotion control (voice + facial expressions) elevate customer support, training, accessibility, and marketing use cases. Train with 4K source video (framed & centered) for maximum detail retention; choose portrait for vertical signage / mobile, landscape for presentations. Emotion parameters (e.g., cheerful, angry, hopeful) propagate to both prosody and facial animation, producing consistent affective output—falling back to neutral where unsupported.\n\nBest practices:\n\n- Downscale at runtime (e.g., 1920×1080) if bandwidth is constrained—retain original 4K master for archival.\n- Use SSML emotion tags for fine‑grained segment control within longer scripts.\n- Benchmark MOS (expressiveness) for your domain before large rollout.\n\n![Avatar emotion control preview in speech playground showing selectable emotion parameters and synchronized facial expression rendering](https://devblogs.microsoft.com/foundry/wp-content/uploads/sites/89/2025/10/speech-playground.png)\n\n[See Avatar 4K + Emotion features](https://techcommunity.microsoft.com/blog/azure-ai-foundry-blog/latest-avatar-updates-4k-support-and-emotion-control-features/4449995)\n\n## Agents\n\n### Computer Use tool (Preview)\n\nEnables pixel-level interaction (click, type, screenshot feedback loop) across desktop or browser surfaces when DOM semantics are insufficient (legacy apps, canvas‑heavy UIs). Compared to Browser Automation, Computer Use trades semantic DOM awareness for raw visual adaptability—powerful but higher risk.\n\nRisk mitigations:\n\n- Run only in isolated, low‑privilege VMs without production secrets.\n- Enforce human approval for domain / action categories (file system, administrative panels).\n- Maintain an allowlist of permitted host/application windows; reject off‑scope UI transitions.\n\nTelemetry tip: Persist screenshot hashes to detect visually static loops (stalled automation) and abort gracefully.\n\n[Computer Use tool preview](https://devblogs.microsoft.com/foundry/announcing-computer-use-tool-preview-in-azure-ai-foundry-agent-service/)\n\n### Microsoft Agent Framework: the new OSS orchestration engine for agent development\n\nThe Microsoft Agent Framework (OSS) unifies Semantic Kernel durability & AutoGen orchestration. Early adopters benefit from: MCP discovery, agent‑to‑agent (A2A) messaging, declarative YAML/JSON agent specs, OpenTelemetry tracing, and enterprise approval hooks. Plan migration: map legacy plugin patterns to Tool abstractions, validate memory connectors, re‑instrument tracing IDs for continuity in dashboards.\n\n[Explore Microsoft Agent Framework](https://aka.ms/AgentFramework)\n\n## Tools\n\n### Evaluation & safety\n\n`azure-ai-evaluation` 1.11.0 introduces:\n\n- Experiment tags: Attach stable metadata (model deployment name, router policy hash, tool set version) for slice comparisons.\n- Groundedness with tool context: Evaluator now inspects cited tool outputs and retrieved documents—flagging hallucinations that conflict with authoritative snippets.\n- Multilingual red teaming expansion: Adds IndirectAttack (prompt injection / covert instruction) & UngroundedAttributes categories for broader safety coverage.\n\nRecommended workflow: (1) Tag baseline (pre‑Browser Automation) agent, (2) enable new tools, (3) re‑run evaluation suite; compare groundedness deltas and risk incidence to justify rollout.\n\n[Review evaluation evaluators](https://learn.microsoft.com/en-us/azure/ai-foundry/concepts/evaluation-evaluators)\n\n### Retrieval (Azure AI Search)\n\nKnowledge sources (Preview) abstract underlying indexes & Blob sources with integrated vectorization + chunking. Answer synthesis composes grounded responses with inline citations across multiple knowledge sources—removing earlier single target index constraints. Combine with index description metadata to improve relevance selection. Debug hybrid retrieval via sub‑score & debug modes; apply scoring profiles during semantic reranking for domain boosting (freshness, popularity, compliance tags).\n\n[Agentic retrieval updates](https://techcommunity.microsoft.com/blog/azure-ai-foundry-blog/agentic-retrieval-updates-in-azure-ai-search/4450621)\n\n## Platform\n\n### Translator API\n\nAdd neural machine translation, custom terminology, and document translation pipelines directly into multi‑modal or agentic workflows. Use Translator alongside GPT‑5‑Codex or retrieval flows to localize generated content, summarize foreign‑language sources, or produce parallel corpora for evaluation.\n\nKey scenarios:\n\n- Real‑time chat + translation: route user utterances through Translator before/after model reasoning.\n- Batch document translation: feed translated artifacts into knowledge sources for multi‑lingual grounding.\n- Terminology compliance: apply custom term lists prior to evaluation to reduce post‑edit distance.\n\n>\n> Tip: For latency‑sensitive pipelines, perform translation asynchronously and cache deterministic outputs keyed by content hash + target locale.\n>\n\n## SDK & language changelog (September 2025)\n\nFocused highlights for the core Azure AI Foundry developer packages this month. Each bullet groups all September versions (stable + beta) so you can scan breaking changes, new features, and migration actions quickly.\n\n### Python\n\n**Agents (`azure-ai-agents` 1.2.0b2 → 1.2.0b4)** Features: Browser Automation tool support; Computer Use preview tool; multi‑tool helper APIs (`get_tool_resources` , `get_tool_definitions` ); streaming delta models for Connected / search / Fabric / SharePoint tools. Reliability: Multiple tracing fixes (duplicate span name normalization, hanging `create_and_process` w/ MCP approval). Action: If you instrument OpenTelemetry, re-run baselines—span naming updates may affect existing dashboards. [Changelog](https://github.com/Azure/azure-sdk-for-python/tree/azure-ai-agents_1.2.0b4/sdk/ai/azure-ai-agents/CHANGELOG.md)\n\n**Evaluation (`azure-ai-evaluation` 1.11.0)** Features: Experiment `tags` , groundedness evaluator extended to tool outputs (file search context), multilingual red team (IndirectAttack, UngroundedAttributes). Action: Start tagging evaluation runs (e.g., model deployment, tool policy hash) to enable cross‑version diff queries. [Changelog](https://github.com/Azure/azure-sdk-for-python/tree/azure-ai-evaluation_1.11.0/sdk/evaluation/azure-ai-evaluation/CHANGELOG.md)\n\n**Projects (`azure-ai-projects` 1.1.0b3–b4)** Changes: Dependency bump to prefer the newer Agents beta (`>=1.2.0b3` ), secret key retrieval bug fix for custom key connections. Action: Pin `azure-ai-agents>=1.2.0b4` to pick up tracing + tool improvements before scaling multi‑tool threads. [Changelog](https://github.com/Azure/azure-sdk-for-python/tree/azure-ai-projects_1.1.0b4/sdk/ai/azure-ai-projects/CHANGELOG.md)\n\n**Search (`azure-search-documents` 11.7.0b1)** Features: Knowledge sources abstraction, answer synthesis, extensive new model classes (KnowledgeSource\\*, agent activity records), removal of target index constructs. Breaking (preview): Removal of `KnowledgeAgentTargetIndex` & related agent index params—migrate to `KnowledgeSource` objects. [Changelog](https://github.com/Azure/azure-sdk-for-python/tree/azure-search-documents_11.7.0b1/sdk/search/azure-search-documents/CHANGELOG.md)\n\n**Identity (`azure-identity` 1.25.0)** Features: `claims` support for `AzureDeveloperCliCredential` ; `require_envvar` to enforce env presence; multiple auth robustness fixes. Action: Use `DefaultAzureCredential(require_envvar=\"AZURE_TOKEN_CREDENTIALS\")` in CI to fail fast on misconfiguration. [Changelog](https://github.com/Azure/azure-sdk-for-python/tree/azure-identity_1.25.0/sdk/identity/azure-identity/CHANGELOG.md)\n\n**Text Analytics (`azure-ai-textanalytics` 6.0.0b1)** Status: First beta of next‑gen surface; expect breaking shape evolution—keep isolated virtual env during evaluation. [Changelog](https://github.com/Azure/azure-sdk-for-python/tree/azure-ai-textanalytics_6.0.0b1/sdk/textanalytics/azure-ai-textanalytics/CHANGELOG.md)\n\n**Voice Live (`azure-ai-voicelive` 1.0.0b1–b2)** Features: WebSocket connection model (`VoiceLiveConnection` ), async function call support, serialization fix for function outputs. Action: When upgrading from b1 → b2, validate function call message schema (JSON str serialization change). [Changelog (b2)](https://github.com/Azure/azure-sdk-for-python/tree/azure-ai-voicelive_1.0.0b2/sdk/ai/azure-ai-voicelive/CHANGELOG.md)\n\n**Cosmos DB (`azure-cosmos` 4.14.0b2–b4)** Focus: Session token scoping optimizations, extensive bug fixes (health check region handling, partition key edge cases), new feed range & multi‑item read APIs. Action: Re‑benchmark RU & latency after upgrade—per request session token trimming can materially reduce header size. [Latest beta changelog](https://github.com/Azure/azure-sdk-for-python/tree/azure-cosmos_4.14.0b4/sdk/cosmos/azure-cosmos/CHANGELOG.md)\n\n### .NET\n\n**Agents Persistent (`Azure.AI.Agents.Persistent` 1.2.0-beta.2–.5)** Features: Streaming MCP tool support, FileSearch & CodeInterpreter tool enablement, AOT compatibility, additional delta tool call models, delete ThreadMessages, Bing/Fabric/SharePoint tool deltas. Fixes: ResponseFormat handling + unexpected streaming type issues, image block serialization. Action: If targeting native AOT, update to ≥ beta.4 and re‑generate RDXML after adding new tool types. [Changelog (latest)](https://github.com/Azure/azure-sdk-for-net/tree/Azure.AI.Agents.Persistent_1.2.0-beta.5/sdk/ai/Azure.AI.Agents.Persistent/CHANGELOG.md)\n\n**Projects (`Azure.AI.Projects` 1.0.0-beta.11)** Breaking: Extensive type and method renames (e.g., `AIDeployment` → `AssetDeployment` , consolidated `GetOpenAIClient` ). Features: New `AIProjectClient` ctor supporting `AuthenticationTokenProvider` . Action: Run a full solution rename pass; integrate with unified Inference client path. [Changelog](https://github.com/Azure/azure-sdk-for-net/tree/Azure.AI.Projects_1.0.0-beta.11/sdk/ai/Azure.AI.Projects/CHANGELOG.md)\n\n**OpenAI Inference (`Azure.AI.OpenAI` 2.3.0-beta.2)** Features: Experimental default headers & query parameter injection (pipeline customization). Action: Avoid embedding secrets—use this for correlation IDs or feature flags only. [Changelog](https://github.com/Azure/azure-sdk-for-net/tree/Azure.AI.OpenAI_2.3.0-beta.2/sdk/openai/Azure.AI.OpenAI/CHANGELOG.md)\n\n**Search (`Azure.Search.Documents` 11.7.0-beta.6–.7)** Features: System.ClientModel serialization; knowledge sources & answer synthesis; AOT‑friendly overloads with `JsonTypeInfo<T>` . Breaking: Removal of knowledge agent target index; `QueryDebugMode` relocation. [Changelog (beta.7)](https://github.com/Azure/azure-sdk-for-net/tree/Azure.Search.Documents_11.7.0-beta.7/sdk/search/Azure.Search.Documents/CHANGELOG.md)\n\n**Identity (`Azure.Identity` 1.16.0 + `Azure.Identity.Broker` 1.3.0)** Features: Custom env variable constructor, improved claims challenge exceptions, reduced probe traffic with Managed Identity env configuration; broker package deprecates legacy SharedTokenCache credential options. Fixes: `AzureDeveloperCliCredential` hang & token cache issues. [Changelog](https://github.com/Azure/azure-sdk-for-net/tree/Azure.Identity_1.16.0/sdk/identity/Azure.Identity/CHANGELOG.md)\n\n**Core (`Azure.Core` 1.47.2–1.48.0 / `System.ClientModel` 1.6.0–1.6.1)** Updates: Adoption of System.ClientModel 1.6.x, user agent policy additions, AOT friendliness improvements, auth bug fix enabling TokenCredential with unbranded clients. [Azure.Core changelog](https://github.com/Azure/azure-sdk-for-net/tree/Azure.Core_1.48.0/sdk/core/Azure.Core/CHANGELOG.md)\n\n**Data Movement (Storage) 12.2.2 & 12.3.0-beta.1** Fixes: Path handling for directory uploads; metadata preservation. Features (beta): Quality & cross-protocol copy improvements; SMB↔NFS share copy support (files shares beta). [Changelog](https://github.com/Azure/azure-sdk-for-net/tree/Azure.Storage.DataMovement_12.3.0-beta.1/sdk/storage/Azure.Storage.DataMovement/CHANGELOG.md)\n\n**Synapse Artifacts 1.0.0-preview.22** Large schema expansion (ServiceNowV2, SnowflakeV2, cert-based auth params, numerous Oracle / Amazon RDS additions) plus redaction/bypass flags. Action: Regenerate strongly typed orchestration layers if you rely on generated linked service definitions. [Changelog](https://github.com/Azure/azure-sdk-for-net/tree/Azure.Analytics.Synapse.Artifacts_1.0.0-preview.22/sdk/synapse/Azure.Analytics.Synapse.Artifacts/CHANGELOG.md)\n\n### Java\n\n**Search (`azure-search-documents` 11.7.9 GA & 11.8.0-beta.8)** Beta: Knowledge sources + answer synthesis, dropped obsolete target index constructs, added `VectorFilterMode.STRICT_POST_FILTER` . GA patch: Dependency upgrades (`azure-core` 1.56.0, serializer updates). [Beta changelog](https://github.com/Azure/azure-sdk-for-java/tree/azure-search-documents_11.8.0-beta.8/sdk/search/azure-search-documents/CHANGELOG.md)\n\n**Identity (`azure-identity` 1.18.0 + `azure-identity-broker` 1.1.17)** Features: Claims challenge support across CLI/PowerShell credentials; `AzureIdentityEnvVars` enum + `requireEnvVars` builder enforcement; enhanced error messaging. [Changelog](https://github.com/Azure/azure-sdk-for-java/tree/azure-identity_1.18.0/sdk/identity/azure-identity/CHANGELOG.md)\n\n**Cosmos (`azure-cosmos` 4.74.0 & ecosystem)** Adds throughput bucket support; encryption & Spark connectors updated; test harness beta adds Gateway V2. Action: Evaluate new Spark auth audience config (`spark.cosmos.auth.aad.audience` ). [Changelog](https://github.com/Azure/azure-sdk-for-java/tree/azure-cosmos_4.74.0/sdk/cosmos/azure-cosmos/CHANGELOG.md)\n\n**Communication Call Automation 1.4.3 / 1.5.0 / 1.6.0-beta.1** Progressive feature rollout: Teams persona support, public participant transfer (beta), transcription PII redaction & sentiment analysis. Action: Adopt 1.5.0 for stable recording improvements; experiment with beta for advanced transfer flows. [Changelog (1.6.0-beta.1)](https://github.com/Azure/azure-sdk-for-java/tree/azure-communication-callautomation_1.6.0-beta.1/sdk/communication/azure-communication-callautomation/CHANGELOG.md)\n\n**Storage (Blobs 12.31.2 + batch/crypto)** Dependency alignment with `azure-core` 1.56.0; cryptography & internal Avro updates—reassess shaded deps if you build a fat JAR. [Blob changelog](https://github.com/Azure/azure-sdk-for-java/tree/azure-storage-blob_12.31.2/sdk/storage/azure-storage-blob/CHANGELOG.md)\n\n**Core (`azure-core` 1.56.1 & serializers)** Serializer (Jackson/Gson) bumps; ensure any custom `ObjectMapper` modules are compatible after upgrade. [Core changelog](https://github.com/Azure/azure-sdk-for-java/tree/azure-core_1.56.1/sdk/core/azure-core/CHANGELOG.md)\n\n>\n> Note: Java Agents & Projects packages (persistent agents / projects) did not surface distinct September release entries in highlights; monitor upcoming drops for parity features introduced in .NET & Python.\n>\n\n### JavaScript / TypeScript\n\n**Monitor OpenTelemetry 1.13.0 → 1.14.0** Features: Enable nearly all instrumentations by default; multi‑exporter metrics support; default exporter version bump. Action: Audit duplicated custom instrumentation to avoid double spans after upgrade. [Changelog (1.14.0)](https://github.com/Azure/azure-sdk-for-js/tree/@azure/monitor-opentelemetry_1.14.0/sdk/monitor/monitor-opentelemetry/CHANGELOG.md)\n\n**Communication Call Automation 1.5.0 & 1.6.0-beta.1** Adds Teams multipersona, recording via call connection ID, sentiment + PII redaction (beta adds participant transfer, richer transcription tooling). [Changelog (beta)](https://github.com/Azure/azure-sdk-for-js/tree/@azure/communication-call-automation_1.6.0-beta.1/sdk/communication/communication-call-automation/CHANGELOG.md)\n\n**Identity 4.12.0** Features: `requiredEnvVars` option + union type; claims challenge failure clarity; multiple credential UX fixes. Action: Set `requiredEnvVars: [\"AZURE_TOKEN_CREDENTIALS\"]` in production initialization blocks for deterministic startup validation. [Changelog](https://github.com/Azure/azure-sdk-for-js/tree/@azure/identity_4.12.0/sdk/identity/identity/CHANGELOG.md)\n\n**Cosmos (`@azure/cosmos` 4.5.1)** Reliability: Removal of unavailable regions from location cache; retry policy refinement for ENOTFOUND. Action: Clear any custom location preference overrides to benefit from new pruning heuristics. [Changelog](https://github.com/Azure/azure-sdk-for-js/tree/@azure/cosmos_4.5.1/sdk/cosmosdb/cosmos/CHANGELOG.md)\n\n**Playwright ecosystem** `@azure/create-playwright` 1.0.0 and `@azure/playwright` 1.0.0 initial releases; deprecation notices for legacy create / microsoft-playwright-testing packages—follow migration guide to new config names (`createAzurePlaywrightConfig` , `connectTimeout` ). [Create Playwright changelog](https://github.com/Azure/azure-sdk-for-js/tree/@azure/create-playwright_1.0.0/sdk/loadtesting/create-playwright/CHANGELOG.md)\n\n**OpenTelemetry Exporter 1.0.0-beta.34–.35** Features: Customer SDK Stats export interval env var; telemetry success field; dependency refresh. [Changelog (beta.35)](https://github.com/Azure/azure-sdk-for-js/tree/@azure/monitor-opentelemetry-exporter_1.0.0-beta.35/sdk/monitor/monitor-opentelemetry-exporter/CHANGELOG.md)\n\n**TypeSpec HTTP Runtime 0.3.1** Logging improvements (leaner RestError output), dependency bumps. [Changelog](https://github.com/Azure/azure-sdk-for-js/tree/@typespec/ts-http-runtime_0.3.1/sdk/core/ts-http-runtime/CHANGELOG.md)\n\n## Documentation updates\n\nThis section is now consolidated. We removed low-signal freshness edits (date bumps, screenshot swaps, minor wording) and grouped only substantive changes.\n\n### New\n\n- GPT-5-Codex GA announcement & model entry (multimodal code reasoning) – migration guidance & repo intelligence patterns. ([announcement](https://techcommunity.microsoft.com/blog/azure-ai-foundry-blog/announcing-gpt%E2%80%915%E2%80%91codex-redefining-developer-experience-in-azure-ai-foundry/4455524) · [model entry](https://learn.microsoft.com/en-us/azure/ai-foundry/openai/includes/models-azure-direct-openai))\n- Sora video-to-video preview docs – input clip transformation, temporal coherence guardrails. ([quickstart](https://learn.microsoft.com/en-us/azure/ai-foundry/openai/video-generation-quickstart) · [concept](https://learn.microsoft.com/en-us/azure/ai-foundry/openai/concepts/video-generation))\n- Browser Automation tool docs & samples – preview setup, DOM heuristics, Playwright Workspace integration. ([how-to](https://learn.microsoft.com/en-us/azure/ai-foundry/agents/how-to/tools/browser-automation) · [samples](https://learn.microsoft.com/en-us/azure/ai-foundry/agents/how-to/tools/browser-automation-samples))\n- Key Vault connections setup – managed secret binding with rotation playbook. ([guide](https://learn.microsoft.com/en-us/azure/ai-foundry/how-to/set-up-key-vault-connection))\n- Deep Research agents tutorial – multi-hop planning + Bing search orchestration. ([samples](https://learn.microsoft.com/en-us/azure/ai-foundry/agents/how-to/tools/deep-research-samples))\n- Browser Automation + Computer Use security/isolation architecture pages. ([browser automation](https://learn.microsoft.com/en-us/azure/ai-foundry/agents/how-to/tools/browser-automation) · [computer use](https://learn.microsoft.com/en-us/azure/ai-foundry/agents/how-to/tools/computer-use))\n- Retrieval knowledge sources & answer synthesis – multi-index grounding & latency trade-offs. ([blog](https://techcommunity.microsoft.com/blog/azure-ai-foundry-blog/agentic-retrieval-updates-in-azure-ai-search/4450621))\n- Evaluation graders (groundedness with tool context, multilingual red teaming) + tagging best practices. ([evaluators](https://learn.microsoft.com/en-us/azure/ai-foundry/concepts/evaluation-evaluators))\n- Network security perimeter (preview) configuration guide – perimeter join & logging. ([perimeter guide](https://learn.microsoft.com/en-us/azure/ai-foundry/how-to/add-foundry-to-network-security-perimeter))\n- Deployment policy (Azure Policy) guide – restrict model families, context length, publisher controls. ([model deployment policy](https://learn.microsoft.com/en-us/azure/ai-foundry/how-to/model-deployment-policy))\n- Consolidated cost & usage dashboard concept – unified spend/health view. ([consolidated view](https://learn.microsoft.com/en-us/azure/ai-foundry/concepts/ai-foundry-consolidated-view))\n- Model router regional expansion matrix – new regions & fallback guidance. ([model region support](https://learn.microsoft.com/en-us/azure/ai-foundry/agents/concepts/model-region-support))\n- Structured outputs + function calling modernization (/openai/v1) – JSON schema strategies. ([structured outputs](https://learn.microsoft.com/en-us/azure/ai-foundry/openai/how-to/structured-outputs) · [function calling](https://learn.microsoft.com/en-us/azure/ai-foundry/openai/how-to/function-calling))\n- Azure Direct Models terminology pages (abuse monitoring & limited access policy refactor). ([abuse monitoring](https://learn.microsoft.com/en-us/azure/ai-foundry/openai/concepts/abuse-monitoring) · [limited access](https://learn.microsoft.com/en-us/azure/ai-foundry/responsible-ai/openai/limited-access))\n- Local tracing quickstart (instrument locally, export to portal) & advanced redaction. ([trace application](https://learn.microsoft.com/en-us/azure/ai-foundry/how-to/develop/trace-application))\n- Computer Use tool overview & samples – pixel automation + high-risk mitigations. ([overview](https://learn.microsoft.com/en-us/azure/ai-foundry/agents/how-to/tools/computer-use) · [samples](https://learn.microsoft.com/en-us/azure/ai-foundry/agents/how-to/tools/computer-use-samples))\n- Hub CMK & Hub RBAC dedicated articles – separated from project scope. ([hub CMK](https://learn.microsoft.com/en-us/azure/ai-foundry/concepts/hub-encryption-keys-portal) · [hub RBAC](https://learn.microsoft.com/en-us/azure/ai-foundry/concepts/hub-rbac-azure-ai-foundry))\n- BCDR for Agents section – state durability & recovery. ([agents overview](https://learn.microsoft.com/en-us/azure/ai-foundry/agents/overview))\n- Voice Live data privacy + transparency notes – processing & retention. ([privacy](https://learn.microsoft.com/en-us/azure/ai-foundry/responsible-ai/speech-service/voice-live/data-privacy-security) · [transparency](https://learn.microsoft.com/en-us/azure/ai-foundry/responsible-ai/speech-service/voice-live/transparency-note))\n- Consolidated model deployments guide + marketplace configuration expansion. ([deployments guide](https://learn.microsoft.com/en-us/azure/ai-foundry/foundry-models/how-to/create-model-deployments) · [marketplace config](https://learn.microsoft.com/en-us/azure/ai-foundry/foundry-models/how-to/configure-marketplace))\n- General platform cost management concept (broad billing + budgeting) and models cost management overhaul. ([platform costs](https://learn.microsoft.com/en-us/azure/ai-foundry/concepts/manage-costs) · [models costs](https://learn.microsoft.com/en-us/azure/ai-foundry/foundry-models/how-to/manage-costs))\n- GPT‑5 vs GPT‑4.1 comparison guide – model selection heuristics. ([comparison](https://learn.microsoft.com/en-us/azure/ai-foundry/foundry-models/how-to/model-choice-guide))\n- Codex how-to guide – CLI, VS Code, approval modes, security guardrails. ([codex](https://learn.microsoft.com/en-us/azure/ai-foundry/openai/how-to/codex))\n- AI solution templates additions – accelerator templates. ([templates](https://learn.microsoft.com/en-us/azure/ai-foundry/how-to/develop/ai-template-get-started))\n- Continuous evaluation (agents) region & metrics guide. ([continuous eval](https://learn.microsoft.com/en-us/azure/ai-foundry/how-to/continuous-evaluation-agents))\n- Structured outputs REST/Python includes with `gpt-5-codex`\n& /openai/v1 adoption. ([structured outputs](https://learn.microsoft.com/en-us/azure/ai-foundry/openai/how-to/structured-outputs))\n\n### Updated / GA / Overhauled\n\n- GPT-5-Codex model docs – moved from limited access to GA; added quotas & reasoning feature clarifications. ([model entry](https://learn.microsoft.com/en-us/azure/ai-foundry/openai/includes/models-azure-direct-openai))\n- Sora docs – video-to-video workflow, multi-input constraints, added region (Sweden Central) & REST examples. ([concept](https://learn.microsoft.com/en-us/azure/ai-foundry/openai/concepts/video-generation))\n- gpt-realtime – GA rename, new event names, latency & supported models list updates. ([realtime quickstart](https://learn.microsoft.com/en-us/azure/ai-foundry/openai/realtime-audio-quickstart))\n- Grok 4 / Grok 4 Fast models – region & capability tables, availability columns added/normalized. ([models include](https://learn.microsoft.com/en-us/azure/ai-foundry/foundry-models/includes/models-azure-direct-others))\n- o4-mini RFT – GA guidance, benchmark methodology & reward tuning recommendations. ([RFT how-to](https://learn.microsoft.com/en-us/azure/ai-foundry/openai/how-to/reinforcement-fine-tuning))\n- Avatar 4K + Emotion – latency/resolution matrix & emotion propagation clarifications. ([avatar blog](https://techcommunity.microsoft.com/blog/azure-ai-foundry-blog/latest-avatar-updates-4k-support-and-emotion-control-features/4449995))\n- DeepSeek R1 / V3.1 – reasoning prompt engineering, deployment capability rows. ([DeepSeek tutorial](https://learn.microsoft.com/en-us/azure/ai-foundry/foundry-models/tutorials/get-started-deepseek-r1))\n- Black Forest Labs & FLUX.1 Kontext entries – parameter details (seed, aspect ratio) + safety notes. ([models include](https://learn.microsoft.com/en-us/azure/ai-foundry/foundry-models/includes/models-azure-direct-others))\n- Retrieval service docs – knowledge sources abstraction & answer synthesis latency benchmarks. ([retrieval blog](https://techcommunity.microsoft.com/blog/azure-ai-foundry-blog/agentic-retrieval-updates-in-azure-ai-search/4450621))\n- Evaluation service & azure-ai-evaluation 1.11.0 – experiment tags, groundedness-with-tool-context, multilingual categories. ([evaluators](https://learn.microsoft.com/en-us/azure/ai-foundry/concepts/evaluation-evaluators))\n- Unified OpenAI client migration (Python/JS/.NET/Java/Go) – removal of legacy chat completions quickstarts; Responses API emphasized. ([Python overview](https://learn.microsoft.com/en-us/azure/ai-foundry/openai/includes/language-overview/python))\n- Function calling & structured outputs – added gpt-5-codex; deprecated older GPT-4 preview variants. ([function calling](https://learn.microsoft.com/en-us/azure/ai-foundry/openai/how-to/function-calling))\n- Content filtering configurability – threshold ranges & alignment with safety annotations. ([content filters](https://learn.microsoft.com/en-us/azure/ai-foundry/openai/how-to/content-filters))\n- Prompt engineering – warnings against extracting raw reasoning (policy risk) & simplified scenario framing. ([prompt engineering](https://learn.microsoft.com/en-us/azure/ai-foundry/openai/concepts/prompt-engineering))\n- Realtime API & vision/PDF guidance – generalized context length + image/PDF capability scoping. ([Responses API](https://learn.microsoft.com/en-us/azure/ai-foundry/openai/how-to/responses))\n- Fine-tuning overview & model includes – GPT‑4o/mini availability; global training graduated from preview. ([fine-tuning overview](https://learn.microsoft.com/en-us/azure/ai-foundry/concepts/fine-tuning-overview))\n- RFT docs – custom graders security (AST evaluation), resource limits, removed deprecated fields. ([RFT how-to](https://learn.microsoft.com/en-us/azure/ai-foundry/openai/how-to/reinforcement-fine-tuning))\n- Cost management (models/platform/hub) – unified, expanded budgeting & export instructions; redirects added. ([models cost mgmt](https://learn.microsoft.com/en-us/azure/ai-foundry/foundry-models/how-to/manage-costs))\n- Security & governance TOC – reorganized hub vs project encryption, connections, quotas. ([encryption keys](https://learn.microsoft.com/en-us/azure/ai-foundry/concepts/encryption-keys-portal))\n- RBAC & Entra ID guides – group management, subscription-scope purge visibility requirement. ([RBAC](https://learn.microsoft.com/en-us/azure/ai-foundry/concepts/rbac-azure-ai-foundry))\n- Network security perimeter – traffic routing order (Private Link precedence) & diagnostics. ([perimeter guide](https://learn.microsoft.com/en-us/azure/ai-foundry/how-to/add-foundry-to-network-security-perimeter))\n- Deployment guides – portal/Bicep/CLI rewrites, endpoint retrieval clarity, template recommendations for private networking. ([deployment guide](https://learn.microsoft.com/en-us/azure/ai-foundry/foundry-models/how-to/create-model-deployments))\n- Model router docs – removed limited access notes; clarified GPT-5 routing & fallback logic. ([model router](https://learn.microsoft.com/en-us/azure/ai-foundry/openai/concepts/model-router))\n- Model region & quota matrices – added GPT-5, removed deprecated columns, standardized availability presentation. ([region support](https://learn.microsoft.com/en-us/azure/ai-foundry/agents/concepts/model-region-support))\n- Quotas & limits – standardized quota increase process include; added GPT-5 Codex, o-series, realtime entries. ([quotas & limits](https://learn.microsoft.com/en-us/azure/ai-foundry/openai/quotas-limits))\n- Playgrounds & first-run experiences – unified flows, expanded highlights, tracking parameters for analytics. ([playgrounds](https://learn.microsoft.com/en-us/azure/ai-foundry/concepts/concept-playgrounds))\n- Foundry Local architecture/get-started – NPU (Intel/AMD/Qualcomm) support, driver notes, troubleshooting & default model alias changes. ([Foundry Local get started](https://learn.microsoft.com/en-us/azure/ai-foundry/foundry-local/get-started))\n- Foundry Local CLI & SDK refs – execution provider downloads, restart troubleshooting, EP options added. ([Foundry Local CLI](https://learn.microsoft.com/en-us/azure/ai-foundry/foundry-local/reference/reference-cli))\n- Tracing & evaluation guides – local collector workflow, playground trace/eval clarity, evaluation results comparison instructions. ([trace application](https://learn.microsoft.com/en-us/azure/ai-foundry/how-to/develop/trace-application))\n- Agents quickstarts & concepts – removed redundant tables, expanded orchestration components, updated code tabs. ([agents quickstart](https://learn.microsoft.com/en-us/azure/ai-foundry/agents/quickstart))\n- Browser Automation & Computer Use – troubleshooting, isolation model, risk categorization improvements. ([browser automation](https://learn.microsoft.com/en-us/azure/ai-foundry/agents/how-to/tools/browser-automation))\n- Bing tools & samples – transaction counting, variable naming, configuration name terminology. ([bing tool](https://learn.microsoft.com/en-us/azure/ai-foundry/agents/how-to/tools/bing-custom-search))\n- Marketplace configuration – architecture diagrams & troubleshooting expansions. ([marketplace config](https://learn.microsoft.com/en-us/azure/ai-foundry/foundry-models/how-to/configure-marketplace))\n- Upgrade (Azure OpenAI → Foundry) – networking, pricing, troubleshooting, limitations clarifications; removed obsolete limitations. ([upgrade guide](https://learn.microsoft.com/en-us/azure/ai-foundry/how-to/upgrade-azure-openai))\n- Responses API, reasoning, structured outputs – /openai/v1 adoption, `model`\npayload field emphasis, unsupported feature pruning. ([Responses API](https://learn.microsoft.com/en-us/azure/ai-foundry/openai/how-to/responses))\n- Model retirements timeline – new dates (o1-mini, Mistral variants) & replacements (gpt-5-mini, updated large models). ([model retirements](https://learn.microsoft.com/en-us/azure/ai-foundry/openai/concepts/model-retirements))\n- Voice Live integration / gpt-realtime pairing – session state & interruption handling examples. ([Voice Live GA blog](https://techcommunity.microsoft.com/blog/azure-ai-foundry-blog/upgrade-your-voice-agent-with-azure-ai-voice-live-api/4458247))\n- Agents continuous evaluation – project configuration steps & region table. ([continuous evaluation](https://learn.microsoft.com/en-us/azure/ai-foundry/how-to/continuous-evaluation-agents))\n- FAQ & legacy cleanups – removed outdated GPT‑4 Turbo Q&A; chat completions quickstarts deprecated & redirected. ([FAQ](https://learn.microsoft.com/en-us/azure/ai-foundry/openai/faq))\n\n## Join the community\n\nShip something with these updates and tell us about it! Join the discussion on [Discord](https://aka.ms/azureaifoundry/discord), open a thread in [GitHub Discussions](https://aka.ms/azureaifoundry/forum) forum, or catch the next live deep‑dive ([Model Mondays](http://aka.ms/ModelMondays) + Agent AMA).",
  "Tags": [
    "ai-agents",
    "Azure AI Foundry",
    "azure-ai-search",
    "Browser Automation",
    "evaluations",
    "gpt-5-codex",
    "identity-sdk",
    "key-vault",
    "knowledge-sources",
    "Sora",
    "voicelive",
    "What's New"
  ],
  "FeedLevelAuthor": "Azure AI Foundry Blog",
  "Author": "Nick Brady",
  "Description": "GPT‑5‑Codex GA, Sora video‑to‑video preview, Grok 4 Fast, Browser Automation & Key Vault previews, new Search knowledge sources, Voice Live GA.\n\nThe post [What’s new in Azure AI Foundry | September 2025](https://devblogs.microsoft.com/foundry/whats-new-in-azure-ai-foundry-september-2025/) appeared first on [Azure AI Foundry Blog](https://devblogs.microsoft.com/foundry).",
  "Link": "https://devblogs.microsoft.com/foundry/whats-new-in-azure-ai-foundry-september-2025/",
  "FeedName": "Microsoft AI Foundry Blog",
  "Title": "What’s new in Azure AI Foundry | September 2025",
  "OutputDir": "_news"
}
