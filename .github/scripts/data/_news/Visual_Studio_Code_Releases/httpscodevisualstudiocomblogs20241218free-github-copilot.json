{
  "Link": "https://code.visualstudio.com/blogs/2024/12/18/free-github-copilot",
  "ProcessedDate": "2025-08-24 16:20:38",
  "PubDate": "2024-12-18T00:00:00+00:00",
  "FeedLevelAuthor": "Visual Studio Code - Code Editing. Redefined.",
  "Title": "Announcing a free GitHub Copilot for VS Code",
  "FeedUrl": "https://code.visualstudio.com/feed.xml",
  "EnhancedContent": "Try [MCP servers](/mcp) to extend agent mode in VS Code!\n\nDismiss this update\n\n# Announcing a free GitHub Copilot for VS Code\n\nDecember 18, 2024 by Burke Holland, @burkeholland\n\nWe're excited to announce an all new **free plan for GitHub Copilot**, available for everyone today in VS Code. All you need is a GitHub account. No trial. No subscription. No credit card required.\n\n[Enable GitHub Copilot Free](https://aka.ms/vscode-activatecopilotfree)\n\nYou can click on the link above or just enable GitHub Copilot right from within VS Code like so...\n\nWith GitHub Copilot Free you get **2000 code completions/month**. That's about 80 per working day - which is a lot. You also get **50 chat requests/month**, as well as **access to both GPT-4o and Claude 3.5 Sonnet models**.\n\nIf you hit these limits, ideally it's because Copilot is doing its job well, which is to help you do yours! If you find you need more Copilot, the [paid Pro plan](https://github.com/features/copilot#pricing-2) is unlimited and provides access to additional models like **o1** and **Gemini** (coming in the new year).\n\nWith this announcement, GitHub Copilot becomes a core part of the VS Code experience. The team has been hard at work, as always, improving that experience with brand new AI features and capabilities. Letâ€™s take a look at some of the newer additions to GitHub Copilot that dropped in just the past few months. This is your editor, redefined with AI.\n\n## Work with multiple files using Copilot Edits\n\n[Copilot Edits](https://code.visualstudio.com/docs/copilot/chat/copilot-edits) is a multi-file editing experience that you can open from the top of the chat side bar. Given a prompt, Edits will propose changes across files including creating new files when needed. This gives you the conversational flow of chat combined with the power of Copilot's code generation capabilities. The result is something you have to try to believe.\n\n**Try this:** Build a native mobile app using Flutter. I [built a game last weekend](https://youtu.be/Vj13SdN6OxU?si=sUvbBw0KSQ5q6iWh) and I've never used Flutter in my life.\n\n## Multiple models, your choice\n\nWhether you're using [Chat](https://code.visualstudio.com/docs/copilot/copilot-chat), [Inline Chat](https://code.visualstudio.com/docs/copilot/chat/getting-started-chat#_stay-in-the-flow-with-inline-chat), or [Copilot Edits](https://code.visualstudio.com/docs/copilot/chat/copilot-edits), you get to decide who your pair programmer is.\n\n![AI model selection menu in VS Code.](/assets/blogs/2024/12/18/model-picker.png)\n\n**Try this:** Use 4o to generate an implementation plan for a new feature and then feed that prompt to Claude in [GitHub Copilot Edits](https://code.visualstudio.com/docs/copilot/chat/copilot-edits) to build it.\n\n## Custom instructions\n\nTell GitHub Copilot exactly how you want things done with [custom instructions](https://code.visualstudio.com/docs/copilot/copilot-customization). These instructions are passed to the model with every request, allowing you to specify your preferences and the details that the model needs to know to write code the way you want it.\n\nYou can specify these at the editor or project level. We'll even pick them up automatically if you include a `.github/copilot-instructions.md` file in your project. These instructions can easily be shared with your team, so everyone can be on the same page - including GitHub Copilot.\n\nFor example...\n\n```\n## React 18\n* Use functional components\n* Use hooks for state management\n* Use TypeScript for type safety\n\n## SvelteKit 4\n* Use SSR for dynamic content rendering\n* Use static site generation (SSG) for pre-rendered static pages.\n\n## TypeScript\n* Use consistent object property shorthand: const obj = { name, age }\n* Avoid implicit any\n\n```\n\n**Try this:** Ask Copilot to generate the command to dump your database schema to a file and then set that file as one of your custom instructions.\n\n## Full project awareness\n\nGitHub Copilot has AI powered domain experts that you can mention with the `@` syntax. We call these, \"participants\". The [`@workspace` participant](https://code.visualstudio.com/docs/copilot/workspace-context) is a domain expert in the area of your entire codebase.\n\nGitHub Copilot will also do intent detection (as seen in the video) and include the `@workspace` automatically if it sees you are asking a question that requires full project context.\n\n**Try this:** Type `/help` into the chat prompt to see a list of all the particpants in GitHub Copilot and their various areas of expertise, as well as slash commands that can greatly reduce prompting.\n\n## Naming things and other hard problems\n\nThey say naming things is one of the hardest problems in computer science. Press `F2` to rename something, and GitHub Copilot will give you some suggestions based on how that symbol is implemented and used in your code.\n\n**Try this:** If you don't know what to call something, don't overthink it. Just call it `foo` and implement it. Then hit `F2` and let GitHub Copilot suggest a name for you.\n\n## Speak your mind\n\nSelect the microphone icon to start a voice chat. This is powered by the free, cross-platform [VS Code Speech extension](https://marketplace.visualstudio.com/items?itemName=ms-vscode.vscode-speech) that runs on local models. No 3rd party app required.\n\n![VS Code with file list and voice input active.](/assets/blogs/2024/12/18/vscode-speech.png)\n\n**Try this:** Use Speech with GitHub Copilot Edits to prototype your next app. You can literally talk your way to a working demo.\n\n## Be a terminal expert\n\nWith terminal chat, you can do just about anything in your terminal. Press Cmd/Ctrl + i while in the VS Code terminal and tell GitHub Copilot what you want to do. Copilot can also explain how to fix failed shell commands by analyzing the error output.\n\nFor instance, I know that I can use the [ffmpeg library](https://ffmpeg.org/) to extract frames from videos, but I don't know the syntax and flags. No problem!\n\n![Terminal displaying a script to extract video frames.](/assets/blogs/2024/12/18/terminal-inline-chat.png)\n\n**Try this:** The next time you get an error in your terminal, look for the sparkle icon next to your prompt. Select it to have GitHub Copilot fix, explain, or even auto-correct the shell command for you.\n\n## No fear of commitment\n\nNo more commits that say \"changes\". GitHub Copilot will suggest a commit message for you based on the changes you've made and your last several commit messages. You can [use custom instructions for commit generation](https://code.visualstudio.com/docs/copilot/copilot-customization#_define-commit-message-generation-custom-instructions) to format the messages *exactly* the way you want.\n\n**Try this:** Go beyond commits. Install the [GitHub Pull Requests and Issues extension](https://marketplace.visualstudio.com/items?itemName=GitHub.vscode-pull-request-github) and you can generate pull request descriptions, get summaries of pull requests and even get suggested fixes for issues. All without leaving VS Code.\n\n## Extensions are all you need\n\nEvery VS Code extension can tie directly into the GitHub Copilot APIs and offer a customized AI experience. Check out MongoDB with [their extension](https://marketplace.visualstudio.com/items?itemName=mongodb.mongodb-vscode) that can write impressively complex queries, use fuzzy search and a lot more...\n\n**Try this:** Build your own extension for GitHub Copilot using GitHub Copilot! We've created some new tutorials that show you how to [build a code tutor chat paricipant](https://code.visualstudio.com/api/extension-guides/chat-tutorial) or [generate AI-powered code annotations](https://code.visualstudio.com/api/extension-guides/language-model-tutorial).\n\n## A vision for the future\n\nThis last one is a preview of something we're adding to GitHub Copilot soon, but it's way too cool not to show you right now.\n\nInstall the [Vision Copilot Preview extension](https://marketplace.visualstudio.com/items?itemName=ms-vscode.vscode-copilot-vision) and ask GitHub Copilot to generate an interface based on a screenshot or markup.\n\nOr use it to generate alt text for an image.\n\n**Try this:** Mock up a UI using Figma or Sketch (or PowerPoint - it's ok if you do that. I do it too). Then use `@vision` to generate the UI. You can even tell it which CSS framework to use.\n\n*Note:* Vision is in preview today and requires you to have your own OpenAI, Anthropic, or Gemini API key. The key will not be required when we release it as part of GitHub Copilot. Coming Soon!\n\n## Keeping up with GitHub Copilot\n\nThere's so much more GitHub Copilot we want to show you, but nothing can replace the experience of trying it for yourself. If you're just getting started, we recommend you check out [these 3 short videos](https://github.com/features/copilot/getting-started) to bring you up to speed quickly on the Copilot UI, as well as learning some prompt engineering best practices.\n\nWe ship updates and new features for GitHub Copilot every month. The best way to keep up with the latest and greatest in AI coding is to follow us on [X](https://twitter.com/code), [Bluesky](https://bsky.app/profile/vscode.dev), [LinkedIn](https://www.linkedin.com/showcase/vs-code/), and even [TikTok](https://www.tiktok.com/@vscode). We'll give you the updates as they drop - short and sweet - right in your feed.\n\nAnd if you've got feedback, we'd love to hear it. Feel free to @ us on social or drop an issue or feature request on the [GitHub Copilot extension issues repo](https://github.com/microsoft/vscode/issues).\n\n## GitHub Copilot in other places\n\nAs part of the free tier, you will also be able to use GitHub Copilot on GitHub.com.\n\nWhile we work with GitHub to build the Visual Studio Code experience, Copilot itself is not exclusive to VS Code. You may be wondering about editors like Visual Studio. Will those users get a free Copilot offering as well?\n\nYes. Absolutely. Check out [this blog post](https://aka.ms/copilot-free-vs) from the VS team on what works today and whatâ€™s coming shortly.\n\n## The AI code editor for everyone\n\n2025 is going to be a huge year for GitHub Copilot, now a core part of the overall VS Code experience. We hope that youâ€™ll join us on the journey to redefine the code editor. Again.\n\n[Enable GitHub Copilot Free](https://aka.ms/vscode-activatecopilotfree)\n\nHappy Coding!\n\nBurke Holland @burkeholland",
  "Tags": [
    "blog"
  ],
  "Description": "Announcing a free plan for GitHub Copilot in Visual Studio Code.\n\n[Read the full article](https://code.visualstudio.com/blogs/2024/12/18/free-github-copilot)",
  "OutputDir": "_news",
  "FeedName": "Visual Studio Code Releases",
  "Author": "Burke Holland"
}
