{
  "Link": "https://devblogs.microsoft.com/blog/gpt-5-for-microsoft-developers",
  "ProcessedDate": "2025-08-24 16:22:39",
  "PubDate": "2025-08-14T17:00:24+00:00",
  "FeedLevelAuthor": "Microsoft for Developers",
  "Title": "GPT-5 for Microsoft Developers",
  "FeedUrl": "https://devblogs.microsoft.com/feed",
  "EnhancedContent": "OpenAI announced GPT-5 last week in ‚Äú[GPT-5 and the new era of work](https://openai.com/index/gpt-5-new-era-of-work/)‚Äú. Working with OpenAI, we rolled out GPT-5 support the day it launched, making sure you can use and build with it and integrate it into your applications immediately.\n\nWe‚Äôve got you covered with a dev-focused rundown: GPT-5 availability, new capabilities, and quick-start steps. And don‚Äôt miss our [GPT-5 for Devs live stream Aug 21 at 10 AM Pacific](https://aka.ms/gpt5-for-devs), where we‚Äôll go deeper with code samples, demos, and live Q&A!\n\n[üóìÔ∏è Register for GPT-5 for Devs live stream](https://aka.ms/gpt5-for-devs)\n\n## GPT-5 announcement recap\n\n- Overview announcement: [GPT-5 and the new era of work](https://openai.com/index/gpt-5-new-era-of-work/)\n- Developer deep dive: [Introducing GPT-5 for developers](https://openai.com/index/introducing-gpt-5-for-developers/)\n- Release notes: [Introducing GPT-5](https://openai.com/index/introducing-gpt-5/)\n\nTop highlights from the announcement:\n\n- Better reasoning and structured thinking, with improved accuracy and faster responses\n- Stronger context recognition for complex, real-world workflows\n- Unified capabilities across chat, agents, coding, multimodal, and advanced math\n- Available now in ChatGPT and in the API\n\n## Where you can use GPT-5 today\n\nWe were happy to roll out GPT-5 support the day it was released across our developer products and services, and we‚Äôre continuing to expand these services, for example with this week‚Äôs inclusion of [GPT-5 mini](https://aka.ms/vscode-github-changelog-gpt5-mini) in all Copilot plans.\n\nBelow is a roundup of GPT-5 integrations across Microsoft products and services, based on last week‚Äôs rollout.\n\n### GitHub Copilot\n\nGitHub Copilot brings GPT‚Äë5 into your editor and GitHub workflows for richer code suggestions and chat‚Äîespecially on larger, multi‚Äëfile changes and refactors. Because it‚Äôs integrated into the tools you already use, you can explore GPT‚Äë5‚Äôs capabilities without leaving your flow. Availability can vary by IDE and plan during preview.\n\n- Enhanced coding capabilities with GPT-5 for longer and more complex tasks.\n- Integrated into VS Code and GitHub workflows.\n- VS Code changelog: [GPT-5 mini in Copilot for VS Code](https://aka.ms/vscode-github-changelog-gpt5-mini)\n- VS Code release: [GitHub Copilot in VS Code ‚Äì July release (v1.103)](https://github.blog/changelog/2025-08-07-github-copilot-in-vs-code-july-release-v1-103/)\n- Other IDEs: [OpenAI GPT-5 is now available in public preview in Visual Studio, JetBrains IDEs, Xcode, and Eclipse](https://github.blog/changelog/2025-08-12-openai-gpt-5-is-now-available-in-public-preview-in-visual-studio-jetbrains-ides-xcode-and-eclipse)\n\n### AI Toolkit in Visual Studio Code\n\nUse the AI Toolkit in VS Code to experiment with GPT‚Äë5 models: connect to GitHub Models or Azure AI Foundry, run playgrounds, and scaffold integrations in your workspace. It works with both cloud endpoints and OSS/local backends so you can prototype and ship from the same editor.\n\n- GPT-5 models available via AI Toolkit for experimentation and integration.\n- Supports GPT OSS and cloud/local development.\n- Announcement / docs: [GPT-5 Family of Models & GPT OSS Are Now Available in AI Toolkit for VS Code](https://techcommunity.microsoft.com/blog/azuredevcommunityblog/gpt-5-family-of-models--gpt-oss-are-now-available-in-ai-toolkit-for-vs-code/4441394)\n\n### Azure AI Foundry\n\n**Important**\n\nAccess to gpt-5 in Azure AI Foundry requires registration ([apply here](https://aka.ms/oai/gpt5access)). gpt-5-mini, gpt-5-nano, and gpt-5-chat do not require registration. GPT-5 models are currently available in East US 2 and Sweden Central (Global Standard & Data Zones); see [Azure OpenAI models: GPT-5](https://learn.microsoft.com/en-us/azure/ai-foundry/openai/concepts/models#gpt-5).\n\n- GPT-5 models available with enterprise-grade security and model routing.\n- Supports long-running agentic tasks with [structured outputs](https://learn.microsoft.com/en-us/azure/ai-foundry/openai/how-to/structured-outputs) and reasoning capabilities.\n- Regional availability: GPT-5 models are currently available in East US 2 and Sweden Central (Global Standard & Data Zones). See [Azure OpenAI models: GPT-5](https://learn.microsoft.com/en-us/azure/ai-foundry/openai/concepts/models#gpt-5).\n- Access: [Registration required for gpt-5](https://aka.ms/oai/gpt5access); gpt-5-mini, gpt-5-nano, and gpt-5-chat do not require registration.\n- Full capabilities: [Azure OpenAI reasoning models](https://learn.microsoft.com/en-us/azure/ai-foundry/openai/how-to/reasoning).\n- Announcement / docs: [Microsoft incorporates OpenAI‚Äôs GPT-5 into consumer, developer and enterprise offerings](https://news.microsoft.com/source/features/ai/openai-gpt-5/)\n\n### GitHub Models\n\n- Supports gpt-5, gpt-5-mini, gpt-5-nano, gpt-5-chat.\n- Marketplace: [Models ¬∑ GitHub Marketplace](https://github.com/marketplace/models)\n\n### Microsoft Copilot Studio\n\n- Makers can select GPT-5 models for agent orchestration.\n- Supports GPT-5 Chat and GPT-5 Reasoning with auto-routing.\n- Announcement / docs: [Available today: GPT-5 in Microsoft Copilot Studio](https://www.microsoft.com/en-us/microsoft-copilot/blog/copilot-studio/available-today-gpt-5-in-microsoft-copilot-studio/)\n\n### Microsoft 365 Copilot\n\n- GPT-5 powers Copilot Chat with smarter orchestration, improved reasoning, and multimodal capabilities.\n- Users can opt-in via ‚ÄúTry GPT-5‚Äù button.\n- Announcement / docs: [Available today: GPT-5 in Microsoft 365 Copilot](https://www.microsoft.com/en-us/microsoft-365/blog/2025/08/07/available-today-gpt-5-in-microsoft-365-copilot/)\n\n### OpenAI .NET SDK\n\n- Official .NET library supports GPT-5 via the Responses API, including streaming and reasoning with configurable reasoning effort.\n- Guide: [How to use responses with streaming and reasoning](https://github.com/openai/openai-dotnet#how-to-use-responses-with-streaming-and-reasoning)\n- NuGet: [OpenAI](https://www.nuget.org/packages/OpenAI)\n\n### C# example: streaming with reasoning effort\n\n```cs using OpenAI.Responses;\n\nOpenAIResponseClient client = new( model: \"gpt-5\", apiKey: Environment.GetEnvironmentVariable(\"OPENAI_API_KEY\") );\n\nawait foreach (var update in client.CreateResponseStreamingAsync( userInputText: \"Explain beta-reduction in lambda calculus.\", new ResponseCreationOptions { ReasoningOptions = new ResponseReasoningOptions { ReasoningEffortLevel = ResponseReasoningEffortLevel.High, }, })) { if (update is StreamingResponseContentPartDeltaUpdate delta) { Console.Write(delta.Text); } } ```\n\n### Python example: reasoning effort and verbosity\n\nThis sample demonstrates GPT-5‚Äôs controllable response behavior using the new `reasoning_effort` and `verbosity` parameters, allowing developers to fine-tune how deeply the model thinks and how much it says.\n\n```py import os\n\nimport openai from azure.identity import DefaultAzureCredential, get_bearer_token_provider\n\nclient = openai.AzureOpenAI( api_version=os.environ[\"AZURE_OPENAI_VERSION\"], azure_endpoint=os.environ[\"AZURE_OPENAI_ENDPOINT\"], azure_ad_token_provider=get_bearer_token_provider(DefaultAzureCredential(), \"https://cognitiveservices.azure.com/.default\"), )\n\nresponse = client.chat.completions.create( model=os.environ[\"AZURE_OPENAI_DEPLOYMENT\"], messages=[ {\"role\": \"user\", \"content\": \"Explain beta-reduction in lambda calculus.\"}, ], reasoning_effort=\"minimal\", verbosity=\"low\" ) print(response.choices[0].message. Content) ```\n\n### JavaScript example: GPT-5 structured output (JSON schema)\n\nThis JavaScript sample highlights GPT-5‚Äôs ability to return structured, schema-conforming JSON using the new `response_format` parameter with a custom JSON Schema‚Äîmaking it easy to extract reasoning steps and final answers with full type safety. It also demonstrates seamless integration with Azure Foundry endpoints for secure, production-grade deployments.\n\n```js import { AzureOpenAI } from \"openai\"; import dotenv from \"dotenv\";\n\ndotenv.config();\n\nconst endpoint = process.env.AZURE_INFERENCE_ENDPOINT; // Foundry project endpoint const key = process.env.AZURE_INFERENCE_KEY; // API key const deployment = process.env.AZURE_OPENAI_DEPLOYMENT || \"gpt-5\";\n\nconst client = new AzureOpenAI({ endpoint, apiKey: key, apiVersion: \"2025-01-01-preview\", deployment, });\n\nconst schema = { name: \"math_explanation\", schema: { type: \"object\", properties: { steps: { type: \"array\", items: { type: \"string\" } }, answer: { type: \"number\" }, }, required: [\"steps\", \"answer\"], additionalProperties: false, }, strict: true, };\n\nconst result = await client.chat.completions.create({ model: deployment, messages: [ { role: \"system\", content: \"Return JSON only.\" }, { role: \"user\", content: \"What is 23 * 7? Show your steps.\" }, ], response_format: { type: \"json_schema\", json_schema: schema }, });\n\nconst content = result.choices[0].message?.content ?? \"{}\"; const data = JSON.parse(content); console.log(\"Steps:\", data.steps); console.log(\"Answer:\", data.answer); ```\n\nOutput:\n\n```default Example output for \"What is 23 * 7? Show your steps.\":\n\nSteps: [ 'Break 23 into 20 and 3: (20 + 3) * 7', 'Multiply: 20 * 7 = 140', 'Multiply: 3 * 7 = 21', 'Add the results: 140 + 21 = 161' ] Answer: 161 ```\n\n### Python: RAG Chat Sample\n\nLooking for a full sample? Check out the Azure Search + OpenAI RAG chat app in Python: [RAG chat app with Azure OpenAI and Azure AI Search (Python)](https://github.com/Azure-Samples/azure-search-openai-demo/). It includes a Python backend and React frontend, sample data, and quick start paths (Codespaces, Dev Containers, or azd) so you can deploy and test fast. The docs also cover evaluation and production hardening.\n\nIt‚Äôs updated for GPT‚Äë5: switch the chat model and version via environment variables, then redeploy. See ‚ÄúUsing different chat completion models‚Äù and ‚ÄúUsing reasoning models‚Äù in the sample‚Äôs docs for exact settings.\n\n### Java: OpenAI SDK for Java\n\nThe [OpenAI SDK for Java 3.0.0](https://github.com/openai/openai-java/releases/tag/v3.0.0) release adds support for GPT-5 and new API features.\n\n```java import com.openai.client.OpenAIClient; import com.openai.client.okhttp.OpenAIOkHttpClient; import com.openai.models.ChatModel; import com.openai.models.responses.Response; import com.openai.models.responses.ResponseCreateParams;\n\n// Configures using the `OPENAI_API_KEY`, `OPENAI_ORG_ID` and `OPENAI_PROJECT_ID` environment variables OpenAIClient client = OpenAIOkHttpClient.fromEnv();\n\nResponseCreateParams params = ResponseCreateParams.builder() .input(\"Say this is a test\") .model(ChatModel.GPT_5) .build(); Response response = client.responses().create(params); ```\n\n## Evaluate and compare models\n\nWhen you adopt GPT-5, validate quality and cost for your domain with side-by-side evaluation.\n\n- Azure AI Foundry: Run playground comparisons and batch evaluations with the Azure AI Evaluation SDK. See [Azure OpenAI reasoning models](https://learn.microsoft.com/en-us/azure/ai-foundry/openai/how-to/reasoning)\nand the evaluation SDK: [azure-ai-evaluation (GitHub)](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/evaluation/azure-ai-evaluation).\n- GitHub Models: Quickly try GPT-5 family variants (gpt-5, mini, nano, chat) in the marketplace and your IDE to test latency and output quality. See\n[Models ¬∑ GitHub Marketplace](https://github.com/marketplace/models).\n\nFor .NET apps, when you evaluate or switch to GPT-5, keep quality checks consistent across unit tests and CI by using Microsoft.Extensions.AI Evaluation. It provides quality, safety, and NLP evaluators with caching and reporting to help you spot regressions before rollout. See [The Microsoft.Extensions.AI.Evaluation libraries (Learn)](https://learn.microsoft.com/en-us/dotnet/ai/conceptual/evaluation-libraries) and the blog [Exploring Agent Quality and NLP evaluators](https://devblogs.microsoft.com/dotnet/exploring-agent-quality-and-nlp-evaluators/).\n\n**Tip**\n\nPrefer structured outputs for easier, automated checks (schema validation), and evaluate with groundedness and relevance metrics on your own datasets before switching defaults.\n\n## What we‚Äôve been building\n\nWe‚Äôve been experimenting with GPT-5 across Microsoft and the open-source community. Here are two highlights from the past week:\n\n### Pamela Fox ‚Äî Evaluating GPT-5 for RAG\n\n- Blog: [GPT-5: Will it RAG?](https://blog.pamelafox.org/2025/08/gpt-5-will-it-rag.html)\n- A deep dive into evaluation setup and early takeaways for GPT-5 on retrieval-augmented generation.\n\n### Anthony Shaw ‚Äî GitHub Models CLI updates\n\n- Repo: [tonybaloney/llm-github-models](https://github.com/tonybaloney/llm-github-models)\n- Updated to work with the GPT-5 family via GitHub Models, making it easy to test prompts and workflows from the command line.\n\nTony also wrote up a big blog post on [Using an LLM in GitHub Actions](https://tonybaloney.github.io/posts/using-llm-in-github-actions.html). He explores how to integrate a large language model directly into GitHub Actions workflows, enabling automated reasoning, code review, and decision-making within CI pipelines. He walks through setting up a custom action that invokes an LLM via API, discusses practical use cases like summarizing PRs or validating commit messages, and highlights the potential for AI-assisted automation in developer tooling. It‚Äôs a hands-on look at bringing GPT-powered intelligence into everyday DevOps.\n\n### Burke Holland ‚Äî Vibe coding with GPT-5 in VS Code\n\nBurke tries some ‚Äúvibe coding‚Äù with GPT-5 in Visual Studio Code‚Äîhe has GPT-5 build a working website while he goes to eat dinner, and it does a pretty good job. The design looks pretty nice, too. [Watch on YouTube](https://www.youtube.com/watch?v=wqc85X2rpEY)\n\nBurke also tried an experiment where he asked GPT-5 to create an ‚Äúaesthetically pleasing game‚Äù three times, with [three different results](https://polite-sea-05be72110.2.azurestaticapps.net/).\n\n## Quick reference table\n\n| Product / Service | GPT-5 Integration Highlights | Announcement / Documentation | | --- | --- | --- | | üíª Visual Studio Code | GPT-5 via AI Toolkit; supports GPT OSS and cloud/local development. | [GPT-5 Family of Models & GPT OSS Are Now Available in AI Toolkit for VS Code](https://techcommunity.microsoft.com/blog/azuredevcommunityblog/gpt-5-family-of-models--gpt-oss-are-now-available-in-ai-toolkit-for-vs-code/4441394) ‚Ä¢ [GitHub Copilot in VS Code ‚Äì July release (v1.103)](https://github.blog/changelog/2025-08-07-github-copilot-in-vs-code-july-release-v1-103/) ‚Ä¢ [GPT-5 mini](https://aka.ms/vscode-github-changelog-gpt5-mini) | | ü§ñ GitHub Copilot | Enhanced coding with GPT-5 for longer and more complex tasks; integrated into VS Code and GitHub. | [GitHub Copilot in VS Code ‚Äì July release (v1.103)](https://github.blog/changelog/2025-08-07-github-copilot-in-vs-code-july-release-v1-103/) ‚Ä¢ [OpenAI GPT-5 is now available in public preview in Visual Studio, JetBrains IDEs, Xcode, and Eclipse](https://github.blog/changelog/2025-08-12-openai-gpt-5-is-now-available-in-public-preview-in-visual-studio-jetbrains-ides-xcode-and-eclipse) ‚Ä¢ [GPT-5 mini in Copilot for VS Code](https://aka.ms/vscode-github-changelog-gpt5-mini) | | ‚òÅÔ∏è Azure AI Foundry | Enterprise-grade GPT-5 with security, model routing, and structured outputs. | [Azure OpenAI models: GPT-5](https://learn.microsoft.com/en-us/azure/ai-foundry/openai/concepts/models#gpt-5) ‚Ä¢ [Registration for gpt-5 access](https://aka.ms/oai/gpt5access) ‚Ä¢ [Reasoning models](https://learn.microsoft.com/en-us/azure/ai-foundry/openai/how-to/reasoning) | | üß¨ GitHub Models | gpt-5, gpt-5-mini, gpt-5-nano, gpt-5-chat. | [Models ¬∑ GitHub Marketplace](https://github.com/marketplace/models) | | üõ†Ô∏è Microsoft Copilot Studio | Makers can select GPT-5 models for agent orchestration; GPT-5 Chat and Reasoning with auto-routing. | [Available today: GPT-5 in Microsoft Copilot Studio](https://www.microsoft.com/en-us/microsoft-copilot/blog/copilot-studio/available-today-gpt-5-in-microsoft-copilot-studio/) | | üìÑ Microsoft 365 Copilot | GPT-5 powers Copilot Chat with smarter orchestration, improved reasoning, and multimodal capabilities. Users can opt-in via ‚ÄúTry GPT-5‚Äù. | [Available today: GPT-5 in Microsoft 365 Copilot](https://www.microsoft.com/en-us/microsoft-365/blog/2025/08/07/available-today-gpt-5-in-microsoft-365-copilot/) | | üß™ Code Samples | Azure Search + OpenAI demo with GPT-5. | [RAG chat app with Azure OpenAI and Azure AI Search (Python)](https://github.com/Azure-Samples/azure-search-openai-demo/) |\n\n## Closing\n\nMicrosoft is all-in on AI. As new models land, we work to bring support to our developer tools and cloud quickly‚Äîlike we did for GPT‚Äë5‚Äîso you can build with the latest, confidently and at scale. You‚Äôve got plenty of links above to get you started, but the first step it to start using GPT-5 in Visual Studio and Visual Studio Code:\n\n[Use GPT-5 in VS Code](https://techcommunity.microsoft.com/blog/azuredevcommunityblog/gpt-5-family-of-models--gpt-oss-are-now-available-in-ai-toolkit-for-vs-code/4441394)\n\n[Use GPT-5 in Visual Studio](https://github.blog/changelog/2025-08-12-openai-gpt-5-is-now-available-in-public-preview-in-visual-studio-jetbrains-ides-xcode-and-eclipse)\n\nJoin us on our live stream Aug 21 at 10 AM Pacific where we‚Äôll go deeper with code, demos, and live Q&A!",
  "Tags": [
    "AI",
    "GitHub Copilot",
    "GPT-5",
    "Visual Studio",
    "Visual Studio Code"
  ],
  "Description": "OpenAI announced GPT-5 last week in ‚ÄúGPT-5 and the new era of work‚Äú. Working with OpenAI, we rolled out GPT-5 support the day it launched, making sure you can use and build with it and integrate it into your applications immediately. We‚Äôve got you covered with a dev-focused rundown: GPT-5 availability, new capabilities, and quick-start [‚Ä¶]\n\nThe post [GPT-5 for Microsoft Developers](https://devblogs.microsoft.com/blog/gpt-5-for-microsoft-developers) appeared first on [Microsoft for Developers](https://devblogs.microsoft.com).",
  "OutputDir": "_news",
  "FeedName": "Microsoft Blog",
  "Author": "Jon Galloway, Pamela Fox, Dan Wahlin"
}
