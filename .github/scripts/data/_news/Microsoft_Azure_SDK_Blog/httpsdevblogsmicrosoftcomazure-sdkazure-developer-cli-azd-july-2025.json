{
  "Link": "https://devblogs.microsoft.com/azure-sdk/azure-developer-cli-azd-july-2025/",
  "ProcessedDate": "2025-08-24 16:16:35",
  "PubDate": "2025-07-28T20:07:42+00:00",
  "FeedLevelAuthor": "Azure SDK Blog",
  "Title": "Azure Developer CLI (azd) – July 2025",
  "FeedUrl": "https://devblogs.microsoft.com/azure-sdk/feed/",
  "EnhancedContent": "This post shares the details of the latest changes to the Azure Developer CLI (`azd` ) in release 1.17.1 and 1.18.0. We invite you to join [our July release discussion on GitHub](https://github.com/Azure/azure-dev/discussions/5524) with questions and comments.\n\nThis month’s release focuses on enhancing developer experience with significant improvements to project validation, AI functionality integration, and authentication capabilities. The team made important reliability improvements and dependency updates to keep `azd` secure and performant.\n\nLet’s dive into what’s new with `azd` this month.\n\n## New features\n\n### Enhanced Project Validation\n\nWe improved project name validation to prevent service packaging failures caused by invalid characters. This enhancement [\\[5380\\]](https://github.com/Azure/azure-dev/pull/5380) helps developers catch potential issues early in the development process, reducing deployment errors and improving the overall developer experience.\n\n### Generic OIDC Authentication Support\n\nWe expanded authentication capabilities by adding support for generic OIDC authentication with any CI provider [\\[5397\\]](https://github.com/Azure/azure-dev/pull/5397). This enhancement provides greater flexibility for teams using various continuous integration platforms beyond the traditionally supported providers.\n\n### Improved User Experience\n\nImproved user experience with a new confirmation prompt before setting a new environment as the default [\\[4832\\]](https://github.com/Azure/azure-dev/pull/4832). This change prevents accidental environment switches and gives users more control over their configuration.\n\n### Enhanced Metadata Support\n\n`azd` now supports boolean and integer default values in azd metadata fields [\\[5384\\]](https://github.com/Azure/azure-dev/pull/5384), providing more flexibility in project configuration and reducing the need for manual input during project setup.\n\n### Metadata Field Regression Fix\n\n- **Parameter Prompting**: Fixed regression where prompting for boolean or integer fields without default values wasn’t working correctly [\\[5386\\]](https://github.com/Azure/azure-dev/pull/5386)\n\n### Deployment Packaging Improvements\n\nAdded new support for `.webappignore` and `.funcignore` files to zip deployment packaging [\\[5383\\]](https://github.com/Azure/azure-dev/pull/5383). This feature allows developers to exclude specific files and directories from deployments, reducing package sizes and improving deployment performance.\n\n### Interactive Hooks Enhancement\n\nUpdated the `azd hooks run` command to always run hooks in interactive mode with improved schema validation [\\[5430\\]](https://github.com/Azure/azure-dev/pull/5430), making it easier to debug and test custom hooks during development.\n\n### Static Web Apps CLI Update\n\n`azd` now ensures it always uses the latest static-web-apps CLI npm package [\\[5203\\]](https://github.com/Azure/azure-dev/pull/5203), keeping your deployments current with the newest SWA features and improvements.\n\n### Terraform OIDC Support\n\nAdded support for Terraform with OIDC authentication in pipeline configuration [\\[5270\\]](https://github.com/Azure/azure-dev/pull/5270), enabling secure infrastructure deployments without storing long-lived credentials.\n\n### Streamlined Project Initialization\n\nThe project initialization experience was improved by combining “Create a minimal project” with “Scan current directory” options, along with a new `--minimal` flag [\\[5280\\]](https://github.com/Azure/azure-dev/pull/5280), making it easier to get started with new projects.\n\n### Enhanced Environment Management\n\nThe `azd env set` command now accepts multiple key-value pairs [\\[4942\\]](https://github.com/Azure/azure-dev/pull/4942), allowing you to configure multiple environment variables in a single command for improved workflow efficiency.\n\n### Compose CI/CD Improvements\n\nIntroduced `AZURE_PRINCIPAL_TYPE` environment variable to conditionally set user-only role assignments in compose scenarios [\\[5285\\]](https://github.com/Azure/azure-dev/pull/5285), providing better control over Azure permissions in CI/CD pipelines.\n\n### Subscription Management Enhancement\n\nAdded case-insensitive sorting for subscriptions [\\[4969\\]](https://github.com/Azure/azure-dev/pull/4969), making it easier to find and select subscriptions regardless of naming conventions.\n\n## Bugs fixed\n\n### Error Handling Improvements\n\nSeveral error handling improvements shipped with this release:\n\n- **Bicep Parameter Security**: Fixed panic when encountering Bicep secure output parameters [\\[5478\\]](https://github.com/Azure/azure-dev/pull/5478)\n- **PowerShell Integration**: Fixed PowerShell 7 suggestion text not showing for service-level hooks [\\[5468\\]](https://github.com/Azure/azure-dev/pull/5468)\n- **Deployment Stack Validation**: Fixed preflight error handling for deployment stack validation [\\[5470\\]](https://github.com/Azure/azure-dev/pull/5470)\n\n### Environment and Authentication Fixes\n\n- **Parameter Evaluation**: Fixed Bicep parameter evaluation to properly inject environment variables before deployment [\\[5446\\]](https://github.com/Azure/azure-dev/pull/5446)\n- **Azure DevOps Authentication**: Fixed nil pointer error when checking credentials for Azure DevOps authentication [\\[5459\\]](https://github.com/Azure/azure-dev/pull/5459)\n\n### .NET Aspire Improvements\n\n- **Manifest Processing**: Improved handling of unrecognized expressions in Aspire manifest files [\\[5434\\]](https://github.com/Azure/azure-dev/pull/5434)\n\n## Other changes\n\n### Development Workflow Improvements\n\n- **CI Optimization**: CI workflow now cancels obsolete workflows when new commits are pushed in open PRs [\\[5471\\]](https://github.com/Azure/azure-dev/pull/5471). Thank you @kitsiosk for the contribution!\n- **Help Documentation**: Improved help description for `azd provision --no-state`\n[\\[5420\\]](https://github.com/Azure/azure-dev/pull/5420)\n- **Tag Handling**: Fixed null tags handling in deployment stack operations [\\[5372\\]](https://github.com/Azure/azure-dev/pull/5372)\n\n### Infrastructure and Tooling Updates\n\n- **Resource Output Enhancement**: Added Microsoft.Automation/automationAccounts to resources for output [\\[5378\\]](https://github.com/Azure/azure-dev/pull/5378)\n- **GitHub CLI Update**: Updated GitHub CLI version to 2.75.1 [\\[5461\\]](https://github.com/Azure/azure-dev/pull/5461)\n- **Bicep CLI Update**: Updated Bicep CLI version to 0.36.177 [\\[5443\\]](https://github.com/Azure/azure-dev/pull/5443)\n\n## New docs\n\nWe published several new documentation articles on Microsoft Learn.\n\n### Azure Container Apps deployment strategies\n\nLearn about different deployment workflows and strategies for Azure Container Apps using `azd` . This comprehensive guide covers blue/green deployments, rolling updates, and other advanced deployment patterns. [View Documentation](https://learn.microsoft.com/azure/developer/azure-developer-cli/container-apps-workflows)\n\n### Remote build support\n\nDiscover how to use remote builds with Azure Container Registry to improve build performance and consistency across different development environments. [View Documentation](https://learn.microsoft.com/azure/developer/azure-developer-cli/remote-builds)\n\n### Docker support as a language\n\nUnderstand how to use Docker as a language type in `azd` for containerized applications, especially useful for languages like Go that don’t have native support in azd. [View Documentation](https://learn.microsoft.com/azure/developer/azure-developer-cli/docker-language-support)\n\n### azd Extension Framework\n\nDiscover how to extend azd’s capabilities using the extension framework, enabling custom workflows and integrations to meet your specific development needs. [Read Blog Post](https://devblogs.microsoft.com/azure-sdk/azd-extension-framework/)\n\n### Azure Developer CLI “Dev to Production” workflow\n\nLearn how to streamline your development workflow with azd’s comprehensive deployment capabilities, covering the entire journey from local development to production deployment with a single command. [Read Blog Post](https://devblogs.microsoft.com/devops/azure-developer-cli-from-dev-to-prod-with-one-click/)\n\n## New templates\n\nThe Azure Developer CLI template gallery welcomes a new contribution from the community. Thank you! This month, there’s a new Azure Functions template that demonstrates modern event-driven architecture patterns.\n\n### Azure Functions with SQL Database\n\nThank you to [Paul Yuknewicz](https://github.com/paulyuk) for contributing this [Azure Functions quickstart template](https://github.com/Azure-Samples/functions-quickstart-dotnet-azd-sql) with SQL Triggers and Bindings (.NET) demonstrating event-driven integration with Azure SQL Database. This template provides a foundation for developers building serverless applications that respond to database changes. It works especially well for building data integration solutions, audit trails, and real-time analytics workflows.\n\n### Template Gallery Milestone\n\nThe awesome-azd template gallery now has **248+ templates**, necessitating pagination support to handle the growing collection. [Coming soon!](https://github.com/Azure/awesome-azd/pull/631) This growth demonstrates the vibrant community adoption of `azd` and the wealth of architectural patterns now available to developers. Thank you to all of the contributors!\n\n## New to `azd`\n?\n\nWelcome! You can use azd from:\n\n- Your terminal of choice on Windows, Linux, or macOS.\n- Visual Studio Code or GitHub Codespaces by [downloading the extension](https://marketplace.visualstudio.com/items?itemName=ms-azuretools.azure-dev) from the Marketplace, or installing it directly from the extension view (`Ctrl`\n+ `Shift`\n+ `X`\nfor Windows or `Cmd`\n+ `Shift`\n+ `X`\nfor macOS) in Visual Studio Code.\n- Visual Studio by [enabling the preview feature flag](https://devblogs.microsoft.com/azure-sdk/introducing-the-azure-developer-cli-a-faster-way-to-build-apps-for-the-cloud/#visual-studio).\n\nLearn more about the Azure Developer CLI from our [official documentation](https://aka.ms/azd). If you run into any problems or have suggestions, file an issue or start a discussion in the [Azure Developer CLI repository](https://github.com/Azure/azure-dev). You can also reference our [troubleshooting documentation](https://aka.ms/azd-troubleshoot).\n\nThank you to the community contributors who helped make this release possible!",
  "Tags": [
    ".NET",
    "Azure SDK",
    "azure-developer-cli",
    "Codespaces",
    "Docker",
    "java",
    "javascript",
    "kubernetes",
    "python",
    "typescript",
    "VSCode"
  ],
  "Description": "This post announces the July release of the Azure Developer CLI (`azd`).\n\nThe post [Azure Developer CLI (azd) – July 2025](https://devblogs.microsoft.com/azure-sdk/azure-developer-cli-azd-july-2025/) appeared first on [Azure SDK Blog](https://devblogs.microsoft.com/azure-sdk).",
  "OutputDir": "_news",
  "FeedName": "Microsoft Azure SDK Blog",
  "Author": "Kristen Womack"
}
