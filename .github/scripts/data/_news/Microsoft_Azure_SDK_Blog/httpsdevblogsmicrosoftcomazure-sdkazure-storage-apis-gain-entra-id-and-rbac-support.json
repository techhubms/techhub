{
  "Tags": [
    ".NET",
    "Azure SDK",
    "release",
    "storage"
  ],
  "Link": "https://devblogs.microsoft.com/azure-sdk/azure-storage-apis-gain-entra-id-and-rbac-support/",
  "Title": "Azure Storage APIs gain Entra ID and RBAC support",
  "FeedUrl": "https://devblogs.microsoft.com/azure-sdk/feed/",
  "Description": "To align with security best practices, Microsoft Entra ID and RBAC support is now generally available for several Azure Storage data plane APIs.\n\nThe post [Azure Storage APIs gain Entra ID and RBAC support](https://devblogs.microsoft.com/azure-sdk/azure-storage-apis-gain-entra-id-and-rbac-support/) appeared first on [Azure SDK Blog](https://devblogs.microsoft.com/azure-sdk).",
  "FeedLevelAuthor": "Azure SDK Blog",
  "Author": "Christine Chen",
  "EnhancedContent": "### API Updates\n\nTo align with security best practices, Microsoft Entra ID and RBAC (role-based access control) support is now generally available for the following Azure Storage data plane APIs:\n\n- [Get Account Information](https://learn.microsoft.com/rest/api/storageservices/get-account-information?tabs=microsoft-entra-id#authorization)\n- [Get Container ACL](https://learn.microsoft.com/rest/api/storageservices/get-container-acl?tabs=microsoft-entra-id#authorization)\n- [Set Container ACL](https://learn.microsoft.com/rest/api/storageservices/set-container-acl?tabs=microsoft-entra-id#authorization)\n- [Get Queue ACL](https://learn.microsoft.com/rest/api/storageservices/get-queue-acl?tabs=microsoft-entra-id#authorization)\n- [Set Queue ACL](https://learn.microsoft.com/rest/api/storageservices/set-queue-acl?tabs=microsoft-entra-id#authorization)\n- [Get Table ACL](https://learn.microsoft.com/rest/api/storageservices/get-table-acl?tabs=microsoft-entra-id#authorization)\n- [Set Table ACL](https://learn.microsoft.com/rest/api/storageservices/set-table-acl?tabs=microsoft-entra-id#authorization)\n\nTo learn more, see [Authorize with Microsoft Entra ID (REST API) – Azure Storage](https://learn.microsoft.com/rest/api/storageservices/authorize-with-azure-active-directory#permissions-for-blob-service-operations).\n\nThese APIs now support OAuth 2.0-based authentication via Microsoft Entra ID with Azure Storage. As part of this enhancement, the REST API responses for unauthorized access were changed.\n\nPreviously, if you tried to use these APIs with OAuth, we returned an HTTP 404 status code. Now, if you use these APIs with OAuth but don’t have the right permissions (for example, Get Account Information requires Azure RBAC action `Microsoft.Storage/storageAccounts/blobServices/getInfo/action` ), we return an HTTP 403 status code (unauthorized access). If you send an anonymous request for [bearer challenge](https://learn.microsoft.com/rest/api/storageservices/authorize-with-azure-active-directory#bearer-challenge), we return an HTTP 401 status code, which is the same behavior as with the other APIs.\n\nIf you took a dependency on an HTTP 404 error code for these operations, we recommend that you change your application code to support both 404 and 403 error codes. The best practice for checking unsupported APIs isn’t to take a dependency on error codes, but to refer to [Authorize with Microsoft Entra ID (REST API) – Azure Storage](https://learn.microsoft.com/rest/api/storageservices/authorize-with-azure-active-directory).\n\n### Why You Should Default to OAuth\n\nYou should use OAuth as the default authentication method because it aligns with security best practices and provides a more secure and scalable way to manage access to resources. OAuth offers several advantages over SAS (Shared Access Signature) and account key authentication methods.\n\nOAuth provides token-based authentication, which allows for more granular access control and better security management. Tokens can be scoped to specific permissions and have expiration times, reducing the risk of long-term exposure of sensitive credentials. In contrast, SAS and account key methods rely on static keys that can be more vulnerable to unauthorized access and misuse. OAuth supports modern authentication protocols and integrates seamlessly with various identity providers, making it easier to implement and manage across different platforms and applications. It also allows for full auditability and monitoring for storage access governance. Learn more at [What Is OAuth? | Microsoft Security](https://www.microsoft.com/security/business/security-101/what-is-oauth?).\n\nThe Azure Identity library’s `DefaultAzureCredential` API further simplifies OAuth usage by providing a unified way to authenticate across different environments. It automatically handles the authentication flow, making it easier for you to integrate OAuth into your applications without having to manage multiple credential types.\n\n### Example Code Snippet for .NET\n\nHere’s a short snippet demonstrating how to use the Azure Identity library’s `DefaultAzureCredential` API to authenticate and access Azure Storage APIs like Get Account Information:\n\n```csharp using Azure.Identity; using Azure.Storage.Blobs;\n\nvar credential = new DefaultAzureCredential(); var blobServiceClient = new BlobServiceClient(new Uri(\"https://.blob.core.windows.net\"), credential);\n\n// Example: Get Account Information var accountInfo = blobServiceClient.GetAccountInfo(); Console.WriteLine($\"Account Kind: {accountInfo.AccountKind}, SKU: {accountInfo.SkuName}\"); ```\n\n### Conclusion\n\nThe support for Microsoft Entra ID and RBAC brings these APIs in line with security best practices. We recommend you use OAuth with these APIs to attain more secure and scalable access management.\n\n### Resources\n\n- [Authorize with Microsoft Entra ID (REST API) – Azure Storage](https://learn.microsoft.com/rest/api/storageservices/authorize-with-azure-active-directory#permissions-for-blob-service-operations)\n- [What Is OAuth? | Microsoft Security](https://www.microsoft.com/security/business/security-101/what-is-oauth?)\n\n### Help and Support\n\nIf you have questions, get answers from community experts in [Microsoft Q&A](https://learn.microsoft.com/answers/tags/125/azure-blob-storage). If you have a support plan and you need technical help, create a [support request](https://portal.azure.com/#blade/Microsoft_Azure_Support/HelpAndSupportBlade/newsupportrequest):\n\n- For Issue type, select Technical.\n- For Subscription, select your subscription.\n- For Service, select My services.\n- For Service type, select the applicable service: either Blob Storage, Queue Storage, or Table Storage.\n- For Resource, select the Azure resource you’re creating a support request for.\n- For Summary, type a description of your issue.\n- For Problem type, select Authentication and Authorization.\n- For Problem subtype, select Issues using Azure AD (RBAC, ABAC, & OAuth).",
  "PubDate": "2025-09-10T18:24:47+00:00",
  "FeedName": "Microsoft Azure SDK Blog",
  "ProcessedDate": "2025-09-12 11:09:58",
  "OutputDir": "_news"
}
