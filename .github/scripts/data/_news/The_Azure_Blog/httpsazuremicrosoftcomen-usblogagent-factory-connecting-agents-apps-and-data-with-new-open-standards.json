{
  "OutputDir": "_news",
  "PubDate": "2025-09-10T15:00:00+00:00",
  "FeedUrl": "https://azure.microsoft.com/en-us/blog/feed/",
  "Author": "Yina Arenas",
  "Tags": [
    "Agent Factory",
    "AI",
    "AI + machine learning"
  ],
  "FeedName": "The Azure Blog",
  "Link": "https://azure.microsoft.com/en-us/blog/agent-factory-connecting-agents-apps-and-data-with-new-open-standards-like-mcp-and-a2a/",
  "Description": "The real power of agents comes from their ability to connect to each other, to enterprise data, and to the systems where work gets done.\n\nThe post [Agent Factory: Connecting agents, apps, and data with new open standards like MCP and A2A](https://azure.microsoft.com/en-us/blog/agent-factory-connecting-agents-apps-and-data-with-new-open-standards-like-mcp-and-a2a/) appeared first on [Microsoft Azure Blog](https://azure.microsoft.com/en-us/blog).",
  "ProcessedDate": "2025-10-06 17:03:00",
  "EnhancedContent": "The real power of agents comes from their ability to connect to each other, to enterprise data, and to the systems where work gets done.\n\n*This blog post is the fifth out of a six-part blog series called*[*Agent Factory*](https://azure.microsoft.com/en-us/blog/tag/agent-factory/)*which will share best practices, design patterns, and tools to help guide you through adopting and building agentic AI.*\n\nAn agent that can’t talk to other agents, tools, and apps is just a silo. The real power of agents comes from their ability to connect to each other, to enterprise data, and to the systems where work gets done. Integration is what transforms an agent from a clever prototype into a force multiplier across a business.\n\nWith [Azure AI Foundry](https://azure.microsoft.com/en-us/products/ai-foundry) customers and partners, we see the shift everywhere: customer service agents collaborating with retrieval agents to resolve complex cases, research agents chaining together across datasets to accelerate discovery, and business agents acting in concert to automate workflows that once took teams of humans. The story of agent development has moved from *“can we build one?”* to *“how do we make them work together, safely and at scale?”*\n\n[Connect agents with Azure AI Foundry](https://azure.microsoft.com/en-us/products/ai-foundry)\n\n## Industry trends show integration as the unlock\n\nAt Microsoft over the years, I’ve seen how open protocols shape ecosystems. From OData, which standardized access to data APIs, to OpenTelemetry, which gave developers common ground for observability, open standards have consistently unlocked innovation and scale across industries. Today, customers in Azure AI Foundry are looking for flexibility without vendor lock-in. The same pattern is now unfolding with AI agents. Proprietary, closed ecosystems create risk if agents, tools, or data can’t interoperate, causing innovation to stall and an increase in switching costs.\n\n- **Standard protocols taking root:** Open standards like the [**Model Context Protocol (MCP)**](https://devblogs.microsoft.com/foundry/announcing-model-context-protocol-support-preview-in-azure-ai-foundry-agent-service/) and [**Agent2Agent (A2A)**](https://www.microsoft.com/en-us/microsoft-cloud/blog/2025/05/07/empowering-multi-agent-apps-with-the-open-agent2agent-a2a-protocol/) are creating a lingua franca for how agents share tools, context, and results across vendors. This interoperability is critical for enterprises who want the freedom to choose best-of-breed solutions and ensure their agents, tools, and data can work together, regardless of vendor or framework.\n- [**A2A collaboration on MCP**](https://developer.microsoft.com/blog/can-you-build-agent2agent-communication-on-mcp-yes)**:** Specialist agents increasingly collaborate as teams, with one handling scheduling, another querying databases, and another summarizing. This mirrors human work patterns, where specialists contribute to shared goals. Learn more about how this connects to MCP and A2A in our [Agent2Agent and MCP blog](https://developer.microsoft.com/blog/can-you-build-agent2agent-communication-on-mcp-yes).\n- **Connected ecosystems:** From Microsoft 365 to Salesforce to ServiceNow, enterprises expect agents to act across all their apps, not just one platform. Integration libraries and connectors are becoming as important as models themselves. Open standards ensure that as new platforms and tools emerge, they can be integrated seamlessly, eliminating the risk of isolated point solutions.\n- **Interop across frameworks:** Developers want the freedom to build with [LangGraph](https://github.com/langchain-ai/langgraph), AutoGen, [Semantic Kernel](https://github.com/microsoft/semantic-kernel), or [CrewAI](https://github.com/joaomdmoura/crewai)—and still have their agents talk to each other. Framework diversity is here to stay.\n\n## What integration at scale requires\n\nFrom our work with enterprises and open-source communities, a picture emerges of what’s needed to connect agents, apps, and data:\n\n- **Cross-agent collaboration by design:** Multi-agent workflows require open protocols that allow different runtimes and frameworks to coordinate. Protocols like A2A and MCP are rapidly evolving to support richer agent collaboration and integration. A2A expands agent-to-agent collaboration, while MCP is growing into a foundational layer for context sharing, tool interoperability, and cross-framework coordination.\n- **Shared context through open standards:** Agents need a safe, consistent way to pass context, tools, and results. MCP enables this by making tools reusable across agents, frameworks, and vendors.\n- **Seamless enterprise system access:** Business value only happens when agents can act: update a CRM record, post in Teams, or trigger an ERP workflow. Integration fabrics with prebuilt connectors remove the heavy lift. Enterprises can connect new and legacy systems without costly rewrites or proprietary barriers.\n- **Unified observability:** As workflows span agents and apps, tracing and debugging across boundaries becomes essential. Teams must see the chain of reasoning across multiple agents to ensure safety, compliance, and trust. Open telemetry and evaluation standards give enterprises the transparency and control they need to operate at scale.\n\n## How Azure AI Foundry enables integration at scale\n\nAzure AI Foundry was designed for this connected future. It makes agents interoperable, enterprise ready, and integrated into the systems where businesses run.\n\n- [**Model Context Protocol (MCP)**](https://techcommunity.microsoft.com/blog/azure-ai-foundry-blog/mastering-model-context-protocol-mcp-building-multi-server-mcp-with-azure-openai/4424993)**:** Foundry agents can call MCP-compatible tools directly, enabling developers to reuse existing connectors and unlock a growing marketplace of interoperable tools.****Semantic Kernel also supports MCP for pro-code developers.\n- **A2A support:** Through [Semantic Kernel](https://github.com/microsoft/semantic-kernel), Foundry implements A2A so agents can collaborate across different runtimes and ecosystems. Multi-agent workflows—like a research agent coordinating with a compliance agent before drafting a report—just work.\n- **Enterprise integration fabric:** Foundry comes with thousands of connectors into SaaS and enterprise systems. From Dynamics 365 to ServiceNow to custom APIs, agents can act where business happens without developers rebuilding integrations from scratch. And with [Logic Apps now supporting MCP](https://techcommunity.microsoft.com/blog/integrationsonazureblog/introducing-logic-apps-mcp-servers-public-preview/4450419), existing workflows and connectors can be leveraged directly inside Foundry agents.\n- **Unified observability and governance:** Tracing, evaluation, and compliance checks extend across multi-agent and multi-system workflows. Developers can debug cross-agent reasoning and enterprises can enforce identity, policy, and compliance end-to-end.\n\n## Why this matters now\n\nEnterprises don’t want isolated point solutions—they want connected systems that scale. The next competitive advantage in AI isn’t just building smarter agents, it’s **building connected agent ecosystems** that work across apps, frameworks, and vendors. Interoperability and open standards are the foundation for this future, giving customers the flexibility, choice, and confidence to invest in AI without fear of vendor lock-in.\n\n[Azure AI Foundry](https://ai.azure.com/) makes that possible:\n\n- Flexible protocols (MCP and A2A) for agentic collaboration and interoperability.\n- Enterprise connectors for system integration.\n- Guardrails and governance for trust at scale.\n\nWith these foundations, organizations can move from siloed prototypes to truly connected AI ecosystems that span the enterprise.\n\n## What’s next\n\nIn part six of the Agent Factory series, we’ll focus on one of the most critical dimensions of agent development: trust. Building powerful agents is only half the challenge. Enterprises need to ensure these agents operate with the highest standards of security, identity, and governance.\n\nDid you miss these posts in the series?\n\n- [Agent Factory: The new era of agentic AI—common use cases and design patterns](https://azure.microsoft.com/en-us/blog/agent-factory-the-new-era-of-agentic-ai-common-use-cases-and-design-patterns/).\n- [Agent Factory: Building your first AI agent with the tools to deliver real-world outcomes](https://azure.microsoft.com/en-us/blog/agent-factory-building-your-first-ai-agent-with-the-tools-to-deliver-real-world-outcomes/).\n- [Agent Factory: Top 5 agent observability best practices for reliable AI](https://azure.microsoft.com/en-us/blog/agent-factory-top-5-agent-observability-best-practices-for-reliable-ai/).\n- [Agent Factory: From prototype to production—developer tools and rapid agent development](https://azure.microsoft.com/en-us/blog/agent-factory-from-prototype-to-production-developer-tools-and-rapid-agent-development/).",
  "FeedLevelAuthor": "Microsoft Azure Blog",
  "Title": "Agent Factory: Connecting agents, apps, and data with new open standards like MCP and A2A"
}
