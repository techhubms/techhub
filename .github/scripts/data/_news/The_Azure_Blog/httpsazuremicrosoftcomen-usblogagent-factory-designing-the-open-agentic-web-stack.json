{
  "Author": "Yina Arenas and Ulrich Homann",
  "FeedUrl": "https://azure.microsoft.com/en-us/blog/feed/",
  "ProcessedDate": "2025-10-01 16:03:33",
  "Tags": [
    "Agent Factory",
    "AI",
    "AI + machine learning"
  ],
  "Link": "https://azure.microsoft.com/en-us/blog/agent-factory-designing-the-open-agentic-web-stack/",
  "FeedName": "The Azure Blog",
  "PubDate": "2025-09-24T15:00:00+00:00",
  "EnhancedContent": "Unlock enterprise value with an open, secure, and interoperable AI agent ecosystem.\n\n*This blog is a wrap-up post in a blog series called [Agent Factory](https://azure.microsoft.com/en-us/blog/tag/agent-factory/) which shares best practices, design patterns, and tools to help guide you through adopting and building agentic AI.*\n\nThe rise of AI agents—autonomous software entities acting on behalf of users and organizations—marks a transformative moment for enterprise technology. But as we’ve explored throughout this blog series, building effective agents is about more than just code. It requires a repeatable blueprint, spanning use case design, developer tooling, observability, integrations, and governance.\n\n[Throughout this series](https://azure.microsoft.com/en-us/blog/tag/agent-factory/), we’ve walked through the journey of building enterprise-grade agents: from early **use cases and design patterns** to the **tools and developer workflows** needed to move from prototype to production, to the importance of **observability, interoperability, and open standards**, and finally the **governance and security principles** required to deploy agents responsibly.\n\nNow, as we conclude the series, we zoom out to the **bigger picture**: the *agentic web stack*. Much like HTTP and TCP/IP standardized the internet, this stack provides the common services and protocols needed to make multi-agent ecosystems **secure, scalable, and interoperable** across organizational boundaries.\n\n[Learn more with Azure AI Foundry](https://azure.microsoft.com/en-us/products/ai-foundry)\n\n![Diagram for building the open agentic web.](https://azure.microsoft.com/en-us/blog/wp-content/uploads/2025/09/image-20.webp)\n\n## Blueprint: 8 essential components and services\n\nA robust agentic web stack is not one technology but a **composition of services** that together provide the foundation for open, secure, and enterprise-grade multi-agent systems. Here’s what it takes—and how [Azure AI Foundry](https://azure.microsoft.com/en-us/products/ai-foundry) is making it real.\n\n### 1. Communication protocol service\n\nAgents need a shared “language” to exchange messages, requests, and structured data. Without it, collaboration breaks down into isolated silos. Standards like **Model Context Protocol (MCP) and** **Agent-to-Agent (A2A)** provide this foundation, ensuring agents can negotiate, coordinate, and cooperate—regardless of who built them or where they’re hosted. In Azure AI Foundry, [A2A support](https://devblogs.microsoft.com/semantic-kernel/guest-blog-building-multi-agent-solutions-with-semantic-kernel-and-a2a-protocol/) enables not only intra-organization workflows but also cross-boundary collaboration, where supply chain partners or business ecosystems can securely exchange actions through a common protocol.\n\n### 2. Discovery registry service\n\nJust as the web needed directories and search engines, agents need a way to be found and reused. The **Catalog** serves as the listing of assets—a curated collection of agents, tools, and applications that can be discovered and composed into new solutions. The **Registry**, by contrast, tracks the deployed instances of those assets—the live agentic app instances running across providers, with their endpoints, health, and status. Together, the Catalog and Registry bridge the gap between what’s available and what’s active, enabling developers to publish once, discover broadly, and reliably orchestrate workflows against running systems.\n\n### 3. Identity and trust management service\n\nTrust is the lifeblood of the agentic web. Every agent must carry a verifiable identity, enforced through standards like **OIDC (OpenID Connect) and JWT (JSON Web Token)**, and tied into enterprise systems like **[Microsoft Entra ID](https://techcommunity.microsoft.com/blog/microsoft-entra-blog/announcing-microsoft-entra-agent-id-secure-and-manage-your-ai-agents/3827392)**. In Azure AI Foundry, identity is not an afterthought—it’s the control plane. This enables fine-grained role-based access, ensures that only authorized actors participate in workflows, and provides auditable accountability for every action an agent takes. Combined with encrypted channels, this identity-first model enforces a **zero-trust security posture** across the agentic stack.\n\n### 4. Tool invocation and integration service\n\nNo agent can succeed in isolation; value comes when agents can connect with data, APIs, and enterprise systems. The **[Model Context Protocol (MCP)](https://devblogs.microsoft.com/foundry/announcing-model-context-protocol-support-preview-in-azure-ai-foundry-agent-service/)** provides a vendor-neutral standard for exposing tools in a way that any compliant agent can invoke. In Azure AI Foundry, MCP integration is deeply embedded, so developers can register enterprise APIs once and instantly make them available to multiple agents—whether they’re built on Microsoft’s agent frameworks like Semantic Kernel and AutoGen, LangGraph, or third-party SDKs. This eliminates bespoke integrations and allows enterprises to compose workflows from best-in-class components.\n\n### 5. Orchestration service\n\nSingle agents can handle discrete tasks, but the real breakthroughs come from **multi-agent orchestration**: teams of agents collaborating across multi-step, distributed processes. Azure AI Foundry delivers this through a [unified framework](https://devblogs.microsoft.com/semantic-kernel/semantic-kernel-and-autogen-part-2/) that brings together Semantic Kernel and AutoGen—and extends it with **multi-agent workflow orchestration** inside Azure AI Foundry Agent Service. These workflows manage dependencies, allocate resources, and resolve conflicts, enabling enterprise-scale use cases such as financial transaction processing or IT incident response.\n\n### 6. Telemetry and observability service\n\nAs we covered in [Part 3](https://azure.microsoft.com/en-us/blog/agent-factory-top-5-agent-observability-best-practices-for-reliable-ai/), observability is non-negotiable for reliable agents. Azure AI Foundry extends **OpenTelemetry** with agent-aware instrumentation—tracing conversations, capturing performance data, and surfacing anomalies in real time. This makes agent behavior explainable and debuggable, while also serving governance needs: every decision and action is logged, auditable, and tied back to identity. For enterprises, this is the bedrock of **trust, compliance, and continuous improvement**.\n\n### 7. Memory service\n\nAgents without memory are limited to stateless interactions; agents with memory become adaptive, contextual, and human-like in their continuity. Azure AI Foundry supports both short-term session memory and long-term enterprise knowledge integration. Imagine a customer support agent that recalls prior interactions across channels, or a supply chain agent that tracks historical disruptions to improve future decisions. With memory, agents evolve from transactional helpers into **strategic partners that learn and adapt over time**.\n\n### 8. Evaluation and governance service\n\nFinally, no stack is complete without [**governance**](https://azure.microsoft.com/en-us/blog/agent-factory-creating-a-blueprint-for-safe-and-secure-ai-agents/). This includes continuous evaluation, policy enforcement, ethical safeguards, and regulatory compliance. In Azure AI Foundry, governance hooks are built into orchestration, observability, and identity services—enabling enterprises to block unsafe actions, enforce approvals for sensitive workflows, and generate compliance-ready audit trails. This ensures organizations don’t just innovate fast, but **innovate responsibly**.\n\n## Strategic use cases and business value\n\nThe agentic web stack is not theoretical; it unlocks concrete enterprise value.\n\n- **End-to-end business process automation:** Imagine a procure-to-pay workflow where one agent negotiates with suppliers, another verifies compliance, a third triggers payment, and a fourth updates ERP records. With Azure AI Foundry’s orchestration and discovery registry, these agents collaborate seamlessly, cutting manual intervention and cycle times from weeks to hours.\n- **Cross-organization supply chain synchronization:** In global supply chains, delays often come from mismatched systems and data. With A2A and discovery services, a logistics agent from one company can securely interoperate with a customs agent from another—both governed by identity and observability. The result: faster border clearance, lower costs, and higher resilience.\n- **Knowledge worker augmentation:** Agents built with Azure AI Foundry can take on repetitive but high-value tasks—scheduling, research, first-draft writing—while humans focus on creativity and judgment. The memory integration ensures continuity: a legal research agent remembers prior cases analyzed, while a marketing agent recalls brand guidelines across campaigns.\n- **Complex IT operations:** When outages occur, every second counts. Multi-agent workflows in Azure AI Foundry can detect anomalies, route alerts, execute diagnostics, and propose mitigations across distributed environments. Observability ensures root causes are transparent, while governance enforces that corrective actions comply with policy.\n- **Memory-driven customer journeys:** A customer support agent that recalls a prior complaint, a personalization agent that adapts recommendations, a compliance agent that enforces rules—working together, these create **adaptive, context-rich interactions**. The outcome is not just efficiency but stronger relationships and trust.\n\n## Preparing for the agentic era\n\nFor organizations, the path forward is as much about **strategy and culture** as it is about technology:\n\n- **Start with open standards:** Adopt MCP and A2A from the outset, even in pilots, to avoid future rework and ensure interoperability.\n- **Invest in foundations:** Identity, observability, and memory are not optional; they are the pillars that differentiate ad hoc automations from enterprise-grade systems.\n- **Operationalize governance:** Define policies now and embed them into workflows through Azure AI Foundry’s governance services, so oversight scales with adoption.\n- **Engage the ecosystem:** Participate in open-source and standards communities, influence their direction, and ensure your organization’s voice is heard.\n- **Prepare your workforce:** Train employees not just to use agents, but to **collaborate with them, supervise them, and improve them** over time.\n\nLeaders who act on these imperatives will not only adopt agentic AI but shape its trajectory in their industries.\n\n## Shaping the future together at Ignite 2025\n\nThe [**Agent Factory series**](https://azure.microsoft.com/en-us/blog/tag/agent-factory/) has laid out the foundations: design patterns, developer tools, observability practices, interoperability standards, and governance principles. The **agentic web stack** brings these threads together into a cohesive vision: an open, secure, and interoperable ecosystem where agents can scale across organizational boundaries.\n\nAzure AI Foundry is your platform to **make this vision real**—unifying frameworks, standards, and enterprise capabilities so organizations can accelerate value while staying in control.\n\nAt [**Ignite 2025**](https://ignite.microsoft.com/en-US/home), we’ll showcase the next wave of innovations—from **multi-agent orchestration** to **deeper integrations with enterprise apps, data, and security systems**. Join us to see how Azure AI Foundry is not only enabling enterprises to adopt agentic AI but also **shaping the agent-driven future of business**.\n\nDid you miss these posts in the series?\n\n- [The new era of agentic AI—common use cases and design patterns](https://azure.microsoft.com/en-us/blog/agent-factory-the-new-era-of-agentic-ai-common-use-cases-and-design-patterns/)\n- [Building your first AI agent with the tools to deliver real-world outcomes](https://azure.microsoft.com/en-us/blog/agent-factory-building-your-first-ai-agent-with-the-tools-to-deliver-real-world-outcomes/)\n- [Top 5 agent observability best practices for reliable AI](https://azure.microsoft.com/en-us/blog/agent-factory-top-5-agent-observability-best-practices-for-reliable-ai/)\n- [From prototype to production—developer tools and rapid agent development](https://azure.microsoft.com/en-us/blog/agent-factory-from-prototype-to-production-developer-tools-and-rapid-agent-development/)\n- [Connecting agents, apps, and data with new open standards like MCP and A2A](https://azure.microsoft.com/en-us/blog/agent-factory-connecting-agents-apps-and-data-with-new-open-standards-like-mcp-and-a2a/)\n- [Creating a blueprint for safe and secure AI agents](https://azure.microsoft.com/en-us/blog/agent-factory-creating-a-blueprint-for-safe-and-secure-ai-agents/)",
  "FeedLevelAuthor": "Microsoft Azure Blog",
  "OutputDir": "_news",
  "Title": "Agent Factory: Designing the open agentic web stack",
  "Description": "Unlock enterprise value with an open, secure, and interoperable AI agent ecosystem.\n\nThe post [Agent Factory: Designing the open agentic web stack](https://azure.microsoft.com/en-us/blog/agent-factory-designing-the-open-agentic-web-stack/) appeared first on [Microsoft Azure Blog](https://azure.microsoft.com/en-us/blog)."
}
