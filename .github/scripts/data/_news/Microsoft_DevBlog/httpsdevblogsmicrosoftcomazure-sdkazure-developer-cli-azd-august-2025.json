{
  "ProcessedDate": "2025-08-18 19:11:11",
  "FeedName": "Microsoft DevBlog",
  "Description": "This post announces the August release of the Azure Developer CLI (`azd`).\n\nThe post [Azure Developer CLI (azd) – August 2025](https://devblogs.microsoft.com/azure-sdk/azure-developer-cli-azd-august-2025/) appeared first on [Azure SDK Blog](https://devblogs.microsoft.com/azure-sdk).",
  "Link": "https://devblogs.microsoft.com/azure-sdk/azure-developer-cli-azd-august-2025/",
  "Title": "Azure Developer CLI (azd) – August 2025",
  "FeedUrl": "https://devblogs.microsoft.com/azure-sdk/feed/",
  "PubDate": "2025-08-18T18:44:14+00:00",
  "FeedLevelAuthor": "Azure SDK Blog",
  "Author": "PuiChee (PC) Chan",
  "EnhancedContent": "Welcome to the August 2025 edition of the Azure Developer CLI (azd) release blog! This post covers releases 1.18.1 and 1.18.2. To share your feedback and questions, join the [August release discussion on GitHub](https://github.com/Azure/azure-dev/discussions/5581).\n\nThis month brings important bug fixes, documentation improvements, and new templates from the community. Read on for highlights and details!\n\n## Bugs fixed\n\n### Key callout: PowerShell fallback support\n\nWe’re updating the hook engine to automatically fall back to Windows PowerShell 5.1 when PowerShell 7 (`pwsh` ) is unavailable. [azd event hooks](https://learn.microsoft.com/azure/developer/azure-developer-cli/azd-extensibility) can run both PowerShell and Bash scripts, depending on your project and environment. With this update, if a PowerShell script is specified and `pwsh` isn’t found, azd falls back to Windows PowerShell 5.1 ([5570](https://github.com/Azure/azure-dev/pull/5570), [5585](https://github.com/Azure/azure-dev/pull/5585)). This update allows event hook scripts to run even if PowerShell 7 isn’t available, but scripts that depend on PowerShell 7 features may still fail in PowerShell 5.1.\n\nOther fixes include:\n\n- Checks if a .NET project is an Aspire project before running it, preventing errors. [\\[5501\\]](https://github.com/Azure/azure-dev/pull/5501)\n- Skips nonproject.v0 items in manifests so Visual Studio only publishes valid services. [\\[5567\\]](https://github.com/Azure/azure-dev/pull/5567)\n- Shows clear suggestions when resource group or Container App errors happen during deployment. [\\[5518\\]](https://github.com/Azure/azure-dev/pull/5518)\n- Avoids interactive login prompts in CI/CD environments for smoother automation. [\\[5528\\]](https://github.com/Azure/azure-dev/pull/5528)\n- Fix invalid branch name characters when generating federated credential names. [\\[5563\\]](https://github.com/Azure/azure-dev/pull/5563)\n- Keeps packages safe when using the `--from-package`\nflag with `azd deploy` . [\\[5445\\]](https://github.com/Azure/azure-dev/pull/5445)\n- Fixes extension installation issues on Linux systems. [\\[5531\\]](https://github.com/Azure/azure-dev/pull/5531)\n- Adds helpful error messages for containerd-enabled Docker package failures. [\\[5385\\]](https://github.com/Azure/azure-dev/pull/5385)\n- Display warning message for legacy and limited Aspire projects. [\\[5582\\]](https://github.com/Azure/azure-dev/pull/5582)\n\n## New docs\n\nThe documentation team delivered a set of major updates to help you understand and manage environment variables and environments in azd projects:\n\n- **(NEW) [Azure Developer CLI environment overview](https://learn.microsoft.com/azure/developer/azure-developer-cli/environments-overview)** – a comprehensive guide to how azd environment variables work, how to set and use them, with practical examples and troubleshooting tips.\n- **(NEW) [Work with Azure Developer CLI environments](https://learn.microsoft.com/azure/developer/azure-developer-cli/work-with-environments)** – how to create, manage, and switch between different environments using Azure Developer CLI (azd).\n- **(UPDATE) [Resource Group Scoped Deployments](https://learn.microsoft.com/azure/developer/azure-developer-cli/resource-group-scoped-deployments)** – how to enable resource group scoped deployments.\n- **(UPDATE) [Manage environment variables](https://learn.microsoft.com/azure/developer/azure-developer-cli/manage-environment-variables)** – expanded and clarified guidance on creating, managing, and using azd environments, including best practices for multi-environment workflows.\n- **(UPDATE) [Reference documents for Azure Developer CLI](https://learn.microsoft.com/azure/developer/azure-developer-cli/reference)** – updated CLI reference reflecting the latest environment and variable management commands and options.\n\nIn addition to these documentation updates, we published a new blog post in our “Dev to production” series. If you read our [first blog](https://devblogs.microsoft.com/devops/azure-developer-cli-from-dev-to-prod-with-one-click/) and are wondering how to achieve the same workflow using Azure DevOps, be sure to check out the second blog: [Azure Developer CLI: From Dev to Production with Azure Pipelines](https://devblogs.microsoft.com/devops/azure-developer-cli-from-dev-to-prod-with-azure-devops-pipelines/).\n\n## New templates\n\nCommunity-driven templates help you get started faster, solve real-world scenarios, and showcase best practices for deploying solutions with Azure Developer CLI.\n\nThe Azure Developer CLI template gallery continues to grow with exciting new contributions from the community. Thank you!\n\n- [Trainer-Demo-Deploy scenarios](https://github.com/Azure/awesome-azd/pull/635) by [petender](https://github.com/petender):\n- [Azure Monitor custom logs, and external telemetry](https://github.com/kareldewinter/tdd-azd-monitor): this scenario deploys a Log Analytics workspace with a custom table to ingest logs and external telemetry by [kareldewinter](https://github.com/kareldewinter).\n- [API Management with ConferenceAPI and OAuth](https://github.com/rob-foulkrod/azd-apimwithconfAPI-OAuth): deploy Azure API Management with OAuth2-Protected Conference API and Microsoft Entra ID Integration Using azd by [rob-foulkrod](https://github.com/rob-foulkrod).\n- [Microsoft Sentinel-based threat detection and response](https://github.com/daverendon/azd-microsoft-sentinel): this scenario aligns with the AZ-500 and AZ-104 paths and provides a demo solution for a proof-of-concept of Microsoft Sentinel-based threat detection and response by [daveRendon](https://github.com/daveRendon).\n- [Introduction to Azure PostgreSQL and AI](https://github.com/true-while/pg-ai-azd): Azure PostgreSQL & AI Demo offers step-by-step guidance for connecting, configuring, and integrating AI with PostgreSQL in Azure using modern tools by [true-while](https://github.com/true-while).\n- [Purview templates](https://github.com/Azure/awesome-azd/pull/624) by [PramodKumarHK89](https://github.com/PramodKumarHK89). Two samples to showcase how Purview API can be integrated to audit and secure AI prompts and responses – available in TypeScript and Python:\n- [Purview API integration in Serverless AI Chat with RAG using LangChain.js](https://github.com/Azure-Samples/serverless-chat-langchainjs-purview)\n- [Purview API integration in RAG chat app with Azure OpenAI and Azure AI Search (Python)](https://github.com/Azure-Samples/azure-search-openai-demo-purviewdatasecurity)\n\n## Contributor acknowledgments\n\nThank you [petender](https://github.com/petender), [kareldewinter](https://github.com/kareldewinter), [rob-foulkrod](https://github.com/rob-foulkrod), [daveRendon](https://github.com/daveRendon), [true-while](https://github.com/true-while), [PramodKumarHK89](https://github.com/PramodKumarHK89), and the Purview P4AI Team for their template contributions!\n\n## New to azd?\n\nWelcome! You can use azd from:\n\n- Your terminal of choice on Windows, Linux, or macOS.\n- Visual Studio Code or GitHub Codespaces by [downloading the extension](https://marketplace.visualstudio.com/items?itemName=ms-azuretools.azure-dev) from the Marketplace, or installing it directly from the extension view (`Ctrl`\n+ `Shift`\n+ `X`\nfor Windows or `Cmd`\n+ `Shift`\n+ `X`\nfor macOS) in Visual Studio Code.\n- Visual Studio by [enabling the preview feature flag](https://devblogs.microsoft.com/azure-sdk/introducing-the-azure-developer-cli-a-faster-way-to-build-apps-for-the-cloud/#visual-studio).\n\nLearn more about the Azure Developer CLI from our [official documentation](https://aka.ms/azd). If you run into any problems or have suggestions, file an issue or start a discussion in the [Azure Developer CLI repository](https://github.com/Azure/azure-dev). You can also reference our [troubleshooting documentation](https://aka.ms/azd-troubleshoot).\n\nWe hope you enjoy exploring the latest features and improvements in this release. Try out the new templates, take advantage of the updated documentation, and let us know what you think! Your feedback helps us make azd even better for the developer community. Happy coding and `azd up` !",
  "OutputDir": "_news",
  "Tags": [
    ".NET",
    "Azure SDK",
    "azure-developer-cli",
    "Codespaces",
    "Docker",
    "java",
    "javascript",
    "kubernetes",
    "python",
    "typescript",
    "VSCode"
  ]
}
