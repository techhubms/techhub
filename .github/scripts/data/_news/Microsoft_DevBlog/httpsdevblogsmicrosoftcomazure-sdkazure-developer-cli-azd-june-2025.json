{
  "Tags": [
    ".NET",
    "Azure SDK",
    "azure-developer-cli",
    "Codespaces",
    "Docker",
    "java",
    "javascript",
    "kubernetes",
    "python",
    "typescript",
    "VSCode"
  ],
  "OutputDir": "_news",
  "FeedLevelAuthor": "Azure SDK Blog",
  "ProcessedDate": "2025-08-05 14:10:14",
  "FeedUrl": "https://devblogs.microsoft.com/azure-sdk/feed/",
  "Title": "Azure Developer CLI (azd) – June 2025",
  "Description": "This post announces the June release of the Azure Developer CLI (`azd`).\n\nThe post [Azure Developer CLI (azd) – June 2025](https://devblogs.microsoft.com/azure-sdk/azure-developer-cli-azd-june-2025/) appeared first on [Azure SDK Blog](https://devblogs.microsoft.com/azure-sdk).",
  "Link": "https://devblogs.microsoft.com/azure-sdk/azure-developer-cli-azd-june-2025/",
  "FeedName": "Microsoft DevBlog",
  "Author": "Kristen Womack",
  "EnhancedContent": "This post shares the details of the latest changes to the Azure Developer CLI (`azd` ) in releases 1.16.0, 1.16.1, and 1.17.0. We invite you to join [our June release discussion on GitHub](https://github.com/Azure/azure-dev/discussions/5269) with questions and comments.\n\nThis month’s release has new features, bug fixes, new docs, and a batch of new templates. Before we dive in, we have an opportunity *for you* to shape the future of Terraform and `azd` with this brief (we promise) [survey](https://forms.office.com/r/bg6XPYLEaS). The community wants more Terraform support [(currently in beta)](https://learn.microsoft.com/azure/developer/azure-developer-cli/use-terraform-for-azd)–and we heard you! Thank you for being vocal about what is important to you.\n\nOk, let’s get into it. Here’s what’s new with `azd` this month.\n\nFirst, we updated our main `azd` menu to bring a cleaner organization to `azd` features and how to use them, as well as creating sections for the beta and alpha commands that you can start experimenting with in your project.\n\n![Screenshot of the reorganized Azure Developer CLI menu showing categorized commands including standard, beta, and alpha features](https://devblogs.microsoft.com/azure-sdk/wp-content/uploads/sites/58/2025/06/06-05-azd-menu.png)\n\n## New features\n\n### Extensions\n\nDid you see the new alpha feature in the menu? The ability to use and build extensions are the newest alpha feature. Extensions have the potential to bring developer tools closer to working with the `azd` CLI in inner workflow. This new feature demonstrates the potential to customize `azd` to the specific needs of your dev workflow.\n\nWe have several extensions in the works and today you can try the experience of building an extension with the developer extension.\n\n```bash\n# Enable the `azd` extensions alpha feature\nazd config set alpha.extensions on ```\n\n```bash\n# Install the `azd` developer extension\nazd extension install microsoft.azd.extensions ```\n\nCheck out the documentation here:\n\n- [Azure Developer CLI extensions overview](https://learn.microsoft.com/azure/developer/azure-developer-cli/extensions/overview) – An overview of the extension system for `azd`\n, explaining how extensions enhance functionality and enable custom commands.\n- [Quickstart: Create and use an Azure Developer CLI extension](https://learn.microsoft.com/azure/developer/azure-developer-cli/extensions/quickstart-ai-extension) – A step-by-step guide to creating your first `azd`\nextension and integrating it with your workflow.\n\n### Compose\n\nWe moved the compose feature `azd add` to beta for new projects (greenfield).\n\n- [\\[5242\\]](https://github.com/Azure/azure-dev/pull/5242) Promote `azd add`and composability features to Beta.\n- Remove `alpha.compose`\nalpha feature.\n- Use `azd add`\nto add Azure components to your project. `azd add` doesn’t currently support Aspire projects or most azd templates.\n- Use `azd show <resource name>`\nor `azd show <Azure resource ID>` to view details about a specific resource.\n\nAs part of moving compose to beta, we’re also promoting the `azd infra generate` command to beta (renamed from `azd infra synth` ).\n\n- [\\[5260\\]](https://github.com/Azure/azure-dev/pull/5260) Rename `azd infra synth`\nto `azd infra generate` (`azd infra gen`for short) and promote to Beta.\n- Remove `alpha.infraSynth`\nalpha feature.\n- `azd infra synth`\nwill continue to work as an alias of `azd infra generate` , but users are encouraged to use the new command names as `azd infra synth` may be removed in a future release.\n\n### Other features\n\n- [\\[5173\\]](https://github.com/Azure/azure-dev/pull/5173) **Support for Azure App Service**. The `azd show`\ncommand now includes resource information for Azure App Service deployments.\n- [\\[5158\\]](https://github.com/Azure/azure-dev/pull/5158) **Configure Azure AI Foundry hub to use identity-based storage access**. This improvement enhances security by using managed identities for storage access in Azure AI Foundry hub compose scenarios.\n- [\\[5143\\]](https://github.com/Azure/azure-dev/pull/5143), [\\[5183\\]](https://github.com/Azure/azure-dev/pull/5183), [\\[5185\\]](https://github.com/Azure/azure-dev/pull/5185) **Update azd pipeline config**. Auto-detect required variables and secrets from infrastructure provider parameters.\n- [\\[5190\\]](https://github.com/Azure/azure-dev/pull/5190) **Interactive controls for GitHub Actions**. Manage existing GitHub Actions variables and secrets during azd pipeline configuration.\n- [\\[5155\\]](https://github.com/Azure/azure-dev/pull/5155) **Nested extension namespaces**. Adds support for organizing extensions in hierarchical namespaces.\n- [\\[5249\\]](https://github.com/Azure/azure-dev/pull/5249) Add support for deploying a single service in .NET Aspire projects via vs-server.\n- [\\[5157\\]](https://github.com/Azure/azure-dev/pull/5157) Update `azd add`\nintegration with AI Foundry to use simplified 1RP setup with all models under a single AI Services account.\n- [\\[5214\\]](https://github.com/Azure/azure-dev/pull/5214) Add Linux to Homebrew formulae. Thanks @heaths for the contribution!\n- [\\[5204\\]](https://github.com/Azure/azure-dev/pull/5204) Add login guard middleware to autoprompt for user login in key commands if unauthenticated.\n- [\\[5248\\]](https://github.com/Azure/azure-dev/pull/5248) `azd pipeline config`\nsupport for configuring CI/CD using Managed Identities.\n- [\\[5200\\]](https://github.com/Azure/azure-dev/pull/5200) Update Bicep param prompting to support a default selected option, allowing azd to autoselect it with `--no-prompt`\n.\n\n### Breaking changes\n\n- [\\[5242\\]](https://github.com/Azure/azure-dev/pull/5242), [\\[5260\\]](https://github.com/Azure/azure-dev/pull/5260) When initializing from app code or minimal project, the `infra/`\nfolder is no longer generated. azd now manages infrastructure in-memory by default, but you can still generate IaC to disk to manually manage your infrastructure using `azd infra generate` (or `azd infra gen` for short).\n- [\\[5242\\]](https://github.com/Azure/azure-dev/pull/5242) When initializing from app code or minimal project, environment initialization is now deferred to provision time (for example, `azd up`\n), unless the `--environment <env name>` flag is passed to the `azd init` command or the `AZURE_ENV_NAME` environment variable is set.\n- [\\[5157\\]](https://github.com/Azure/azure-dev/pull/5157) AI Services models added through `azd add`\nrequire an updated version of the Azure AI Foundry SDK client library that supports project endpoints (`AZURE_AI_PROJECT_ENDPOINT=https://<account-name>.services.ai.azure.com/api/projects/<project-name>` ) instead of project connection strings (`AZURE_AI_PROJECT_CONNECTION_STRING=eastus.api.azureml.ms;<subscription id>;<resource group>;<project name>` ).\n\n## Bugs fixed\n\n- [\\[5176\\]](https://github.com/Azure/azure-dev/pull/5176) **Resource addition improvements**. Prevent same resource being added under ‘uses’ multiple times with `azd add`\n.\n- [\\[5176\\]](https://github.com/Azure/azure-dev/pull/5176) **Resource addition improvements**. Fix `azd add`\npreview for MySQL and Postgres with other UX improvements.\n- [\\[5192\\]](https://github.com/Azure/azure-dev/pull/5192) **Bicep generation fix**. Fix Bicep generation for compose projects with implicit Key Vault dependency.\n- [\\[5198\\]](https://github.com/Azure/azure-dev/pull/5198) **Error message improvements**. Fixes error messages surfaced to users that contain internal implementation details.\n- [\\[5187\\]](https://github.com/Azure/azure-dev/pull/5187) Improve the UX of `azd init`\nby displaying neutral message when user declines initializing in a directory that isn’t empty.\n- [\\[5255\\]](https://github.com/Azure/azure-dev/pull/5255) Fix vs-server crash when telemetry is disabled.\n- [\\[5199\\]](https://github.com/Azure/azure-dev/pull/5199) Avoid unnecessary Azure Container Registry (ACR) login for Aspire projects using only public images.\n- [\\[5246\\]](https://github.com/Azure/azure-dev/pull/5246) Remove explicit Azure Container Apps (ACA) Environment Contributor role assignment for Aspire projects. Thanks @eerhardt for the contribution!\n\n## Other changes\n\n- [\\[5194\\]](https://github.com/Azure/azure-dev/pull/5194) **Improved help text organization**. Reorganize azd help text with updated command sections (Getting started, Azure resources, Settings, Beta, Alpha, Extensions).\n- [\\[5189\\]](https://github.com/Azure/azure-dev/pull/5189) **Environment name clarity**. Clarify in environment prompt that the name must be unique.\n- [\\[5187\\]](https://github.com/Azure/azure-dev/pull/5187) **Better template initialization**. Improve the confirmation when declining to initialize template a directory that isn’t empty.\n- [\\[5159\\]](https://github.com/Azure/azure-dev/pull/5159) **Aspire detection message update**. Update Aspire detection message to not specifically mention ACA.\n- [\\[5138\\]](https://github.com/Azure/azure-dev/pull/5138) **Bicep CLI update**. Update Bicep CLI to v0.35.1.\n- [\\[5261\\]](https://github.com/Azure/azure-dev/pull/5261) Update dependencies to mitigate CVE-2025-30204.\n- [\\[5245\\]](https://github.com/Azure/azure-dev/pull/5245) Update Bicep CLI to v0.36.1.\n- [\\[5212\\]](https://github.com/Azure/azure-dev/pull/5212) Update changelog casing in developer extension release pipelines.\n- [\\[5209\\]](https://github.com/Azure/azure-dev/pull/5209) Deprecate internal registry extension in favor of azd developer extension.\n\n## New docs\n\nWe published several new docs on Microsoft Learn to help you get the most out of the Azure Developer CLI:\n\nNew:\n\n- [Explore the Azure Developer CLI initialization workflows](https://learn.microsoft.com/azure/developer/azure-developer-cli/azd-init-workflow) – A guide to paths to initialize a project with `azd init`\n: start with existing code, select a template, or create a minimal project. Learn how each workflow helps prepare your application for Azure deployment.\n- [Azure Developer CLI extensions overview](https://learn.microsoft.com/azure/developer/azure-developer-cli/extensions/overview) – An overview of the extension system for `azd`\n, explaining how extensions enhance functionality and enable custom commands.\n- [Quickstart: Create and use an Azure Developer CLI extension](https://learn.microsoft.com/azure/developer/azure-developer-cli/extensions/quickstart-ai-extension) – A step-by-step guide to creating your first `azd`\nextension and integrating it with your workflow.\n\nUpdated:\n\n- [CI/CD pipeline overview](https://learn.microsoft.com/azure/developer/azure-developer-cli/configure-devops-pipeline) – Refreshed information on automating deployment with CI/CD pipelines using `azd pipeline config`\n.\n- [Configure a GitHub Actions pipeline](https://learn.microsoft.com/azure/developer/azure-developer-cli/pipeline-github-actions) – Updated guidance for setting up GitHub Actions pipelines with `azd`\n.\n- [Configure an Azure DevOps pipeline](https://learn.microsoft.com/azure/developer/azure-developer-cli/pipeline-azure-pipelines) – Revised instructions for integrating `azd`\nwith Azure DevOps pipelines.\n- [Create a custom pipeline definition file](https://learn.microsoft.com/azure/developer/azure-developer-cli/pipeline-create-definition) – New information on creating custom pipeline templates for your specific needs.\n- [Advanced pipeline features](https://learn.microsoft.com/azure/developer/azure-developer-cli/pipeline-advanced-features) – How to use advanced pipeline capabilities with `azd`\n.\n\n## New templates\n\nIn addition to a batch of new templates published in May, we also added a new tag for “Model Context Protocol (MCP)” labeled as `MCP` . The new `MCP` tag was applied to several existing templates. Now it’s easier to see the subset of templates that are MCP server examples by selecting the `MCP` tag.\n\nNew templates this month include:\n\n- [Azure VM Win2022 as ADDS Domain Controller secured by Bastion](https://github.com/petender/azd-addsvm) authored by [Peter De Tender](https://github.com/petender). This template deploys an Azure Bastion Host Service, allowing secured connectivity to a Windows Server 2022 running as Active Directory Domain Controller, and then is deployed through DSC VM Extensions. An internal DNS domain gets created, but no other OUs or User accounts. You’re prompted for administrative credentials during the azd setup. [\\[PR #559\\]](https://github.com/Azure/awesome-azd/pull/559)\n- [SQL Server 2019 AlwaysOn Cluster with ADDS VM and Management VM, secured by Bastion](https://github.com/petender/azd-sqlao) authored by [Peter De Tender](https://github.com/petender). This template deploys a SQL Server 2019 AlwaysOn Cluster, together with the required Active Directory Domain Controller VM, a remote Management VM Host, and it’s protected by Bastion Host. You’re prompted for administrative credentials during the azd setup. [\\[PR #559\\]](https://github.com/Azure/awesome-azd/pull/559)\n- [AI-Powered Code Snippet Manager with Azure Functions and MCP](https://github.com/Azure-Samples/snippy) authored by [Govind Kamtamneni](https://github.com/thegovind). This template builds a modern code snippet management system using an MCP server built on Azure Functions with bindings to Cosmos DB DiskANN vector search and AI Agents Service for deep wiki and code style generation. This solution enables intelligent code snippet discovery and reuse through GitHub Copilot integration. [\\[PR #557\\]](https://github.com/Azure/awesome-azd/pull/557)\n- [Vite + Lit AI Chat UI Starter](https://github.com/Azure-Samples/vite-chat-interface) authored by [Julia Muiruri](https://github.com/juliamuiruri4). This template provides a ready-to-integrate chat interface using Vite and Lit for AI-powered conversations. [\\[PR #560\\]](https://github.com/Azure/awesome-azd/pull/560)\n- [.NET OpenAI MCP Agent](https://github.com/Azure-Samples/openai-mcp-agent-dotnet) authored by [Justin Yoo](https://github.com/justinyoo). This template is an MCP agent app written in .NET, using Azure OpenAI, with a remote MCP server written in TypeScript. [\\[PR #558\\]](https://github.com/Azure/awesome-azd/pull/558)\n- [GPT-RAG: Enterprise GenAI Chat Accelerator](https://github.com/Azure/GPT-RAG) authored by [Azure Content Team](https://github.com/Azure). This template offers an architecture tailored for enterprise-grade deployment of GenAI Solutions. It ensures grounded responses and is built on zero-trust security and responsible AI, ensuring availability, scalability, and auditability. Ideal for organizations transitioning from exploration and PoC stages to full-scale production and MVPs. [\\[PR #561\\]](https://github.com/Azure/awesome-azd/pull/561)\n\nThank you to the contributors who added enhancements, features, and new templates. We’re grateful for your contributions!\n\n- [Heath Stewart](https://github.com/heaths)\n- [Eric Erhardt](https://github.com/eerhardt)\n- [Peter De Tender](https://github.com/petender)\n- [Govind Kamtamneni](https://github.com/thegovind)\n- [Julia Muiruri](https://github.com/juliamuiruri4)\n- [Justin Yoo](https://github.com/justinyoo)\n- [Paulo Lacerda](https://github.com/placerda)\n- [Gonzalo Becerra](https://github.com/gbecerra1982)\n\nDo you have an `azd` template you’d like to share with the rest of the community? You can learn how to with our [contributor guide](https://azure.github.io/awesome-azd/docs/intro).\n\n## New workshop\n\nAt Microsoft Build last month, we held a workshop demonstrating how to use `azd` and GitHub Copilot for Azure to build an application with AI Search and AI Chat, and deploy it to Azure Container Apps.\n\nIf you want to go through the tutorial, [we made it available for anyone to try](https://github.com/microsoft/build25-LAB309).\n\n## New to `azd`\n?\n\nWelcome! You can use azd from:\n\n- Your terminal of choice on Windows, Linux, or macOS.\n- Visual Studio Code or GitHub Codespaces by [downloading the extension](https://marketplace.visualstudio.com/items?itemName=ms-azuretools.azure-dev) from the Marketplace, or installing it directly from the extension view (`Ctrl`\n+ `Shift`\n+ `X`\nfor Windows or `Cmd`\n+ `Shift`\n+ `X`\nfor macOS) in Visual Studio Code.\n- Visual Studio by [enabling the preview feature flag](https://devblogs.microsoft.com/azure-sdk/introducing-the-azure-developer-cli-a-faster-way-to-build-apps-for-the-cloud/#visual-studio).\n\nLearn more about the Azure Developer CLI from our [official documentation](https://aka.ms/azd). If you run into any problems or have suggestions, file an issue or start a discussion in the [Azure Developer CLI repository](https://github.com/Azure/azure-dev). You can also reference our [troubleshooting documentation](https://aka.ms/azd-troubleshoot).",
  "PubDate": "2025-06-05T20:20:50+00:00"
}
