{
  "OutputDir": "_news",
  "Title": "Semantic Kernel: Package previews, Graduations & Deprecations",
  "FeedUrl": "https://devblogs.microsoft.com/semantic-kernel/feed/",
  "Link": "https://devblogs.microsoft.com/semantic-kernel/semantic-kernel-package-previews-graduations-deprecations/",
  "Author": "Sophia Lagerkrans-Pandey, Sergey Menshykh",
  "ProcessedDate": "2025-08-05 07:59:07",
  "EnhancedContent": "# Semantic Kernel: Package Previews, Graduations & Deprecations\n\nWe are excited to share a summary of recent updates and continuous clean-up efforts across the Semantic Kernel .NET codebase. These changes focus on improving maintainability, aligning with the latest APIs, and ensuring a consistent experience for users. Below you’ll find details on package graduations, deprecations, and a few other improvements.\n\n## Graduations\n\n- **Plugins.Core Package Graduated to Preview**\nThe `Microsoft.SemanticKernel.Plugins.Core` package has been moved from “alpha” to “preview” status, reflecting its maturity and readiness for broader use. This change does not introduce new features but signals increased stability for those relying and building on these core plugins.\n- **PromptTemplates.Liquid Package Graduated**\nThe Microsoft.SemanticKernel.Liquid prompt template package has also graduated, with package validation enabled to ensure quality and compatibility.\n\n## Spring Cleaning – Deprecations\n\n- **Markdown Package Deprecated**\nThe `Microsoft.SemanticKernel.Markdown` package has been removed due to lack of usage. If you still use this package, please refer to the [migration guide](https://learn.microsoft.com/en-us/semantic-kernel/support/migration/functions-markdown-migration-guide).\n- **Math and Wait Plugins Removed**\nThe Math and Wait plugins, which were part of the project since its early days, have been removed as they are no longer relevant.\n- **OpenAI and Handlebars Planners Deprecated**\nThe `Microsoft.SemanticKernel.Planners.Handlebars` and `Microsoft.SemanticKernel.Planners.OpenAI` planners were deprecated in favor of more reliable mechanisms such as function calling, and the decision was made to discontinue their availability on NuGet packages. For migration details, see the [stepwise planner migration guide](https://learn.microsoft.com/en-us/semantic-kernel/support/migration/stepwise-planner-migration-guide?pivots=programming-language-csharp).\n\n## Improvements & Updates\n\n- **Plugins.Core Package API Is No Longer Experimental**\nThe experimental attribute has been removed from the Plugins.Core package API, reflecting its stable usage in production environments.\n- **Stable OpenAPI API**\nThe experimental attribute was also removed from the stable OpenAPI API, and package validation was enabled to ensure ongoing reliability.\n- **SessionsPythonPlugin Updates**\n- **API Migration**\nThe plugin was migrated to the latest Azure code interpreter API version (`2024-10-02-preview` ). This required some breaking changes to the plugin public API surface. [See the migration guide for details.](https://learn.microsoft.com/en-us/semantic-kernel/support/migration/sessions-python-plugin-migration-guide-2025)\n- **Structured Results**\nPython code execution results are now represented by a dedicated type, allowing for more structured handling and easier integration with other components.\n- **Request Handling**\nThe plugin now propagates cancellation tokens through all kernel functions, ensuring that operations can be gracefully terminated in response to user requests or timeouts, thereby improving resource management and application responsiveness.\n- **Domain Control**\nAdded the ability to control which domains requests can be sent to, increasing security and configurability.\n- **HTTP Consistency**\nRefactored to use `SendWithSuccessCheckAsync` extension methods for HTTP requests, aligning with other Semantic Kernel components.\n- **Code Clean-up**\nCommon functionality was consolidated to reduce duplication, and minor logging and readability improvements were made.\n- **Integration Tests**\nAdded integration tests for the plugin to ensure its reliability, and early detection of issues.\n\nThese updates are part of our ongoing effort to keep the Semantic Kernel codebase clean, stable, and easy to use. For more information on migrating from deprecated or updated components, please refer to the linked migration guides.\n\nIf you have feedback or questions, please join the discussion on our [GitHub repository](https://github.com/microsoft/semantic-kernel).",
  "Tags": [
    ".NET",
    "Semantic Kernel"
  ],
  "PubDate": "2025-05-16T08:32:47+00:00",
  "Description": "Semantic Kernel: Package Previews, Graduations & Deprecations We are excited to share a summary of recent updates and continuous clean-up efforts across the Semantic Kernel .NET codebase. These changes focus on improving maintainability, aligning with the latest APIs, and ensuring a consistent experience for users. Below you’ll find details on package graduations, deprecations, and a […]\n\nThe post [Semantic Kernel: Package previews, Graduations & Deprecations](https://devblogs.microsoft.com/semantic-kernel/semantic-kernel-package-previews-graduations-deprecations/) appeared first on [Semantic Kernel](https://devblogs.microsoft.com/semantic-kernel).",
  "FeedLevelAuthor": "Semantic Kernel",
  "FeedName": "Microsoft DevBlog"
}
