{
  "Tags": [
    "DevOps",
    "Open Source",
    "Security"
  ],
  "OutputDir": "_news",
  "FeedLevelAuthor": "Azure DevOps Blog",
  "ProcessedDate": "2025-08-05 14:15:44",
  "FeedUrl": "https://devblogs.microsoft.com/devops/feed/",
  "Title": "Automate your open-source dependency scanning with Advanced Security",
  "Description": "Any experiences that require additional setup is cumbersome, especially when there are multiple people needed. In GitHub Advanced Security for Azure DevOps, we’re working to make it easier to enable features and scale out enablement across your enterprise. You can now automatically inject the dependency scanning task into any pipeline run targeting your default branch. […]\n\nThe post [Automate your open-source dependency scanning with Advanced Security](https://devblogs.microsoft.com/devops/automate-your-open-source-dependency-scanning-with-advanced-security/) appeared first on [Azure DevOps Blog](https://devblogs.microsoft.com/devops).",
  "Link": "https://devblogs.microsoft.com/devops/automate-your-open-source-dependency-scanning-with-advanced-security/",
  "FeedName": "Microsoft DevBlog",
  "Author": "Laura Jiang",
  "EnhancedContent": "Any experiences that require additional setup is cumbersome, especially when there are multiple people needed. In GitHub Advanced Security for Azure DevOps, we’re working to make it easier to enable features *and* scale out enablement across your enterprise.\n\nYou can now automatically inject the dependency scanning task into any pipeline run targeting your default branch. This is a quick way to ensure that your production code (and any code being merged into your production branch) are evaluated for open-source dependency vulnerabilities.\n\n## Enabling one-click dependency scanning for your repository\n\nYou’ll need to have the Advanced Security: manage settings permission to make changes to your repository’s Advanced Security enablement. Navigate to a specific repository’s settings page: **Project settings** > **Repositories** > Select your repository.\n\nIf you’re using the standalone products, you first need Code Security enabled. Then, navigate to **Options** and confirm your selection of **Dependency alerts default setup**.\n\n[![Advanced Security repository options for Code Security plan](https://devblogs.microsoft.com/devops/wp-content/uploads/sites/6/2025/05/2025-05-28-15_48_55-advsec-repository-settings-code-security-options.png)](https://devblogs.microsoft.com/devops/wp-content/uploads/sites/6/2025/05/2025-05-28-15_48_55-advsec-repository-settings-code-security-options.png)\n\nIf you’re using the bundled Advanced Security, enable the checkbox to **Scan default branch for vulnerable dependencies**.\n\n[![Advanced Security repository enablement options](https://devblogs.microsoft.com/devops/wp-content/uploads/sites/6/2025/05/2025-02-24-14_20_55-Clipboard.png)](https://devblogs.microsoft.com/devops/wp-content/uploads/sites/6/2025/05/2025-02-24-14_20_55-Clipboard.png)\n\n## Receiving results from dependency scanning\n\nUpon the next execution of a pipeline run targeting your repository’s default branch, the Advanced Security dependency scanning task will be injected near the end of your pipeline. Dependency scanning completes evaluation of your dependencies and any associated vulnerabilities within a few minutes. For repositories where you may not have consistent CI/CD running, we recommend scheduled pipeline runs.\n\nIf the task is already in your pipeline or you’ve set up your pipelines to skip the dependency scanning task via the `DependencyScanning.Skip: true` environment variable, the injected task will be skipped. The environment variable is a great option if there are certain pipelines you don’t want to include in your scanning surface area. Alternatively, if there are certain pipeline jobs you wish to skip automated scanning in, you can also set the pipeline variable `dependencyScanningInjectionEnabled` to false.\n\nUpon successful execution of the task, results are uploaded to Advanced Security and available in the **Repos** > **Advanced Security** tab for developers to fix any findings.\n\n[![Advanced Security dependency scanning alerts in repository](https://devblogs.microsoft.com/devops/wp-content/uploads/sites/6/2025/05/advsec-alerts-dependencies.png)](https://devblogs.microsoft.com/devops/wp-content/uploads/sites/6/2025/05/advsec-alerts-dependencies.png)\n\nYou can also use this to easily set up pull request annotations for dependency scanning. If you have a build validation policy configured for your repository, dependency scanning will also automatically inject into any pull requests that target your default branch. Annotations for new findings appear directly on your pull request after you’ve scanned your default branch at least once, while any findings that exist in both branches will show up in the Advanced Security tab as well.\n\n## Next steps\n\nGive this feature a try! Our team is also working on more experiences to smooth out the enablement process across Advanced Security. Have any feedback? Please share that with us directly or on [Developer Community](https://developercommunity.visualstudio.com/AzureDevOps).\n\nLearn more about [Advanced Security](https://learn.microsoft.com/azure/devops/repos/security/configure-github-advanced-security-features) and [dependency scanning](https://learn.microsoft.com/azure/devops/repos/security/github-advanced-security-dependency-scanning?view=azure-devops).",
  "PubDate": "2025-08-04T17:17:37+00:00"
}
