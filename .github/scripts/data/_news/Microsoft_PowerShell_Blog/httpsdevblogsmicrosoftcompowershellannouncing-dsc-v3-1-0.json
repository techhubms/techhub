{
  "PubDate": "2025-06-18T14:12:40+00:00",
  "EnhancedContent": "We’re pleased to announce the General Availability of Microsoft’s Desired State Configuration (DSC) version 3.1.0. This release marks a significant milestone in our effort to deliver cloud-native configuration management for cross-platform environments. DSC is a declarative configuration and orchestration platform that defines a standard way of exposing settings for applications and services. DSC v3.1.0 is built on collaboration with key improvements driven by partner requests. Special thanks to the Windows Package Manager (WinGet) team and the incredible support of the DSC community.\n\nFor additional details about the initial DSC v3.0.0 release, see:\n\n- DSC v3.0.0 [Announcement](https://devblogs.microsoft.com/powershell/announcing-dsc-v3/)\n- DSC v3.0.0 [Get Started](https://devblogs.microsoft.com/powershell/get-started-with-dsc-v3/)\n- DSC v3.0.0 [Enhanced Authoring](https://devblogs.microsoft.com/powershell/enhanced-authoring-with-dsc-v3/)\n\n## What’s New in DSC v3.1\n\nThis release continues our momentum by delivering features and improvements driven by real world use, partner feedback, and community contributions.\n\nDSC v3.1 includes updates and fixes across the platform. Here are some of the most important improvements:\n\n**WinGet and partner-driven enhancements**\n\n- Core infrastructure updates to enable DSC-based management in WinGet scenarios.\n- Extended resource invocation APIs, allowing for richer integration by external tools.\n- Increased flexibility for configuration refresh and reporting, driven by partner needs.\n\n**Resource authoring improvements**\n\n- Improved handling and validation for resource schema files, with clearer error messages.\n- Fixed issues with module loading and path resolution that impacted PSDSC resources.\n- More robust handling of resources with required and optional properties.\n\n**Cross-Platform reliability and bug fixes**\n\n- Fixed several Linux-specific issues in resource execution, state detection, and error\nreporting.\n- Improved Windows compatibility, particularly for recent versions and in mixed-OS\nenvironments.\n- Addressed inconsistencies in the application of **ensure** properties and desired state\nevaluation.\n\n**Performance and quality**\n\n- Optimized configuration drift detection, resulting in faster and more reliable test\noperations.\n- Reduced occurrence of configuration runs left in an indeterminate or failed state.\n- Improved error handling for edge cases in `set`\n, `test` , and `get` operations.\n\n**Diagnostics and usability**\n\n- Expanded logging and diagnostics, making it easier to trace resource behavior and\nconfiguration activity.\n- Improved the clarity and usefulness of error and warning messages across platforms.\n- More consistent reporting of operation outcomes in both interactive and automated\nscenarios.\n\nFor a full list of changes, see the [DSC v3.1 changelog](https://github.com/PowerShell/DSC/blob/main/CHANGELOG.md)\n\n## Installing DSC\n\nTo get started, follow these steps to install DSC on your system:\n\nOn Windows, you can install DSC from the Microsoft Store using `winget` . By installing from the Store or using `winget` , you get automatic updates for DSC.\n\nSearch for the latest version of DSC:\n\n```powershell winget search DesiredStateConfiguration --source msstore ```\n\n```output Name Id Version Source --------------------------------------------------------------- DesiredStateConfiguration 9NVTPZWRC6KQ Unknown msstore DesiredStateConfiguration-Preview 9PCX3HX4HZ0Z Unknown msstore ```\n\nInstall DSC using the `id` parameter:\n\n```powershell\n# Install latest stable\nwinget install --id 9NVTPZWRC6KQ --source msstore ```\n\n```powershell\n# Install latest preview\nwinget install --id 9PCX3HX4HZ0Z --source msstore ```\n\nOn Linux and macOS, you can install DSC using the following steps:\n\n1. Download the latest release from the [PowerShell/DSC](https://github.com/PowerShell/DSC/releases) repository.\n2. Expand the release archive.\n3. Add the folder containing the expanded archive contents to your `PATH`\nenvironment variable.\n\n## Support lifecycle\n\nDSC follows semantic versioning.\n\nThe first release of DSC version 3.0.0 is a Stable release. DSC version 3.1.0 is the current Stable release. Patch releases update the third digit of the semantic version number. For example, 3.1.1 is a patch update to 3.1.0. Stable releases receive patches for critical bugs and security vulnerabilities for three months after the next Stable release. For example, version 3.1.0 is supported for three months after 3.2.0 is released.\n\nAlways update to the latest patch version of the release you’re using.\n\n## Call to action\n\nFor more information about Desired State Configuration v3.0 (DSC), see the [DSC documentation](https://learn.microsoft.com/powershell/dsc/overview?view=dsc-3.0). We value your feedback. Stop by our [GitHub repository](https://github.com/PowerShell/DSC) and let us know of any issues you find.\n\nJason Helmick\n\nSr. Product Manager, PowerShell",
  "FeedUrl": "https://devblogs.microsoft.com/powershell/feed/",
  "Title": "Announcing Microsoft Desired State Configuration v3.1.0",
  "FeedLevelAuthor": "PowerShell Team",
  "Link": "https://devblogs.microsoft.com/powershell/announcing-dsc-v3-1-0/",
  "Tags": [
    "PowerShell",
    "PowerShell DSC"
  ],
  "OutputDir": "_news",
  "Author": "Jason Helmick",
  "ProcessedDate": "2025-08-05 11:20:03",
  "Description": "This post announces the release of Microsoft Desired State Configuration v3.1.0. We discuss the features and benefits of DSC and how it differs from PowerShell DSC.\n\nThe post [Announcing Microsoft Desired State Configuration v3.1.0](https://devblogs.microsoft.com/powershell/announcing-dsc-v3-1-0/) appeared first on [PowerShell Team](https://devblogs.microsoft.com/powershell).",
  "FeedName": "Microsoft PowerShell Blog"
}
