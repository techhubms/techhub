{
  "Title": "Semantic Kernel and Microsoft Agent Framework",
  "ProcessedDate": "2025-10-08 07:02:42",
  "FeedName": "Microsoft Semantic Kernel Blog",
  "Author": "Shawn Henry",
  "EnhancedContent": "Last week we announced [**Microsoft Agent Framework**](https://aka.ms/AgentFramework), you can find all the details:\n\n- **In the blog post here:** [Introducing Microsoft Agent Framework: The Open-Source Engine for Agentic AI Apps | Azure AI Foundry Blog](https://devblogs.microsoft.com/foundry/introducing-microsoft-agent-framework-the-open-source-engine-for-agentic-ai-apps/)\n- **Explore documentation for more details:** [https://aka.ms/AgentFramework/Docs](https://aka.ms/AgentFramework/Docs)\n- **See it in action:** Watch demos on [AI Show](https://aka.ms/AgentFramework/AIShow) and [Open at Microsoft](https://aka.ms/AgentFramework/OpenAtMicrosoft)\n- **Learn step by step**: [Microsoft Learn modules for Agent Framework](https://learn.microsoft.com/en-us/training/paths/develop-ai-agents-on-azure/) and [AI Agents for Beginners](https://github.com/microsoft/ai-agents-for-beginners)\n\nIâ€™m immensely proud of the work the team that brought you AutoGen and Semantic Kernel have done to create Microsoft Agent Framework. We really think itâ€™s a great step forward in building AI agents and applications, building on all the learnings weâ€™ve had from creating AutoGen and Semantic Kernel. Please give a try and give us your feedback, we think youâ€™ll like it!\n\nIf youâ€™ve been building and shipping on Semantic Kernel, Iâ€™m sure you have questions. Iâ€™ve answered the most common here but, as always, you can reach out to us on [Semantic Kernel GitHub Discussions](https://devblogs.microsoft.com/foundry/introducing-microsoft-agent-framework-the-open-source-engine-for-agentic-ai-apps/) or [Discord](https://aka.ms/foundry/discord)\n\n### **What is your position on Semantic Kernel and Microsoft Agent Framework?**\n\nMicrosoft Agent Framework is the successor to Semantic Kernel for building AI agents. The goal of Microsoft Agent Framework is to provide a unified, enterprise-grade platform for developing, deploying, and managing AI agents. It builds upon the foundations laid by Semantic Kernel and AutoGen, incorporating lessons learned and feedback from the community to deliver a more robust and scalable solution. Microsoft Agent Framework is our single call-to-action for developers looking to create AI agents, with deep integration into the Microsoft and Azure ecosystems, as well as support for a wide range of models and tools from across the broader AI ecosystem. These are the same goals we had with Semantic Kernel and AutoGen.\n\n### **How long do we expect Semantic Kernel will be supported for?**\n\nThink of Microsoft Agent Framework as Semantic Kernel v2.0 (itâ€™s built by the same team!). Just like any library that has a v1.x and v2.x available, we will continue to support Semantic Kernel v1.x for the foreseeable future. We will continue to address critical bugs, security issues and weâ€™ll take some existing Semantic Kernel features to GA, but the majority of new features with be built for Microsoft Agent Framework. Ultimately, we continue to support Semantic Kernel while there are still a substantial number of developers using it, and for a least one year after Microsoft Agent Framework leaves Preview and is Generally Available.\n\n### **Will the support be different between platforms (Python/C#)?**\n\nWe intend to support Python and C#/.NET at parity for features that are marked General Availability. During preview, there may be some features that are only available in one language or the other at first, depending on which developers are taking lead on a particular feature.\n\n### **Should I stop using Semantic Kernel for new projects?**\n\nMicrosoft Agent Framework is still in Preview and we expect it to be in Preview for several months. If you have an existing project using Semantic Kernel, or if you need to ship something quickly, it is perfectly fine to use Semantic Kernel. If you are starting a new project and can wait until Microsoft Agent Framework reaches General Availability before shipping, we recommend starting with Microsoft Agent Framework. If you are starting a new project and need features that are only available in Microsoft Agent Framework today, it is also fine to start with Microsoft Agent Framework. When you decide to make the journey from Semantic Kernel to Microsoft Agent Framework, we have some great migration documentation here: [Semantic Kernel .NET migration guide](https://github.com/microsoft/agent-framework/tree/main/dotnet/samples/SemanticKernelMigration), [Semantic Kernel Python migration guide](https://github.com/microsoft/agent-framework/tree/main/python/samples/semantic-kernel-migration)\n\n### Semantic Kernel and AutoGen had such cool names, why Microsoft Agent Framework?\n\nWe tried **Semantogen**, but the branding team was having none of it ðŸ™‚\n\nHappy coding and I hope to see all of you from the Semantic Kernel community on this exciting journey!\n\nShawn Henry\n\nProduct Lead â€“ Semantic Kernel, AutoGen **and Microsoft Agent Framework**",
  "Link": "https://devblogs.microsoft.com/semantic-kernel/semantic-kernel-and-microsoft-agent-framework/",
  "Tags": [
    "Semantic Kernel"
  ],
  "FeedUrl": "https://devblogs.microsoft.com/semantic-kernel/feed/",
  "OutputDir": "_news",
  "Description": "Last week we announced Microsoft Agent Framework, you can find all the details: In the blog post here: Introducing Microsoft Agent Framework: The Open-Source Engine for Agentic AI Apps | Azure AI Foundry Blog Explore documentation for more details: https://aka.ms/AgentFramework/Docs See it in action: Watch demos on AI Show and Open at Microsoft Learn step by step: Microsoft Learn modules for [â€¦]\n\nThe post [Semantic Kernel and Microsoft Agent Framework](https://devblogs.microsoft.com/semantic-kernel/semantic-kernel-and-microsoft-agent-framework/) appeared first on [Semantic Kernel](https://devblogs.microsoft.com/semantic-kernel).",
  "FeedLevelAuthor": "Semantic Kernel",
  "PubDate": "2025-10-08T06:51:06+00:00"
}
