{
  "Tags": [
    "client apps",
    "copilot",
    "Improvement"
  ],
  "OutputDir": "_news",
  "PubDate": "2025-10-17T18:29:47+00:00",
  "FeedName": "The GitHub Blog",
  "Author": "Allison",
  "EnhancedContent": "Another week means another round of [daily GitHub Copilot CLI improvements](https://github.com/github/copilot-cli/releases), made possible by feedback from developers like you! Keep up the bug reports, feature requests, and discussions in our public repository.\n\nHere’s what’s new this week.\n\n## Multiline input\n\nGitHub Copilot CLI now supports multiline input via Shift+Enter in terminals that support the Kitty protocol. The integrated terminal in VSCode and its forks can be configured to support multiline input by running the `/terminal-setup` command.\n\n## Anthropic Claude Haiku 4.5 support\n\nA new model dawns\n\nAnd even our changelog speaks\n\nIn perfect meter.\n\n## Easier MCP server setup\n\nWe’ve made setting up local MCP servers more intuitive. The “Command” field now lets you enter the full command to start the server as if you were entering it in a shell, replacing the old format of comma-separated values for each argument.\n\nAdditionally, we’ve streamlined environment variable syntax to be more in line with what developers expect from other command-line tools. MCP environment variable values are now parsed literally. If you’d like to reference an environment variable from your shell, use `${VARIABLE_NAME}` syntax.\n\nUsing MCP servers in your sessions is now easier too—we’ve fixed bugs that caused tool calls to sometimes fail or hang.\n\n## Enabling more noninteractive workflows\n\n- Personal access token (PAT) and `gh`\nauthentication modes now respect the `GH_HOST` environment variable, allowing GitHub Enterprise Cloud with data residency customers to authenticate noninteractively.\n- We’ve improved how permissions requests are handled while in `-p`\nmode, and added a `--allow-all-paths` flag to make it easier to give broad permissions to noninteractive sessions.\n\n## Stability and a look towards the future\n\n- We’ve overhauled how GitHub Copilot CLI stores and manages sessions to be cleaner, more concise, and more scalable. It decouples storage from display, which opens the door for new features and integrations down the road.\n- Models now indicate their premium request multiplier wherever they are listed.\n- We’ve removed the “Windows support is experimental” warning after making significant improvements to PowerShell support over the past few weeks.\n- We’ve made it easier to extract debugging information to help you make informative, actionable bug reports. Stack traces, Copilot API request IDs, and more information have been added to our debug logs. You can also now persistently set `log_level`\nto `all` in `~/.copilot/config`\n\n### Share your feedback\n\nUpdate GitHub Copilot CLI by running `npm install -g @github/copilot@latest` in your terminal. Thank you to everyone submitting feedback via the `/feedback` command and opening issues in our public repository. Your input helps us ship better features every day.",
  "FeedUrl": "https://github.blog/changelog/feed/",
  "Title": "Copilot CLI: Multiline input, new MCP enhancements, and Haiku 4.5",
  "Link": "https://github.blog/changelog/2025-10-17-copilot-cli-multiline-input-new-mcp-enhancements-and-haiku-4-5",
  "Description": "Another week means another round of daily GitHub Copilot CLI improvements, made possible by feedback from developers like you! Keep up the bug reports, feature requests, and discussions in our…\n\nThe post [Copilot CLI: Multiline input, new MCP enhancements, and Haiku 4.5](https://github.blog/changelog/2025-10-17-copilot-cli-multiline-input-new-mcp-enhancements-and-haiku-4-5) appeared first on [The GitHub Blog](https://github.blog).",
  "ProcessedDate": "2025-10-17 19:02:30",
  "FeedLevelAuthor": "Archive: 2025 - GitHub Changelog"
}
