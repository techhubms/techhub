{
  "FeedName": "The GitHub Blog",
  "FeedUrl": "https://github.blog/changelog/feed/",
  "Description": "Copilot code review is becoming even more customizable! You can now use your existing path-scoped instruction files to provide targeted guidance for specific parts of your repository. Plus we haveâ€¦\n\nThe post [Copilot code review: Path-scoped custom instruction file support](https://github.blog/changelog/2025-09-03-copilot-code-review-path-scoped-custom-instruction-file-support) appeared first on [The GitHub Blog](https://github.blog).",
  "Title": "Copilot code review: Path-scoped custom instruction file support",
  "OutputDir": "_news",
  "EnhancedContent": "Copilot code review is becoming even more customizable! You can now use your existing path-scoped instruction files to provide targeted guidance for specific parts of your repository. Plus we have a few other important updates for you to know about. ðŸ‘‡\n\n### Path-scoped instruction files now supported in Copilot code review\n\nCopilot code review now recognizes `*.instructions.md` files with an `applyTo` section, making it easier to give code review guidance for specific files or directories in your repository. Path-scoped instruction files have been supported for other Copilot features for a while. Now Copilot code review will also use these files in addition to your repository-wide `copilot-instructions.md` to deliver more focused, relevant feedback in pull requests.\n\nThis means you can:\n\n- Scope guidance to individual areas, like `frontend`\nor `security` , with separate `*.instructions.md` files.\n- Use an `applyTo`\nsection with path globs to target exactly where each instruction applies â€” files without `applyTo` are ignored.\n- Maintain concise, purpose-driven instructions for each part of your codebase.\n\n**Quick start**\n\n1. Create or update a file such as `frontend.instructions.md`\nwithin the `.github/instructions` directory in a repository.\n2. Add an `applyTo:`\nsection with one or more path globs (e.g., `webapp/src/**` ).\n3. Add concise, self-contained guidance.\n4. Commit and open or update a pull request that touches a matching path â€” Copilot code review will use the relevant instructions.\n\n**Example:**\n\n```markdown\n# frontend.instructions.md\napplyTo:\n- webapp/src/**\n- ui/components/**\n--- Emphasize accessibility (ARIA, focus management). Prefer design tokens. Flag deprecated components under `legacy/`.\n\n```\n\nFor more details, check the documentation for [Copilot custom instructions](https://docs.github.com/copilot/how-tos/configure-custom-instructions/add-repository-instructions#creating-a-repository-custom-instructions-file).\n\n### More customization updates\n\n#### Organization-level instructions now supported in Copilot code review\n\nOrganization-level instructions are now also considered by Copilot code review. If your organization already maintains org-level instructions, these will now be automatically included when generating review feedback for pull requests. This helps ensure your coding standards and best practices are consistently applied across all your repositories.\n\n#### Coding guidelines deprecation\n\nEarlier, we announced that the coding guidelines feature (previously in private preview for Copilot Enterprise) was being [partially deprecated](https://github.blog/changelog/2025-07-18-upcoming-deprecations-and-changes-to-copilot-code-review/#deprecating-coding-guidelines-in-favor-of-copilot-instructions-md). Today, weâ€™re completely deprecating the feature. Going forward, add all your customization specifications to `copilot-instructions.md` or `*.instructions.md` files.\n\nJoin the discussion within [GitHub Community](https://github.com/orgs/community/discussions/categories/announcements).",
  "FeedLevelAuthor": "Archive: 2025 - GitHub Changelog",
  "PubDate": "2025-09-03T20:41:26+00:00",
  "Author": "Allison",
  "Tags": [],
  "Link": "https://github.blog/changelog/2025-09-03-copilot-code-review-path-scoped-custom-instruction-file-support",
  "ProcessedDate": "2025-09-03 22:10:19"
}
