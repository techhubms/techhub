{
  "OutputDir": "_news",
  "Title": "Building beyond the browser: Keeley Hammond on Electron, open source, and the future of maintainership",
  "PubDate": "2025-09-25T17:05:48+00:00",
  "FeedName": "The GitHub Blog",
  "Author": "Abigail Cabunoc Mayes",
  "FeedLevelAuthor": "The GitHub Blog",
  "ProcessedDate": "2025-09-25 17:09:54",
  "Description": "Learn what it really takes to sustain one of the web’s most widely used frameworks on this episode of the GitHub Podcast.\n\nThe post [Building beyond the browser: Keeley Hammond on Electron, open source, and the future of maintainership](https://github.blog/open-source/maintainers/building-beyond-the-browser-keeley-hammond-on-electron-open-source-and-the-future-of-maintainership/) appeared first on [The GitHub Blog](https://github.blog).",
  "FeedUrl": "https://github.blog/feed/",
  "Link": "https://github.blog/open-source/maintainers/building-beyond-the-browser-keeley-hammond-on-electron-open-source-and-the-future-of-maintainership/",
  "EnhancedContent": "Every so often, a conversation completely reframes how you see something you thought you understood. That’s what happened when [Kedasha Kerr](https://github.com/ladykerr) and I sat down with [Keeley Hammond](https://github.com/vertedinde), a longtime maintainer of the [Electron Project](https://www.electronjs.org/).\n\nOver the past 15 years I’ve been in the open source ecosystem, I’ve watched [Electron](https://www.electronjs.org/) power more and more of the tools we use daily: VS Code, Slack, Discord. Though I’ve worked on the OpenJS Foundation Board, when I was talking with Keeley for The GitHub Podcast, I realized I’d been missing a crucial part of the story:\n\n> >\n> Electron allows you to build cross-platform desktop applications using web technology. It’s like React Native or Flutter but for desktop.\n> >\n\nSimple, right? But as we dug deeper, what emerged wasn’t just a technical framework discussion. It was a living example of what I’ve been thinking about for years: how to build [sustainable pathways to maintainership](https://medium.com/@abbycabs/creating-pathways-that-invest-in-new-maintainers-8ffb52e09681).\n\nThis conversation reminded me why I love this work. It’s not just about the code. It’s about the people, the systems, and the culture we build together.\n\n*Listen to the full episode👇*\n\n## From “newbie questions” to core maintainer\n\nKeeley’s path to maintainership started at InVision, where no one really knew Electron yet. She saw an opening:\n\n> >\n> I thought, okay, I’ll be the Electron person. I reached out to the maintainers and they were so welcoming. That’s why I’m still here.\n> >\n\nThat warmth mattered. Instead of being brushed off for asking “basic” questions, Keeley found quick, patient responses and even a private Slack where she could fumble and learn. Years later, she’s paying it forward by helping shape a culture where newcomers feel just as supported.\n\n## Misconceptions about Electron\n\nIf you’ve ever heard that Electron apps are bloated or slow, Keeley’s take might surprise you:\n\n> >\n> Bad JavaScript is bad JavaScript no matter where it lives. You’ll see native apps hogging resources too. It’s about how you build.\n> >\n\nElectron apps can be slim, fast, and secure. The team backports Chromium changes weekly, maintains three active release lines, and invests heavily in patching vulnerabilities. In other words, Electron takes security and performance as seriously as any native framework.\n\n## How governance sustains growth\n\nProjects at Electron’s scale don’t run on passion alone. Keeley described a governance model with seven working groups — covering everything from releases to APIs — that spreads responsibility across maintainers.\n\nPaid contributors from Slack and Microsoft anchor the project, but volunteers remain essential. Electron leans on their expertise in packaging, installers, and ecosystem tools.\n\n> >\n> As many volunteers as we can hire, we do. When we can’t, we look for ways to support them — funding, travel, resources. Nobody should feel like a second-class citizen.\n> >\n\nThat intentional balance between corporate support and volunteer energy is part of why Electron continues to thrive.\n\n## The systems that sustain maintainers\n\nIf there’s one lesson Keeley wanted other maintainers to take away, it’s this: automate the grunt work.\n\nIssue templates that request missing details. Labels and canned responses that keep triage moving. Runbooks that standardize how mentors support new contributors.\n\n> >\n> Open source is a firehose. Automation frees you up to focus on the harder, human work of debugging, mentoring, and building.\n> >\n\nThis resonates deeply with what I’ve been advocating for years. The right systems can transform a project from chaos to collaboration. Setting up issue templates or writing runbooks isn’t glamorous work, but it’s the foundation that makes everything else possible.\n\n## AI, spam, and the next challenge\n\nBut here’s where things get complicated – and where maintainers need our support more than ever. Keeley flagged a rising problem: AI-generated spam proposals, especially in programs like [Google Summer of Code](https://summerofcode.withgoogle.com/).\n\n> >\n> We got twice as many proposals this year. A good portion were AI-generated noise. It’s frustrating when you know some contributors put real thought into theirs.\n> >\n\nBut she also sees potential. Used responsibly, AI helps non-native English speakers communicate more clearly. It can assist with code exploration. The challenge isn’t banning AI in these spaces, it’s creating filters and teachable moments to separate noise from signal.\n\nAs fellow host Kedasha put it:\n\n> >\n> This is a teaching moment. AI can help, but you still need to understand the core problem. Otherwise it’s just a waste of time.\n> >\n\nThe very human skills of critical thinking, creativity, and resilience matter more than ever with the rise of AI.\n\n## What Electron teaches us about open source\n\nAfter our conversation, I keep thinking about how intentional Electron is about culture. From triage systems to governance groups, from hiring maintainers when possible to sponsoring volunteer contributions when not, everything is designed to keep the community welcoming and sustainable.\n\nWe can learn so much from this approach.\n\nBecause if projects like Electron show us anything, it’s that successful open source isn’t just about shipping code. It’s about building systems and cultures that make contributing feel worthwhile.\n\n> >\n> We’re always looking for new contributors and maintainers.\n> >\n\nThat’s an open invitation.\n\n## What you can steal from Electron’s playbook\n\n- Set up issue templates with auto-responses for missing details.\n- Create runbooks for common interactions (they use Notion).\n- Establish working groups to distribute ownership.\n- Run regular triage meetings (Electron’s releases group meets weekly).\n- Centralize communications (they route all GSoC emails to one Slack channel).\n- Be intentional about culture. Write down how you’ll behave toward contributors.\n\n## Looking forward\n\nElectron is powering the apps we use every day. But it goes so much further. It’s also modeling what sustainable open source can look like in a world where the pressures are bigger than ever — spam, scaling, and the constant firehose of contributions.\n\nKeeley’s journey from “newbie” to core maintainer isn’t unique because she’s exceptional (though she is). It’s replicable because Electron built the pathways to make it possible.\n\n**My takeaway:** The health of open source isn’t measured in lines of code or stars. It’s measured in how well we support the people behind the projects.\n\n**Listen to our full conversation** with Keeley Hammond on [The GitHub Podcast](https://the-github-podcast.simplecast.com/). And don’t miss the next episode by subscribing today!",
  "Tags": [
    "Electron",
    "GitHub Podcast",
    "Maintainers",
    "Open Source"
  ]
}
