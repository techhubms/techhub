{
  "Tags": [
    "application security",
    "Improvement"
  ],
  "Link": "https://github.blog/changelog/2025-09-10-codeql-2-23-0-adds-support-for-rust-log-injection-and-other-security-detection-improvements",
  "Title": "CodeQL 2.23.0 adds support for Rust log injection and other security detection improvements",
  "FeedUrl": "https://github.blog/changelog/feed/",
  "Description": "CodeQL is the static analysis engine behind GitHub code scanning, which finds and remediates security issues in your code. We’ve recently released CodeQL 2.23.0, which introduces a new Rust security…\n\nThe post [CodeQL 2.23.0 adds support for Rust log injection and other security detection improvements](https://github.blog/changelog/2025-09-10-codeql-2-23-0-adds-support-for-rust-log-injection-and-other-security-detection-improvements) appeared first on [The GitHub Blog](https://github.blog).",
  "FeedLevelAuthor": "Archive: 2025 - GitHub Changelog",
  "Author": "Allison",
  "EnhancedContent": "CodeQL is the static analysis engine behind [GitHub code scanning](https://docs.github.com/code-security/code-scanning/introduction-to-code-scanning/about-code-scanning-with-codeql), which finds and remediates security issues in your code. We’ve recently released [CodeQL 2.23.0](https://codeql.github.com/docs/codeql-overview/codeql-changelog/codeql-cli-2.23.0/), which introduces a new Rust security query, promotes a Java Spring Boot security query, and includes a faster Rust extractor.\n\n## Language and framework support\n\n- **C/C++**: Added flow summaries for the `Microsoft::WRL::ComPtr`\nmember functions. The new dataflow and taint-tracking library now resolves virtual function calls more precisely. This results in fewer false positives when running these queries on C++ projects.\n- **C#**: Fixed a bug in the data flow analysis, which means that flow through calls using the `base`\nqualifier may now be tracked more accurately. The default taint tracking configuration now allows implicit reads from collections at sinks and in additional flow steps. This increases flow coverage for many taint tracking queries and helps reduce false negatives.\n- **Rust**: Removed path resolution from the Rust extractor, making extraction faster and more reliable. We also improved the modeling of the `std::fs`\n, `async_std::fs` , and `tokio::fs` libraries, which may cause more alerts to be found by Rust injection queries, particularly `rust/path-injection` .\n\n## Query changes\n\nWe have also made improvements and additions to queries across several languages:\n\n- **Java**:\n- Promoted the query `java/insecure-spring-actuator-config`\nfrom experimental to the main query pack as `java/spring-boot-exposed-actuators-config` . This query detects exposure of Spring Boot actuators through configuration files, and its results will now appear by default. Thank you to `@luchua-bc` who [submitted the original experimental query](https://github.com/github/codeql/pull/5384)!\n- Fixed a bug that was causing false negatives in rare cases in the query `java/dereferenced-value-may-be-null`\n.\n- Removed the `java/empty-statement`\nquery that was subsumed by the `java/empty-block` query.\n- **Python**:\n- Modernized the `py/unexpected-raise-in-special-method`\nquery so it produces additional results in cases where the exception is only raised conditionally.\n- Modernized the queries `py/incomplete-ordering`\n, `py/inconsistent-equality` , and `py/equals-hash-mismatch` with improved documentation. They no longer produce alerts for problems specific to Python 2.\n- **Rust**:\n- Added a new query for Rust, `rust/log-injection`\n, for detecting cases where log entries could be forged by a malicious user.\n\nFor a full list of changes, please refer to the complete [changelog for version 2.23.0](https://codeql.github.com/docs/codeql-overview/codeql-changelog/codeql-cli-2.23.0/). Every new version of CodeQL is automatically deployed to users of GitHub code scanning on github.com. The new functionality in CodeQL 2.23.0 will also be included in a future GitHub Enterprise Server (GHES) release. If you use an older version of GHES, you can [manually upgrade your CodeQL version](https://docs.github.com/enterprise-server@3.17/admin/managing-code-security/managing-github-advanced-security-for-your-enterprise/configuring-code-scanning-for-your-appliance#configuring-codeql-analysis-on-a-server-without-internet-access).",
  "PubDate": "2025-09-10T18:04:45+00:00",
  "FeedName": "The GitHub Blog",
  "ProcessedDate": "2025-09-12 11:12:04",
  "OutputDir": "_news"
}
