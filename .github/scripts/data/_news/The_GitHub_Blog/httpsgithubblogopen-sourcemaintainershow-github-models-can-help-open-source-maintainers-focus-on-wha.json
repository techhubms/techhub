{
  "Description": "Learn how GitHub Models helps open source maintainers automate repetitive tasks like issue triage, duplicate detection, and contributor onboarding — saving hours each week.\n\nThe post [How GitHub Models can help open source maintainers focus on what matters](https://github.blog/open-source/maintainers/how-github-models-can-help-open-source-maintainers-focus-on-what-matters/) appeared first on [The GitHub Blog](https://github.blog).",
  "EnhancedContent": "Open source runs on passion and persistence. Maintainers are the volunteers who show up to triage issues, review contributions, manage duplicates, and do the quiet work that keeps projects going.\n\nMost don’t plan on becoming community managers. But they built something useful, shared it, and stayed when people started depending on it. That’s how creators become stewards.\n\nBut as your project grows, your time to build shrinks. Instead, you’re writing the same “this looks like a duplicate of #1234” comment, asking for missing reproduction steps, and manually labeling issues. It’s necessary work. But it’s not what sparked your love for the project or open source.\n\nThat’s why we built GitHub Models: to help you automate the repetitive parts of project management using AI, right where your code lives and in your workflows, so you can focus on what brought you here in the first place.\n\n## What maintainers told us\n\nWe surveyed over 500 maintainers of leading open source projects about their AI needs. Here’s what they reported:\n\n- 60% want help with issue triage — labeling, categorizing, and managing the flow\n- 30% need duplicate detection — finding and linking similar issues automatically\n- 10% want spam protection — filtering out low quality contributions\n- 5% need slop detection — identifying low quality pull requests that add noise\n\nFolks surveyed indicated that they wanted AI to serve as a second pair of eyes and to not intervene unless asked. They also said triaging issues, finding similar issues, helping write minimal reproductions were top of mind. Clustering issues based on topic or feature was also possibly the most important concern to some.\n\n## How GitHub Models + GitHub Actions = Continuous maintainer support\n\nWe’re calling this pattern [Continuous AI](https://githubnext.com/projects/continuous-ai/) using automated AI workflows to enhance collaboration, just like CI/CD transformed testing and deployment. With GitHub Models and GitHub Actions, you can start applying it today.\n\n## Here’s how Continuous AI can help maintainers (you!) manage their projects\n\nThe following examples are designed for you to easily copy and paste into your project. Make sure [GitHub Models is enabled](https://docs.github.com/en/github-models/about-github-models#enabling-github-models) for your repository or organization, and then just copy the YAML into your repo’s .github/workflows directory. Customize these code blocks as needed for your project.\n\nAdd permissions: models: read to your workflow YAML, and your action will be able to call models using the built-in GITHUB\\_TOKEN. No special setup or external keys are required for most projects.\n\n### Automatic issue deduplication\n\n**Problem:** You wake up to three new issues, two of them are describing the same bug. You copy and paste links, close duplicates, and move on… until it happens again tomorrow.\n\n**Solution:** Implement GitHub Models and a workflow to automatically check if a new issue is similar to existing ones and post a comment with links.\n\n``` name: Detect duplicate issues\n\non: issues: types: [opened, reopened]\n\npermissions: models: read issues: write\n\nconcurrency: group: ${{ github.workflow }}-${{ github.event.issue.number }} cancel-in-progress: true\n\njobs: continuous-triage-dedup: if: ${{ github.event.issue.user.type != 'Bot' }} runs-on: ubuntu-latest steps:\n- uses: pelikhan/action-genai-issue-dedup@v0\nwith: github_token: ${{ secrets.GITHUB_TOKEN }}\n# Optional tuning:\n# labels: \"auto\" # compare within matching labels, or \"bug,api\"\n# count: \"20\" # how many recent issues to check\n# since: \"90d\" # look back window, supports d/w/m\n```\n\nThis keeps your issues organized, reduces triage work, and helps contributors find answers faster. You can adjust `labels` , `count` , and `since` to fine tune what it compares against.\n\n### Issue completeness\n\n**Problem:** A bug report lands in your repo with no version number, no reproduction steps, and no expected versus actual behavior. You need that information before you can help.\n\n**Solution**: Automatically detect incomplete issues and ask for the missing details.\n\n``` name: Issue Completeness Check\n\non: issues: types: [opened]\n\npermissions: issues: write models: read\n\njobs: check-completeness: runs-on: ubuntu-latest steps:\n- name: Check issue completeness\nuses: actions/ai-inference@v1 id: ai with: prompt: | Analyze this GitHub issue for completeness. If missing reproduction steps, version info, or expected/actual behavior, respond with a friendly request for the missing info. If complete, say so.\n\nTitle: ${{ github.event.issue.title }} Body: ${{ github.event.issue.body }} system-prompt: You are a helpful assistant that helps analyze GitHub issues for completeness. model: openai/gpt-4o-mini temperature: 0.2\n\n- name: Comment on issue\nif: steps.ai.outputs.response != '' uses: actions/github-script@v7 with: script: | github.rest.issues.createComment({ owner: context.repo.owner, repo: context.repo.repo, issue_number: ${{ github.event.issue.number }}, body: `${{ steps.ai.outputs.response }}` }) ```\n\nThe bot could respond: *“Hi! Thanks for reporting this. To help us investigate, could you please provide: 1) Your Node.js version, 2) Steps to reproduce the issue, 3) What you expected to happen versus what actually happened?”* Or you can take it a step further and ensure the issue is following your contributing guidelines, like [ben-balter/ai-community-moderator](https://github.com/benbalter/ai-community-moderator) (MIT License).\n\n### Spam and “slop” detection\n\n**Problem**: You check notifications and find multiple spam pull requests or low effort “fix typo” issues.\n\n**Solution**: Use AI to flag suspicious or low quality contributions as they come in.\n\n``` name: Contribution Quality Check\n\non: pull_request: types: [opened] issues: types: [opened]\n\npermissions: pull-requests: write issues: write models: read\n\njobs: quality-check: runs-on: ubuntu-latest steps:\n- name: Detect spam or low-quality content\nuses: actions/ai-inference@v1 id: ai with: prompt: | Is this GitHub ${{ github.event_name == 'issues' && 'issue' || 'pull request' }} spam, AI-generated slop, or low quality?\n\nTitle: ${{ github.event.issue.title || github.event.pull_request.title }} Body: ${{ github.event.issue.body || github.event.pull_request.body }}\n\nRespond with one of: spam, ai-generated, needs-review, or ok system-prompt: You detect spam and low-quality contributions. Be conservative - only flag obvious spam or AI slop. model: openai/gpt-4o-mini temperature: 0.1\n\n- name: Apply label if needed\nif: steps.ai.outputs.response != 'ok' uses: actions/github-script@v7 with: script: | const label = `${{ steps.ai.outputs.response }}`; const number = ${{ github.event.issue.number || github.event.pull_request.number }};\n\nif (label && label !== 'ok') { await github.rest.issues.addLabels({ owner: context.repo.owner, repo: context.repo.repo, issue_number: number, labels: [label] }); } ```\n\nThis workflow auto-screens new issues and new pull requests for spam/slop/low-quality, and auto labels them based on an LLM’s judgment.\n\nTip: If the repo doesn’t already have `spam` or `needs-review` labels, `addLabels` will create them with default styling. If you want custom colors or descriptions, pre-create them.\n\nYou can also check out these related projects: [github/ai-assessment-comment-labeler](https://github.com/github/ai-assessment-comment-labeler) (MIT license) and [github/ai-moderator](https://github.com/github/ai-moderator) (MIT license).\n\n### Continuous resolver\n\n**Problem:** Your repo has hundreds of open issues, many of them already fixed or outdated. Closing them manually would take hours.\n\n**Solution:** Run a scheduled workflow that identifies resolved or no-longer-relevant issues and pull requests, and either comments with context or closes them.\n\n``` name: Continuous AI Resolver on: schedule:\n- cron: '0 0 * * 0' # Runs every Sunday at midnight UTC\nworkflow_dispatch: permissions: issues: write pull-requests: write jobs: resolver: runs-on: ubuntu-latest steps:\n- name: Run resolver\nuses: ashleywolf/continuous-ai-resolver@main with: github_token: ${{ secrets.GITHUB_TOKEN }} ```\n\n***Note**: The above code references an existing action in [ashleywolf/continuous-ai-resolver](https://github.com/ashleywolf/continuous-ai-resolver) (MIT license).* This makes it easier for contributors to find active, relevant work. By automatically identifying and addressing stale issues, you prevent the dreaded “issue pileup” that discourages new contributors and makes it harder to spot actual problems that need attention.\n\n### New contributor onboarding\n\n**Problem**: A first time contributor opens a pull request, but they’ve missed key steps from your `CONTRIBUTING.md` .\n\n**Solution**: Send them a friendly, AI-generated welcome message with links to guidelines and any helpful suggestions.\n\n``` name: Welcome New Contributors\n\non: pull_request: types: [opened]\n\npermissions: pull-requests: write models: read\n\njobs: welcome: runs-on: ubuntu-latest if: github.event.pull_request.author_association == 'FIRST_TIME_CONTRIBUTOR' steps:\n- name: Generate welcome message\nuses: actions/ai-inference@v1 id: ai with: prompt: | Write a friendly welcome message for a first-time contributor. Include:\n1. Thank them for their first PR\n2. Mention checking CONTRIBUTING.md\n3. Offer to help if they have questions\n\nKeep it brief and encouraging. model: openai/gpt-4o-mini temperature: 0.7\n\n- name: Post welcome comment\nuses: actions/github-script@v7 with: script: | const message = `${{ steps.ai.outputs.response }}`; await github.rest.issues.createComment({ owner: context.repo.owner, repo: context.repo.repo, issue_number: ${{ github.event.pull_request.number }}, body: message }); ```\n\nThis makes contributors feel welcome while setting them up for success by reducing rework and improving merge times.\n\n## Why these?\n\nThese examples hit the biggest pain points we hear from maintainers: triage, deduplication, spam handling, backlog cleanup, and onboarding. They’re quick to try, safe to run, and easy to tweak. Even one can save you hours per month.\n\n## Best practices\n\n- Start with one workflow and expand from there\n- Keep maintainers in the loop until you trust the automation\n- Customize prompts so the AI matches your project’s tone and style\n- Monitor results and tweak as needed\n- Avoid one size fits all automation, unreviewed changes, or anything that spams your contributors\n\n## Get started today\n\nIf you’re ready to experiment with AI:\n\n1. Enable GitHub Models in your repository settings\n2. Start with the playground to test prompts and models\n3. Save working prompts as .prompt.yml files in your repo\n4. Build your first action using the examples above\n5. Share with the community — we’re all learning together!\n\nThe more we share what works, the better these tools will get. If you build something useful, add it to the [Continuous AI Awesome List](https://github.com/githubnext/awesome-continuous-ai).\n\nIf you’re looking for more join the [Maintainer Community &gt;](https://maintainers.github.com/auth/signin)",
  "PubDate": "2025-08-28T19:02:44+00:00",
  "FeedName": "The GitHub Blog",
  "ProcessedDate": "2025-08-28 19:09:11",
  "Tags": [
    "GitHub Models",
    "Maintainers",
    "Open Source"
  ],
  "FeedUrl": "https://github.blog/feed/",
  "Author": "Ashley Wolf",
  "Link": "https://github.blog/open-source/maintainers/how-github-models-can-help-open-source-maintainers-focus-on-what-matters/",
  "OutputDir": "_news",
  "FeedLevelAuthor": "The GitHub Blog",
  "Title": "How GitHub Models can help open source maintainers focus on what matters"
}
