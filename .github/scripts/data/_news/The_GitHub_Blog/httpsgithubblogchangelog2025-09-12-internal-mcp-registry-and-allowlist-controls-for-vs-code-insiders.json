{
  "FeedLevelAuthor": "Archive: 2025 - GitHub Changelog",
  "Title": "Internal MCP registry and allowlist controls for VS Code Insiders",
  "Tags": [
    "copilot",
    "Improvement",
    "platform governance"
  ],
  "FeedUrl": "https://github.blog/changelog/feed/",
  "EnhancedContent": "Enterprise and organization administrators can now configure MCP registries and test allowlist enforcement in VS Code Insiders, preparing for the rollout across all Copilot environments.\n\n## Understanding MCP registries and allowlists\n\nAn MCP registry is a catalog of MCP servers. GitHub administrators can upload a URL for an internal registry in their enterprise or organization’s Copilot policies page. The registry serves two purposes:\n\n- **Discovery**: It makes approved MCP servers visible and easily installable in MCP-compatible Copilot host applications (like Copilot in VS Code).\n- **Allowlisting**: When combined with the **Registry only** policy, it prevents any usage of MCP servers (at runtime) that are not defined in the internal registry.\n\nThink of the uploaded registry as a recommended vendor list, while the allowlist policy determines whether that list is strictly enforced or simply recommended.\n\n## Setting up your registry\n\nYou can host your MCP registry using a couple of approaches:\n\n- **Azure API Center**: You can use Microsoft’s managed [Azure API Center](https://learn.microsoft.com/azure/api-center/overview) service for dynamic registry management with enterprise MCP governance features.\n- **Static hosting**: You can serve a JSON file following the [official MCP registry specification](https://spec.modelcontextprotocol.io/specification/registry/). This could be hosted on GitHub Pages, S3, or any HTTPS endpoint. Any endpoint that returns a specification-compliant MCP registry JSON response will work.\n\n## Current availability\n\n**VS Code Insiders** currently have the full experience available:\n\n- Registry servers appear in the MCP servers sidebar panel.\n- **Registry only** policy actively blocks servers that aren’t on the registry at runtime.\n\n**VS Code Stable** users have a partial experience available:\n\n- Registry servers appear in the MCP servers sidebar panel.\n- No strict enforcement yet — all servers can run regardless of the policy setting.\n\nThis phased rollout lets you configure and test your registry now while most of your developers can continue working uninterrupted in their preferred Copilot editor.\n\n## Policy options\n\nWhen configuring your MCP access policy, you have two choices:\n\n- **Allow all** (default): Your registry servers appear as recommendations, but developers can use any MCP server.\n- **Registry only**: Developers can only use servers listed in your registry — all others are blocked with a clear policy message.\n\nCurrently, local server enforcement only validates against server IDs. This is a known limitation. In October, we’ll add stricter configuration matching that verifies command paths, arguments, and environment variables for enhanced security.\n\n## Rollout timeline\n\n- **Available now**: VS Code Insiders supports full registry display and enforcement, VS Code Stable supports registry display only.\n- **October**: VS Code Stable and Visual Studio will have enforcement and enhanced local server configuration matching.\n- **October-November**: Copilot Coding Agent, JetBrains, Eclipse and Xcode registry and allowlist integration\n\n## Getting started\n\nThis feature is available exclusively for Copilot Business and Copilot Enterprise customers. Enterprise policies override organization policies for users with multiple seats. You can begin testing in VS Code Insiders now to validate your registry and allowlist configuration before this policy is supported on all Copilot environments.\n\nFor setup instructions and registry format specifications, see [Configure MCP server access for your organization or enterprise](https://gh.io/mcp-registry-allow-lists).",
  "FeedName": "The GitHub Blog",
  "PubDate": "2025-09-12T18:31:57+00:00",
  "Description": "Enterprise and organization administrators can now configure MCP registries and test allowlist enforcement in VS Code Insiders, preparing for the rollout across all Copilot environments. Understanding MCP registries and allowlists…\n\nThe post [Internal MCP registry and allowlist controls for VS Code Insiders](https://github.blog/changelog/2025-09-12-internal-mcp-registry-and-allowlist-controls-for-vs-code-insiders) appeared first on [The GitHub Blog](https://github.blog).",
  "ProcessedDate": "2025-09-12 23:10:06",
  "OutputDir": "_news",
  "Link": "https://github.blog/changelog/2025-09-12-internal-mcp-registry-and-allowlist-controls-for-vs-code-insiders",
  "Author": "Allison"
}
