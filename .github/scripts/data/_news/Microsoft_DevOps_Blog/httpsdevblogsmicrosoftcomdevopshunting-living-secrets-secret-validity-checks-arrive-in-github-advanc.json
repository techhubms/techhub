{
  "Link": "https://devblogs.microsoft.com/devops/hunting-living-secrets-secret-validity-checks-arrive-in-github-advanced-security-for-azure-devops/",
  "ProcessedDate": "2025-08-24 16:24:32",
  "PubDate": "2025-08-12T16:08:45+00:00",
  "FeedLevelAuthor": "Azure DevOps Blog",
  "Title": "Hunting Living Secrets: Secret Validity Checks Arrive in GitHub Advanced Security for Azure DevOps",
  "FeedUrl": "https://devblogs.microsoft.com/devops/feed/",
  "EnhancedContent": "If you’ve ever waded through a swamp of secret scanning alerts wondering, “Which of these are actually dangerous right now?” — this enhancement is for you.\n\nSecret validity checks in **GitHub Advanced Security for Azure DevOps** (and the standalone **Secret Protection** experience) add a high‑signal field to each alert: `Active` (still usable), or `Unknown` (couldn’t be verified).\n\nInstead of treating every alert like a five‑alarm fire, you can now fast‑path the truly risky stuff and spend less time chasing ghosts.\n\n### TL;DR\n\n| Status | What it really means | First instinct | | --- | --- | --- | | Active | The credential still works right now. | Fix immediately. | | Unknown | Couldn’t verify (no activity, unsupported, provider issue, throttling, network). | Treat as possibly active; retry or rotate if sensitive. |\n\n### Why This Matters\n\nTraditional secret scanning:\n\n> >\n> Found something → raise alert → you investigate → sometimes it was revoked months ago → wasted cycles.\n> >\n\nSecret scanning + validity checks:\n\n> >\n> Found something → provider queried automatically → you know if it still opens doors.\n> >\n\nThis feature doesn’t revoke secrets for you—it improves **prioritization**. You spend your time on “living” (Active) secrets first, not archaeological specimens.\n\n### How It Works\n\n- Secret scanning detects a string matching a supported partner/provider pattern.\n- The platform securely queries the provider to confirm whether the credential still works.\n- You get a status: `Active`\nor `Unknown` .\n- You trigger an on‑demand verification after remediation to confirm it is no longer active.\n\nSupported provider patterns are listed[here](https://learn.microsoft.com/azure/devops/repos/security/github-advanced-security-secret-scan-patterns?view=azure-devops#partner-provider-patterns)(bookmark it; it will evolve). If a pattern isn’t supported, the alert may remain **Unknown**—that’s expected.\n\n### Before You Start\n\nMake sure:\n\n- GitHub Advanced Security for Azure DevOps is enabled for the project/repository (or Secret protection is enabled in the standalone experience).\n- Secret scanning is turned on (validity checks are an enhancement, not a standalone feature).\n\nOnce those are true, validity checks just start for newly detected supported secret types. No extra toggle. No YAML fiddling.\n\n![Validity checking list image](https://devblogs.microsoft.com/devops/wp-content/uploads/sites/6/2025/08/Validity-checking-list.png)\n\n### Typical Workflow\n\n1. **Filter for Active secrets**\n\n![Validation panels image](https://devblogs.microsoft.com/devops/wp-content/uploads/sites/6/2025/08/Vallidation-panels.png)\n\n**I see list filters to only results that are Active**\n\n![Alerts list filtered by Validation status Active image](https://devblogs.microsoft.com/devops/wp-content/uploads/sites/6/2025/08/Alerts-list-filtered-by-Validation-status-Active.png)\n2. **Open an Active alert and see when it was last verified**\n\n![Alert detail panel showing Active and Recommendations &#038; Remediation image](https://devblogs.microsoft.com/devops/wp-content/uploads/sites/6/2025/08/Alert-detail-panel-showing-Active-and-Recommendations-Remediation.png)\n\n**I then proceed with the recommended remediation, including rotation/revocation and code removal.**\n3. **Run on‑demand verification by clicking “Verify Secret”**\n\n![Verify / Re-verify action in progress image](https://devblogs.microsoft.com/devops/wp-content/uploads/sites/6/2025/08/Verify-Re-verify-action-in-progress.png)\n\n**Wait a couple of minutes, verification has updated**\n\n![Verification completed image](https://devblogs.microsoft.com/devops/wp-content/uploads/sites/6/2025/08/verification-completed.png)\n4. **Sweep Unknown secrets**\n\n- Strategy: Retry verification later, or treat as Active if it’s high‑privilege or high‑impact.\n5. **Close alerts** according to your policy once remediation + verification (if applicable) are complete.\n\n### Dealing with “Unknown”\n\n**Unknown ≠ safe.** Classify Unknown secrets with three quick questions:\n\n1. What is the potential blast radius? (Production infrastructure vs. internal sandbox.)\n2. How sensitive is the data it gates?\n3. What’s the rotation cost? (Cheap to rotate? Do it.)\n\nIf 2+ factors lean “risky,” act as if Active and remediate.\n\n### FAQ Quick Hits\n\n- **Does this revoke secrets automatically?**\n\nNo. It informs prioritization; remediation is manual (or via your automation).\n- **Will all secret types support validation?**\n\nMore partners will onboard over time—track the supported patterns list.\n\n### Final Call to Action\n\n- Confirm secret scanning is enabled.\n- Filter for `Active`\nsecrets today.\n- Use built-in Recommendations & Remediation.\n- Run on-demand verification to validate your fix.\n- Track how quickly you neutralize live credentials, then improve from there.\n\nFewer ghosts. More real wins.\n\n**Happy hunting.**\n\n### Appendix: Reference Link\n\n- [Explore secret scanning in greater depth](https://aka.ms/ghazdo-secret-validation)\n- [Supported provider patterns for validation](https://learn.microsoft.com/azure/devops/repos/security/github-advanced-security-secret-scan-patterns?view=azure-devops#partner-provider-patterns)\n- [Configure GitHub Advanced Security for Azure DevOps features – Azure Repos | Microsoft Learn](https://learn.microsoft.com/en-us/azure/devops/repos/security/configure-github-advanced-security-features?view=azure-devops&amp;tabs=yaml)\n- [Curious what’s new? Our release notes have the highlights](https://learn.microsoft.com/azure/devops/release-notes/2025/sprint-260-update#github-advanced-security-for-azure-devops-1)",
  "Tags": [
    "Azure & Cloud",
    "Open Source",
    "Security"
  ],
  "Description": "If you’ve ever waded through a swamp of secret scanning alerts wondering, “Which of these are actually dangerous right now?” — this enhancement is for you. Secret validity checks in GitHub Advanced Security for Azure DevOps (and the standalone Secret Protection experience) add a high‑signal field to each alert: Active (still usable), or Unknown (couldn’t […]\n\nThe post [Hunting Living Secrets: Secret Validity Checks Arrive in GitHub Advanced Security for Azure DevOps](https://devblogs.microsoft.com/devops/hunting-living-secrets-secret-validity-checks-arrive-in-github-advanced-security-for-azure-devops/) appeared first on [Azure DevOps Blog](https://devblogs.microsoft.com/devops).",
  "OutputDir": "_news",
  "FeedName": "Microsoft DevOps Blog",
  "Author": "Michael Omokoh"
}
