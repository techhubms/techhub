{
  "Author": "Chuck Weininger",
  "FeedName": "Microsoft .NET Blog",
  "FeedUrl": "https://devblogs.microsoft.com/dotnet/feed/",
  "ProcessedDate": "2025-09-15 17:10:10",
  "OutputDir": "_news",
  "Description": "Learn how Application Insights Code Optimizations helps .NET developers identify performance bottlenecks and get AI-powered recommendations through GitHub Copilot integration.\n\nThe post [Application Insights Code Optimizations for .NET Apps](https://devblogs.microsoft.com/dotnet/application-insights-code-optimizations/) appeared first on [.NET Blog](https://devblogs.microsoft.com/dotnet).",
  "Title": "Application Insights Code Optimizations for .NET Apps",
  "FeedLevelAuthor": ".NET Blog",
  "Tags": [
    ".NET",
    "AI",
    "Application Insights",
    "Azure",
    "Azure Monitor",
    "GitHub Copilot",
    "Performance",
    "Performance Optimization",
    "Profiling"
  ],
  "EnhancedContent": "As engineers we know how frustrating it can be to chase and fix performance issues without clear guidance. That’s why we built [Application Insights Code Optimizations](https://aka.ms/CodeOptimizations/docs) — to give you actionable insights, reduce the guesswork, and help you focus on what you do best: building great software.\n\n## What does it do?\n\nTo help you tackle performance issues with confidence, the Application Insights Code Optimizations surfaces meaningful insights without the need for deep-dive profiling sessions. It helps you reduce toil for optimizing performance of your .NET applications by automatically analyzing runtime profiler traces, identifying CPU and memory bottlenecks, and delivering actionable, code-level recommendations through GitHub Copilot. ![screenshot of Code Optimization Suggestion](https://devblogs.microsoft.com/dotnet/wp-content/uploads/sites/10/2025/09/CodeOptimization.jpg)\n\n## How Does It Work?\n\nCode Optimizations integrates directly with the Application Insights .NET Profiler. It meticulously analyzes trace data from your running application to identify inefficiencies. These insights are then presented as clear, actionable recommendations within the Azure portal.\n\n## Seamless Integration with Your Workflow\n\nYou can seamlessly integrate these recommendations into your development process. Track them as work items in Azure DevOps or your preferred tool and leverage the power of GitHub Copilot in Visual Studio or Visual Studio Code to get code-level suggestions grounded in the trace analysis.\n\nFurthermore, Code Optimizations extends into the GitHub Copilot coding agent, allowing you to explore various performance-tested remediation options and collaborate on the best fix. It’s no surprise that over half of our users are assigning the GitHub Issues generated from these insights directly to the GitHub Copilot coding agent to accelerate their optimization tasks. ![screenshot of Create Work Item](https://devblogs.microsoft.com/dotnet/wp-content/uploads/sites/10/2025/09/assign-to-github-copilot-toggle-on.png)\n\nTry it now! Check out our full [documentation](https://aka.ms/CodeOptimizations/docs)\n\n## See It in Action\n\n[Check out the Azure Friday session with Scott Hanselman](https://www.youtube.com/watch?v=UUYAbRze3UA) to see a live demonstration of Code Optimizations and witness how it can transform your performance tuning process.\n\n## What’s New?\n\nWe are excited to share some new enhancements:\n\n- [Blocking Insights](https://learn.microsoft.com/azure/azure-monitor/optimization-insights/code-optimizations-profiler-overview?source=recommendations): Code Optimizations now identifies issues that prevent threads from executing—such as synchronous operations within asynchronous workflows. Previously, recommendations were limited to threads that were actively running; now, you it can help you identify problems affecting threads that are blocked or waiting.\n- [Direct GitHub Copilot Assignment](https://learn.microsoft.com/azure/azure-monitor/optimization-insights/code-optimizations-github-copilot): You can now assign GitHub issues to the GitHub Copilot coding agent directly from the code optimizations page. We’ve also enabled this from the Application Insights Failures crash analysis blade [(snapshot debugger)](https://learn.microsoft.com/azure/azure-monitor/snapshot-debugger/snapshot-debugger-data), streamlining your debugging and optimization workflow.\n- [OpenTelemetry Support (Preview)](https://github.com/Azure/azuremonitor-opentelemetry-profiler-net): As OpenTelemetry adoption grows, we are thrilled to announce that you can now use the .NET Profiler for OpenTelemetry (Preview). This allows you to gain valuable performance insights without needing to add any additional SDKs to your applications, simplifying your instrumentation strategy. ![Open Telemetry References](https://devblogs.microsoft.com/dotnet/wp-content/uploads/sites/10/2025/09/open-telemetry-references.jpg)\n\n## Get Started Today\n\nReady to take your application performance to the next level? Getting started with Code Optimizations is easy. If you are already using Application Insights, you just enable the .NET Profiler for your application. For new applications, you can enable it as part of the Application Insights setup.\n\n## Let’s Build This Together\n\nWe built Code Optimizations to make performance tuning easier, faster, and more impactful for developers like you. But this is just the beginning. I’d love to hear how it’s working for you, what’s missing, and what you’d like to see next. Your feedback helps us shape the future of this experience—so don’t hold back! Drop us a note at [https://aka.ms/CodeOptimizations/Feedback](https://aka.ms/CodeOptimizations/Feedback) and let’s keep making this better, together.\n\n## Call to Action\n\n- [Enable Code Optimizations](https://aka.ms/CodeOptimizations/docs) in your Application Insights resource today and start receiving performance recommendations.\n- [Watch our Azure Friday session to learn more.](https://www.youtube.com/watch?v=UUYAbRze3UA)\n- [Join the conversation and provide your feedback](https://aka.ms/CodeOptimizations/Feedback) to help shape the future of this service.",
  "PubDate": "2025-09-15T17:05:00+00:00",
  "Link": "https://devblogs.microsoft.com/dotnet/application-insights-code-optimizations/"
}
