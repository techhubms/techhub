{
  "EnhancedContent": "[Azure Blob Storage](https://learn.microsoft.com/azure/storage/blobs/storage-blobs-introduction), like any object data service, is a high-value target for threat actors due to its critical role in storing and managing massive amounts of unstructured data at scale across diverse workloads. Organizations of all sizes use Blob Storage to support key workloads—such as AI, high performance computing (HPC), analytics, media, enterprise backup, and IoT data ingestion—making it a potential vector for attacks that can impact everything from data integrity to business continuity. Threat actors are actively seeking opportunities to compromise environments that host downloadable media or maintain large-scale data repositories, leveraging the flexibility and scale of Blob Storage to target a broad spectrum of organizations.\n\nRecognizing these risks, Microsoft’s [Secure Future Initiative (SFI)](https://www.microsoft.com/trust-center/security/secure-future-initiative) has strengthened default security by design, but defenders must continue to follow security baseline recommendations and leverage customer-facing security capabilities to stay ahead of evolving threats. In alignment with the MITRE ATT&CK framework, Microsoft Threat Intelligence continually [updates](https://www.microsoft.com/security/blog/2023/09/07/cloud-storage-security-whats-new-in-the-threat-matrix/) threat matrices to map the evolving tactics and techniques targeting cloud environments. While some of our previous work has focused on [Kubernetes](https://www.microsoft.com/security/blog/2025/04/23/understanding-the-threat-landscape-for-kubernetes-and-containerized-assets/) and containerized workloads at the compute layer of the cloud stack, this blog shifts the lens to the data storage layer—specifically, Azure Blob Storage.\n\nTherefore, in this blog, we outline some of the unique threats associated with the data storage layer, including relevant stages of the attack chain for Blob Storage to connect these risks to actionable [Azure Security controls](https://learn.microsoft.com/security/benchmark/azure/overview-v3?source=recommendations) and applicable [security recommendations](https://learn.microsoft.com/azure/storage/blobs/security-recommendations?source=recommendations). We also provide threat detections to help contain and prevent Blob Storage threat activity with Microsoft Defender for Cloud’s [Defender for Storage plan](https://learn.microsoft.com/azure/defender-for-cloud/defender-for-storage-introduction). By understanding the unique threats facing Azure Blob Storage and implementing targeted security controls, organizations can better safeguard their most critical workloads and data repositories against evolving attacker tactics.\n\n## How Azure Blob Storage works\n\nAzure Storage supports a wide range of options for handling exabytes of blob data from many sources at scale. Blobs store everything from checkpoint and model files for AI to parquet datasets for analytics. These blobs are organized into containers, which function like folders grouping sets of blobs. A single storage account can contain an unlimited number of containers, and each container can store an unlimited number of blobs.\n\nBlob Storage also supports HPC, backup, and disaster recovery scenarios for more resiliency and business continuity, like backing up on-premises resources or Infrastructure as a Service (IaaS) virtual machine-hosted SQL Server data. Azure Data Lake Storage offers specific optimizations well suited for file system and analytics workloads such as hierarchical namespace and fast atomic operations. Blob storage also supports public access scenarios such as download for static files—not all files are accessible for download over internet.\n\nAzure Storage fulfils the cloud shared responsibility model through best practices across identity and access management, secure networking, data protection, and continuous monitoring. It supports best practices that help defend across the attack chain when implemented as part of both a cloud-native identity and access management solution such as Microsoft Entra ID, and a cloud-native application protection platform such as Defender for Cloud. Azure Storage integrates with both, allowing least-privilege access through Entra role-based access control (RBAC) and fine-grained Entra Azure attribute-based access control (ABAC).\n\nAzure Storage safeguards data in transit with network protections such as network security perimeter, private endpoint/Private Link and virtual networks, and encryption for data in transit via TLS. It uses service-side encryption (SSE) to automatically encrypt all Azure Storage resources persisted to the cloud, including blobs and object metadata, and cannot be disabled. While Storage automatically encrypts all data in a storage account at the service level using 256-bit AES encryption (one of the strongest block ciphers available), it is also possible to enable 256-bit AES encryption at the infrastructure level for double encryption to protect against a scenario where one of the encryption algorithms or keys might be compromised.\n\nAzure Storage integrates with Azure Backup and Microsoft Defender for ransomware and malware protection. Azure Storage also supports a wide range of data protection scenarios, such as preventing deletion or modification of accounts and blobs through immutability settings and enabling recovery from data deletion or overwrites through soft delete and versioning.\n\n## A look at the attack chain\n\nTo help defenders apply appropriate controls and our recommendations against various threat scenarios across the attack chain, we take a closer look at the progression.\n\n![Attack techniques abusing Blob Storage spanning reconnaissance, resource development, initial access, persistence, execution, credential access, discovery, lateral movement, collection, command and control, exfiltration, and impact.](https://www.microsoft.com/en-us/security/blog/wp-content/uploads/2025/10/Figure-1.-Attack-techniques-that-abuse-Blob-Storage-along-the-attack-chain.webp)*Figure 1. Attack techniques that abuse Blob Storage along the attack chain*\n\n### Reconnaissance\n\nThreat actors [enumerate](https://techcommunity.microsoft.com/blog/microsoftdefendercloudblog/protect-your-storage-resources-against-blob-hunting/3735238) Blob Storage to identify publicly exposed data and credentials that they can leverage later in the attack chain. Common tactics include [DNS and HTTP header probing](https://github.com/appsecco/breaking-and-pwning-apps-and-servers-aws-azure-training/blob/master/documentation/bapazure/cloud-storage/attacking-azure-storage-blobs.md) to scan for valid \\*.*blob.core.windows.net* subdomains. Threat actors can now also use language models to generate plausible storage account or container names to make brute-forcing more effective.\n\nEnumeration tools like Goblob have long been made available on GitHub, and threat actors can extend this type of capability misusing other tools on GitHub like QuickAZ, which combines storage enumeration with other Azure reconnaissance capabilities. Threat actors may also try to leverage PowerShell-based scanners easily accessible to brute-force prefix and suffix combinations for hours using permutation dictionary scripts. They can also turn to [dedicated indexers](https://grayhatwarfare.medium.com/how-to-search-for-open-amazon-s3-buckets-and-their-contents-https-buckets-grayhatwarfare-com-577b7b437e01) cataloging tens of thousands of publicly exposed containers.\n\nWhen sensitive credentials, such as storage account keys, shared access signatures (**SAS**), or Microsoft Entra ID principal credentials are discovered in source code repositories or configuration files (including version histories), threat actors can more easily gain an initial foothold. Storage account keys are particularly high risk if they grant full read, write, and delete access to storage resources. With these credentials, threat actors can escalate privileges, move laterally, or proceed directly to exfiltrate data.\n\n### Resource development\n\nThreat actors try to exploit misconfigured or missing identity controls to create malicious resources in Blob Storage in furtherance of their operations and targeting. They may attempt to leverage Azure Blob Storage to host spoofed versions of legitimate Microsoft sign-in pages to make it more challenging for potential victims to discern based on an inspection of the SSL certificates alone.\n\nThreat actors may attempt to place malicious executables or macro-enabled documents in containers left open to anonymous access or secured by weak or compromised SAS. This could lead to victims downloading harmful content directly from those blob URLs.\n\nSince Blob Storage often stores machine learning training datasets, threat actors may exploit it for data poisoning by injecting mislabeled or malicious samples to skew model behavior and produce incorrect predictions.\n\n### Initial access\n\nA single misconfigured endpoint could expose sensitive information. Theoretically, a threat actor could attempt to exploit [blob-triggered Azure Functions](https://learn.microsoft.com/azure/azure-functions/functions-scenarios) using [Event Grid](https://learn.microsoft.com/azure/event-grid/overview) that process files in storage containers, or [Azure Logic Apps](https://learn.microsoft.com/azure/logic-apps/logic-apps-overview) that automate file transfers from external sources like FTP servers, to gain entry to downstream workflows linked to Azure Storage—if those workflows rely on misconfigured or insufficiently secured authentication mechanisms. This could allow an attacker to maliciously trigger trusted automation or hijack event routing to escalate privileges or move laterally within the environment.\n\n### Persistence\n\nIf a threat actor gains access to an environment through Blob Storage, they may attempt to establish a long-term foothold by manipulating identity and access configurations that are resilient to standard remediation efforts such as key rotations or password resets. These techniques may include assigning built-in roles or custom roles with elevated privileges to identities under their control, generating SAS with broad permissions and extended expiration periods, modifying container-level access policies to permit anonymous read access, enabling Secure File Transfer Protocol (SFTP) on storage accounts, or leveraging soft-delete capabilities to conceal malicious payloads by uploading, deleting, and later restoring blobs.\n\nThreat actors frequently abuse legitimate tools such as AADInternals to establish backdoors and persist, enabling access to both cloud and hybrid resources. Additionally, frameworks like AzureHound are extensively leveraged to identify privileged escalation paths from enumerated Azure resources.\n\n### Defense evasion\n\nThreat actors may attempt to evade detection by tampering with Blob Storage networking and logging configurations—loosening or deleting firewall rules, adding overly permissive IP address ranges or virtual network (VNet) rules, creating unauthorized private endpoints, distributing requests across regions, or disabling diagnostic logging.\n\n### Credential access\n\nThreat actors may attempt to obtain Blob Storage credentials through several vectors, including token and key extraction, cloud shell persistence abuse, and exposure through misconfigurations. For token and key extraction, threat actors with access to Entra ID tokens may reuse refresh tokens to obtain new access tokens, or invoke privileged management APIs (for example, *listKeys*) to extract primary and secondary storage account keys. These keys may grant full data-plane access and bypass identity-based controls. For cloud shell persistence abuse, because Azure Cloud Shell stores session data within a hidden blob container within the user’s storage account, threat actors with access may retrieve cached credentials, command history, or configuration files containing sensitive information. Finally, for exposure through misconfiguration, if secure transfer is not enforced or network access controls are overly permissive, shared keys or SAS tokens may be exposed in transit or through public endpoints. This includes keys and tokens found in exposed or compromised endpoints or code-repositories. These credentials can then possibly be reused by threat actors to access or exfiltrate data.\n\n### Discovery\n\nAfter gaining a foothold in Azure, threat actors might map Blob Storage to locate valuable data and understand defensive settings. To uncover blob containers unintentionally exposed publicly, they could enumerate the broader cloud estate—querying subscriptions, resource groups, and storage account inventories. After identifying accounts, threat actors could probe deeper: listing containers and blobs, inspecting metadata, and retrieving configuration details such as firewall rules, logging targets, immutability policies, and backup schedules. This would enable them to identify where sensitive data resides and assess which controls can be bypassed or disabled to facilitate collection, exfiltration, or destruction.\n\n### Lateral movement\n\nWhen a new blob is added to a container, Azure can trigger [Azure Functions](https://learn.microsoft.com/azure/azure-functions/functions-overview), [Logic Apps](https://learn.microsoft.com/azure/logic-apps/logic-apps-overview), or other [workflows](https://learn.microsoft.com/azure/architecture/web-apps/serverless/architectures/code). If a threat actor controls the source container and an Event Grid subscription is configured, they may upload specially crafted files that trigger downstream compute resources running under managed identities, which may have elevated permissions to move laterally into other services.\n\nIf Azure Functions store their code in Azure Storage and threat actors gain write access, they may attempt to replace the code with malicious files. When the function is triggered by a blob event, HTTP request or timer, it could run malicious code under the function’s identity, potentially granting access to other resources.\n\nThreat actors may also target automated data pipelines or third-party integrations that trust blob-based inputs. Enterprises often use [Azure Data Factory and Azure Synapse Analytics](https://learn.microsoft.com/azure/data-factory/connector-azure-blob-storage?tabs=data-factory#create-an-azure-blob-storage-linked-service-using-ui) to copy and transform data from Azure Blob Storage. These pipelines typically authenticate to Blob using managed identities, service principals, SAS tokens, or account keys, and may connect over managed private endpoints. If an attacker can modify data in a source container, they may influence downstream processing or gain access to services that trust the pipeline’s identity, enabling further lateral movement.\n\n### Collection\n\nIf blob containers are misconfigured, threat actors may be able to list and download large volumes of data directly from storage. If access is obtained, they may copy or export sensitive files into a staging container they control, using Storage operations like *StartCopy*, *SyncCopy,* or *CopyBlob* through AzCopy or the Azure Storage REST API to stay within Azure and evade detection. They may compress or encrypt the data cache internally as well before attempting to exfiltrate it.\n\n### Command and control\n\nBlob Storage can be abused to distribute malware if the account or credentials are compromised. Threat actors may try to use Blob Storage as a covert beacon channel, where malware running on compromised hosts periodically polls for new blobs or [metadata updates](https://learn.microsoft.com/rest/api/storageservices/setting-and-retrieving-properties-and-metadata-for-blob-resources) containing command payloads. After infecting a target, malware might send *HEAD* or *GET* requests to the Azure blob’s REST API, [retrieving metadata](https://learn.microsoft.com/rest/api/storageservices/setting-and-retrieving-properties-and-metadata-for-blob-resources) without downloading the file content. If malware parses these headers as communication channels, it may send exfiltrated data back by writing separate metadata updates. Threat actors could embed new commands within metadata fields, meaning the blob’s content remains unchanged while the metadata plane acts as a persistent, stealthy command-and-control (C2) server.\n\nAdditionally, threat actors may attempt to exploit [object replication](https://learn.microsoft.com/azure/storage/blobs/object-replication-overview) to propagate payloads across environments. If a replication policy is successfully configured, any new blobs added to a compromised source container are automatically copied to a trusted destination container—turning it into a distribution hub and enabling supply chain–style attacks.\n\n### Exfiltration\n\nIf threat actors gain access to the environment, they might [leverage](https://www.bleepingcomputer.com/news/security/ransomware-gangs-now-abuse-microsoft-azure-tool-for-data-theft/) Azure-native tools like Azure Storage Explorer or AzCopy to exfiltrate data at scale—exploiting Azure’s high bandwidth and trusted domains to evade detection.\n\nFor instance, they could enable [static website hosting](https://learn.microsoft.com/azure/storage/blobs/storage-blob-static-website) and copy sensitive blobs into the publicly accessible *$web* container. Disabling anonymous access on the storage account-level offers no protection here, because the *$web* container [always remains publicly accessible](https://learn.microsoft.com/azure/storage/blobs/anonymous-read-access-prevent?tabs=portal). In another scenario, threat actors could exfiltrate data into a separate Azure subscription they control, using Microsoft’s internal network as a covert transport layer to bypass controls.\n\nThreat actors could also embed exfiltration logic within Azure Functions, Logic Apps, or [Automation](https://learn.microsoft.com/azure/automation/automation-services) runbooks, disguising them as legitimate [maintenance tasks](https://learn.microsoft.com/azure/logic-apps/create-automation-tasks-azure-resources) and throttling transfers to stay below volume or rate thresholds.\n\nThird-party integrations can also lead to indirect exposure if the integrated products are compromised. For example, in 2023, defenders whose environments had [MOVEit Transfer](https://www.progress.com/moveit) application connected to Blob Storage for file transfers or archiving partially contained a zero-day vulnerability, which was later attributed in a [tweet](https://x.com/MsftSecIntel/status/1665537730946670595) by Microsoft to Lace Tempest (known for ransomware operations and running the Clop extortion site).\n\n### Impact\n\nIf threat actors obtain high privilege roles, storage account keys, or broadly scoped SAS tokens, they can cause extensive damage—for example, issuing mass *DeleteBlob* or *DeleteContainer* operations, overwriting objects including with empty content, or re-encrypting data by reuploading modified content or writing new content to blobs. With the necessary privileges, threat actors can also modify file contents or metadata, change access tiers, and remove legal holds. In many scenarios, simply reading or exfiltrating data can result in long-term impact, even without immediate disruption—such as in cases of espionage.\n\n## Recommendations\n\nMicrosoft recommends the following mitigations to reduce the impact of this threat.\n\n[**Apply zero trust principles to Azure Storage**](https://learn.microsoft.com/security/zero-trust/azure-infrastructure-storage).\n\nBusiness asset security depends on the integrity of the privileged accounts that administer your IT systems. Refer to our [FAQ for answers on securing privileged access](https://learn.microsoft.com/entra/identity/role-based-access-control/security-planning#faq-answers-for-securing-privileged-access). Learn to enable the [Azure identity management and access control security best practices](https://learn.microsoft.com/azure/security/fundamentals/identity-management-best-practices), such as ensuring separate user accounts and mail forwarding for Global Administrator accounts. Follow [best practices for using Microsoft Entra role-based access control](https://learn.microsoft.com/entra/identity/role-based-access-control/best-practices).\n\n**Implement our** [**security recommendations for Blob Storage**](https://learn.microsoft.com/azure/storage/blobs/security-recommendations).\n\n- [Data protection](https://learn.microsoft.com/azure/storage/blobs/security-recommendations#data-protection)\n- [Identity and access management](https://learn.microsoft.com/azure/storage/blobs/security-recommendations#identity-and-access-management)\n- [Networking](https://learn.microsoft.com/azure/storage/blobs/security-recommendations#networking)\n- [Logging and monitoring](https://learn.microsoft.com/azure/storage/blobs/security-recommendations#networking)\n\n**Monitor the [Azure security baseline for Storage and its recommendations using Defender for Cloud](https://learn.microsoft.com/azure/storage/blobs/security-recommendations#loggingmonitoring).**\n\nMicrosoft Defender for Cloud periodically analyzes the security state of your Azure resources to identify potential security vulnerabilities and then provides security recommendations on how to address them. For more information, see [Review your security recommendations](https://learn.microsoft.com/azure/defender-for-cloud/review-security-recommendations).\n\n**Enable** [**Microsoft Defender for Storage**](https://learn.microsoft.com/azure/defender-for-cloud/tutorial-enable-storage-plan).\n\n[Defender for Storage](https://learn.microsoft.com/azure/defender-for-cloud/defender-for-storage-introduction) **** provides an additional layer of security intelligence that detects unusual and potentially harmful attempts to access or exploit storage accounts. Its alerts detect and prevent top cloud storage threats, including sensitive data exfiltration, data corruption, and malicious file uploads. For more information, see [Understand security threats and alerts in Microsoft Defender for Storage](https://learn.microsoft.com/azure/defender-for-cloud/defender-for-storage-threats-alerts).\n\nYou don’t need to enable diagnostic logs for analysis. **** Defender for Storage also detects suspicious activities from entities without identities that access your data using misconfigured and overly permissive SAS. These SAS might be leaked or compromised.\n\nSensitive data threat detection considers the sensitivity of the data at risk, quickly identifying and addressing the most significant risks. It also detects exposure events and suspicious activities on resources containing sensitive data. Learn more about [sensitive data threat detection](https://learn.microsoft.com/azure/defender-for-cloud/defender-for-storage-data-sensitivity).\n\nEnable Defender for Storage via [built-in policy](https://learn.microsoft.com/azure/defender-for-cloud/defender-for-storage-policy-enablement). Monitor [compliance states](https://learn.microsoft.com/azure/governance/policy/concepts/compliance-states) to detect if an attacker attempts to tamper with Defender for Storage to evade defenses, and [automatically respond](https://learn.microsoft.com/azure/governance/policy/concepts/event-overview?tabs=event-grid-event-schema) with alerts and recovery tasks.\n\n- **Enable** [malware scanning](https://learn.microsoft.com/azure/defender-for-cloud/introduction-malware-scanning)**.**\n\nMalware scanning in Defender for Storage detects in near real-time and mitigates a wide variety of malware threats either by scanning blobs [automatically](https://learn.microsoft.com/azure/defender-for-cloud/on-upload-malware-scanning) when blobs are being frequently uploaded or modified, or [on-demand](https://learn.microsoft.com/azure/defender-for-cloud/on-demand-malware-scanning) for proactive security, incident response, integrating partner data, and securing data pipelines and machine learning datasets.\n\nYou can store scan results using [index tags](https://learn.microsoft.com/azure/defender-for-cloud/introduction-malware-scanning#scan-results), which can be used by applications to automate workflows. Microsoft Defender for Cloud also generates relevant [security alerts in the portal](https://learn.microsoft.com/azure/defender-for-cloud/introduction-malware-scanning#defender-for-cloud-security-alerts), so you can configure automations or export them to Microsoft Sentinel or another SIEM. You can also send results to an [Event Grid](https://learn.microsoft.com/azure/defender-for-cloud/introduction-malware-scanning#event-grid-event) for automating response and create an audit trail with [Log Analytics](https://learn.microsoft.com/azure/defender-for-cloud/introduction-malware-scanning#logs-analytics).\n\nScanning supports [automated remediation](https://learn.microsoft.com/azure/defender-for-cloud/introduction-malware-scanning#malware-remediation-automation) through built-in soft deletion of malicious blobs discovered during scanning, blocking access, quarantining and forwarding clean files.\n\n**Enable** [**Defender Cloud Security Posture Management (CSPM)**](https://learn.microsoft.com/azure/defender-for-cloud/tutorial-enable-cspm-plan)**.**\n\nEnabling the CSPM plan extends CSPM capabilities that are automatically enabled as part of Defender for Cloud to offer extra protections for your environment such as cloud security explorer, attack path analysis, and agentless scanning for machines.\n\n- Use [sensitive data discovery](https://learn.microsoft.com/azure/defender-for-cloud/tutorial-enable-cspm-plan#enable-the-components-of-the-defender-cspm-plan).\n\nThe Sensitive data discovery component of CSPM identifies sensitive resources and their related risks, then helps prioritize and remediate those risks using the Microsoft Purview classification engine.\n\n**Use the** [**cloud security checklist**](https://learn.microsoft.com/azure/cloud-adoption-framework/secure/overview#step-1-establish-essential-security-practices) **as a structured approach for securing your Azure cloud estate.**\n\nThis checklist provides security guidance for those managing the technology infrastructure that supports all the workload development and operations hosted on Azure. To help ensure your workloads are secure and aligned with the Zero Trust model, use the [design review checklist for security](https://learn.microsoft.com/azure/well-architected/security/checklist). We also provide complementary guidance on applying [security practices](https://www.microsoft.com/securityengineering/sdl/practices) and DevSecOps controls in a security development lifecycle.\n\n**Enable** [**threat protection for AI services**](https://learn.microsoft.com/azure/defender-for-cloud/ai-onboarding)**.**\n\nBlob Storage is [often used](https://learn.microsoft.com/azure/machine-learning/tutorial-explore-data?view=azureml-api-2) to store training datasets for [Azure Machine Learning](https://learn.microsoft.com/azure/machine-learning/overview-what-is-azure-machine-learning?view=azureml-api-2). Because [data poisoning](https://learn.microsoft.com/security/engineering/threat-modeling-aiml) is among the [most severe machine learning threats](https://learn.microsoft.com/security/engineering/failure-modes-in-machine-learning), it is critical to [scan uploads](https://learn.microsoft.com/azure/defender-for-cloud/on-upload-malware-scanning) before they ever enter your pipeline to prevent targeted poisoning attacks.\n\n## Microsoft Defender XDR detections\n\n### Microsoft Defender for Cloud\n\nWhen Defender for Storage is enabled, the following alerts in Defender for Cloud may indicate Azure Blob Storage threat activity. Note that other alerts apply to Azure Files.\n\nSome of these alerts will not work if sensitive data threat detection is disabled. Some alerts may be relevant to secondary stages of the attack chain or only be an indication of a penetration test in your organization.\n\n##### Reconnaissance\n\n- [Publicly accessible storage containers successfully discovered](https://learn.microsoft.com/azure/defender-for-cloud/alerts-azure-storage#publicly-accessible-storage-containers-successfully-discovered)\n- [Publicly accessible storage containers unsuccessfully scanned](https://learn.microsoft.com/azure/defender-for-cloud/alerts-azure-storage#publicly-accessible-storage-containers-unsuccessfully-scanned)\n- [Access from a known suspicious IP address to a sensitive blob container](https://learn.microsoft.com/azure/defender-for-cloud/alerts-azure-storage#access-from-a-known-suspicious-ip-address-to-a-sensitive-blob-container)\n- [Access from a Tor exit node to a sensitive blob container](https://learn.microsoft.com/azure/defender-for-cloud/alerts-azure-storage#access-from-a-tor-exit-node-to-a-sensitive-blob-container)\n- [Access from a suspicious IP address](https://learn.microsoft.com/azure/defender-for-cloud/alerts-azure-storage#access-from-a-suspicious-ip-address)\n- [Unusual data exploration in a storage account](https://learn.microsoft.com/azure/defender-for-cloud/alerts-azure-storage#unusual-data-exploration-in-a-storage-account)\n\n##### Resource Development\n\n- [Phishing content hosted on a storage account](https://learn.microsoft.com/azure/defender-for-cloud/alerts-azure-storage#phishing-content-hosted-on-a-storage-account)\n- [Suspicious external access to an Azure storage account with overly permissive SAS token](https://learn.microsoft.com/azure/defender-for-cloud/alerts-azure-storage#suspicious-external-access-to-an-azure-storage-account-with-overly-permissive-sas-token)\n- [Suspicious external operation to an Azure storage account with overly permissive SAS token](https://learn.microsoft.com/azure/defender-for-cloud/alerts-azure-storage#suspicious-external-operation-to-an-azure-storage-account-with-overly-permissive-sas-token)\n- [Unusual SAS token was used to access an Azure storage account from a public IP address](https://learn.microsoft.com/azure/defender-for-cloud/alerts-azure-storage#unusual-sas-token-was-used-to-access-an-azure-storage-account-from-a-public-ip-address)\n\n##### Initial Access\n\n- [Access from a known suspicious application to a sensitive blob container](https://learn.microsoft.com/azure/defender-for-cloud/alerts-azure-storage#access-from-a-known-suspicious-application-to-a-sensitive-blob-container)\n- [Access from a suspicious application](https://learn.microsoft.com/azure/defender-for-cloud/alerts-azure-storage#access-from-a-suspicious-application)\n- [Access from an unusual location to a sensitive blob container](https://learn.microsoft.com/azure/defender-for-cloud/alerts-azure-storage#access-from-an-unusual-location-to-a-sensitive-blob-container)\n- [Access from an unusual location to a storage account](https://learn.microsoft.com/azure/defender-for-cloud/alerts-azure-storage#access-from-an-unusual-location-to-a-storage-account)\n- [Authenticated access from a Tor exit node](https://learn.microsoft.com/azure/defender-for-cloud/alerts-azure-storage#authenticated-access-from-a-tor-exit-node)\n- [Unusual unauthenticated access to a storage container](https://learn.microsoft.com/azure/defender-for-cloud/alerts-azure-storage#unusual-unauthenticated-access-to-a-storage-container)\n- [Unusual unauthenticated public access to a sensitive blob container](https://learn.microsoft.com/azure/defender-for-cloud/alerts-azure-storage#unusual-unauthenticated-public-access-to-a-sensitive-blob-container)\n\n##### Discovery\n\n- [Unusual access inspection in a storage account](https://learn.microsoft.com/azure/defender-for-cloud/alerts-azure-storage#unusual-access-inspection-in-a-storage-account)\n\n##### Lateral Movement\n\n- [Unusual application accessed a storage account](https://learn.microsoft.com/azure/defender-for-cloud/alerts-azure-storage#unusual-application-accessed-a-storage-account)\n- [Malicious blob was downloaded from a storage account](https://learn.microsoft.com/azure/defender-for-cloud/alerts-azure-storage#malicious-blob-was-downloaded-from-a-storage-account) (with malware scanning add-on enabled)\n\n##### Collection\n\n- [The access level of a potentially sensitive storage blob container was changed to allow unauthenticated public access](https://learn.microsoft.com/azure/defender-for-cloud/alerts-azure-storage#the-access-level-of-a-potentially-sensitive-storage-blob-container-was-changed-to-allow-unauthenticated-public-access)\n- [The access level of a sensitive storage blob container was changed to allow unauthenticated public access](https://learn.microsoft.com/azure/defender-for-cloud/alerts-azure-storage#the-access-level-of-a-sensitive-storage-blob-container-was-changed-to-allow-unauthenticated-public-access)\n\n##### Command and control\n\n- [Potential malware uploaded to a storage account](https://learn.microsoft.com/azure/defender-for-cloud/alerts-azure-storage#potential-malware-uploaded-to-a-storage-account)\n- [Malicious file uploaded to storage account](https://learn.microsoft.com/azure/defender-for-cloud/alerts-azure-storage#malicious-file-uploaded-to-storage-account) (with malware scanning add-on enabled; this alert may be an indication that a threat actor intentionally uploaded malware or that a legitimate user unintentionally uploaded a malicious file)\n\n##### Exfiltration\n\n- [Unusual amount of data extracted from a sensitive blob container](https://learn.microsoft.com/azure/defender-for-cloud/alerts-azure-storage#unusual-amount-of-data-extracted-from-a-sensitive-blob-container)\n- [Unusual amount of data extracted from a storage account](https://learn.microsoft.com/azure/defender-for-cloud/alerts-azure-storage#unusual-amount-of-data-extracted-from-a-storage-account)\n- [Unusual number of blobs extracted from a sensitive blob container](https://learn.microsoft.com/azure/defender-for-cloud/alerts-azure-storage#unusual-number-of-blobs-extracted-from-a-sensitive-blob-container)\n\n##### Impact\n\n- [Unusual deletion in a storage account](https://learn.microsoft.com/azure/defender-for-cloud/alerts-azure-storage#unusual-deletion-in-a-storage-account)\n\n## Threat intelligence reports\n\nMicrosoft customers can use the following reports in Microsoft products to get the most up-to-date information about the threat actor, malicious activity, and techniques discussed in this blog. These reports provide the intelligence, protection information, and recommended actions to prevent, mitigate, or respond to associated threats found in customer environments.\n\n### Microsoft Defender Threat Intelligence\n\n- [Threats targeting or leveraging Azure Blob Storage](https://security.microsoft.com/threatanalytics3/8d8a9fa0-4408-47be-8a07-7ce3d21eb827/analystreport)\n\n## Microsoft Security Copilot\n\nSecurity Copilot customers can use the standalone experience to [create their own prompts](https://learn.microsoft.com/copilot/security/prompting-security-copilot#create-your-own-prompts) or run the following [pre-built promptbooks](https://learn.microsoft.com/copilot/security/using-promptbooks) to automate incident response or investigation tasks related to this threat:\n\n- Incident investigation\n- Microsoft User analysis\n- Threat actor profile\n- Threat Intelligence 360 report based on MDTI article\n- Vulnerability impact assessment\n\nNote that some promptbooks require access to Microsoft plugins such as for either Microsoft Defender XDR or Microsoft Sentinel.\n\n## MITRE ATT&CK Techniques observed\n\nThis threat exhibits the use of the following attack techniques. For standard industry documentation about these techniques, refer to the [MITRE ATT&CK framework](https://attack.mitre.org/).\n\n### Reconnaissance\n\n[T1593.002 Search Open Websites/Domains: Search Engines](https://attack.mitre.org/techniques/T1593/002/) | Threat actors may use search engines and advanced querying (for example, *site:\\*.blob.core.windows.net*) to discover exposed Blob Storage accounts.\n\n[T1594 Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594/) | Threat actors might look for storage accounts of a victim enterprise by searching its websites. Victim-owned website pages might be stored on a storage account or contain links to retrieve data stored in a storage account. The links contain the URL of the storage and provide an entry point into the account.\n\n[T1595.003 Active Scanning: Wordlist Scanning](https://attack.mitre.org/techniques/T1595/003/) | Threat actors might attempt to locate publicly accessible cloud storage accounts or containers by iteratively trying different permutations or using target-specific wordlists to discover storage endpoints that can be probed for vulnerabilities or misconfigurations.\n\n[T1596 Search Open Technical Databases](https://attack.mitre.org/techniques/T1596/) | Threat actors might search public databases for publicly available storage accounts that can be used during targeting.\n\n[T1596.001 Search Open Technical Databases: DNS/Passive DNS](https://attack.mitre.org/techniques/T1596/001/) | Threat actors might search for DNS data for valid storage account names that could become potential targets by querying nameservers using brute-force techniques to enumerate existing storage accounts in the wild or searching through centralized repositories of DNS query responses.\n\n### Resource Development\n\n[T1583.004 Acquire Infrastructure: Server](https://attack.mitre.org/techniques/T1583/004/) | If threat actors exploit weak or misconfigured identity controls, Blob Storage could be misused as attacker-controlled infrastructure for hosting malicious payloads, phishing, or C2 scripts.\n\n### Initial Access\n\n[T1566.001 Phishing: Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001/) | Blob Storage could host malicious attachments for spear phishing if threat actors leverage compromised SAS tokens or misconfigured anonymous access.\n\n[T1566.002 Phishing: Spearphishing Link](https://attack.mitre.org/techniques/T1566/002/) | Blob Storage could be misused as a publicly accessible host for spear-phishing links if anonymous or misconfigured containers exist.\n\n[T1078.004 Valid Accounts: Cloud Accounts](https://attack.mitre.org/techniques/T1078/004/) | Threat actors could gain an account-like foothold in Blob Storage if they compromise SAS or storage account keys or successfully take control of a Microsoft Entra ID principal account that holds roles or permissions over Blob Storage.\n\n### Persistence\n\n[T1098.001 Account Manipulation: Additional Cloud Credentials](https://attack.mitre.org/techniques/T1098/001/) | To maintain access even if compromised credentials are revoked, threat actors may try to exploit Blob Storage’s Role-Based Access Control (RBAC) by modifying permissions on identity objects, like Microsoft Entra ID security principals. They may also create high-privilege SAS tokens with long expiry, modify container access levels to allow anonymous reads, or provision SFTP accounts that bypass key rotation.\n\n### Defense Evasion\n\n[T1562.011 Impair Defenses: Disable or Modify Tools](https://attack.mitre.org/techniques/T1562/001/) | Threat actors can try to disable, suppress, or modify Defender for Storage scanning features.\n\n[T1562.007 Impair Defenses: Disable or Modify Cloud Firewall](https://attack.mitre.org/techniques/T1562/007/) | Threat actors may try to disable, modify, or reconfigure Blob Storage’s firewall and virtual network rules—such as by granting exceptions for trusted services through managed identities, establishing private endpoints, or leveraging geo-replication—to mask access channels and maintain persistent, covert access even if primary credentials are revoked.\n\n### Credential Access\n\n[T1528 Steal Application Access Token](https://attack.mitre.org/techniques/T1528/) | Threat actors may compromise Blob Storage by stealing OAuth-based application access tokens (including refresh tokens) or by leveraging subscription-level privileges to query management APIs and extract primary and secondary storage account keys. While compromised tokens enable impersonation of legitimate users with constrained, renewable privileges, keys grant unrestricted data-plane access that bypasses identity-based controls. Possession of either credential type can lead to full access to blob containers, facilitating data compromise and lateral movement across the cloud environment.\n\n[T1003 OS Credential Dumping](https://attack.mitre.org/techniques/T1003/) | Threat actors might dump Cloud Shell profiles and session history—stored in blob containers of an Azure Storage account—to extract sensitive credentials such as OAuth tokens, API keys, or other authentication secrets. While these credentials differ from traditional OS password hashes, their extraction is analogous to conventional credential dumping because threat actors can use them to impersonate legitimate users and gain unauthorized, persistent access to Blob Storage, facilitating lateral movement and data compromise.\n\n[T1040 Network Sniffing](https://attack.mitre.org/techniques/T1040/) | Threat actors might passively intercept network traffic destined for Blob Storage when unencrypted protocols are allowed, exposing shared keys, SAS tokens, or API tokens that could then be used to gain unauthorized access to the blob data plane. By exploiting cloud-native traffic mirroring tools, a threat actor could intercept and analyze the network data flowing to and from the virtual machines interacting with Blob Storage.\n\n### Discovery\n\n[T1580 Cloud Infrastructure Discovery](https://attack.mitre.org/techniques/T1580/) | Blob Storage could be enumerated post-compromise to list subscriptions, resource groups, or container names that are not externally visible.\n\n[T1619 Cloud Storage Object Discovery](https://attack.mitre.org/techniques/T1619/) | Blob Storage could be enumerated post-compromise to find specific blob data and configuration details, such as by call listing APIs to inventory objects or use control-plane access to retrieve firewall rules, logging, and backup policies.\n\n### Lateral Movement\n\n[T1021.007 Remote Services: Cloud Services](https://attack.mitre.org/techniques/T1021/007/) | Threat actors might manipulate Blob Storage to trigger a compute service, such as Azure Functions, after placing a malicious blob in a monitored container. This automatic execution chain lets attackers pivot from the compromised container to the compute resource, potentially infiltrating additional components.\n\n### Collection\n\n[T1074.002 Data Staged: Remote Data Staging](https://attack.mitre.org/techniques/T1074/002/) | Blob Storage could be used as a “staging area” if permissions are overly broad.\n\n[T1530 Data from Cloud Storage Object](https://attack.mitre.org/techniques/T1530/) | Blob Storage could be abused to retrieve or copy data directly from containers if they are misconfigured, publicly accessible, or if keys or SAS tokens are obtained. This might include selectively downloading stored files.\n\n### Command and Control\n\n[T1105 Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105/) | Threat actors might upload and store malicious programs or scripts in Blob Storage after compromising the storage account or its credentials, leverage automatic synchronization to “fan out” malicious payloads across hosts that regularly pull from blob containers, and facilitate ongoing C2 to enable additional compromise and lateral movement. By merging malicious uploads with normal blob usage, threat actors could stealthily distribute harmful tools to multiple hosts simultaneously, reinforcing both C2 and lateral movement.\n\n### Exfiltration\n\n[T1567.002 Exfiltration Over Web Service: Exfiltration to Cloud Storage](https://attack.mitre.org/techniques/T1567/002/) | Blob Storage may facilitate data exfiltration if permissions are overly permissive or credentials (for example, account keys, SAS tokens) are compromised. Threat actors may abuse the “static website” feature to expose blob containers through public web endpoints or use tools like AzCopy to transfer stolen data.\n\n[T1030 Data Transfer Size Limits](https://attack.mitre.org/techniques/T1030/) | A threat actor might deliberately constrain the packet sizes of Blob Storage data to remain below established thresholds by transferring it in fixed-size chunks rather than as entire blobs.\n\n[T1020 Automated Exfiltration](https://attack.mitre.org/techniques/T1020/) | Threat actors might embed exfiltration routines in predefined automation processes in Blob Storage to evade detection.\n\n[T1537 Transfer Data to Cloud Account](https://attack.mitre.org/techniques/T1537/) | Threat actors might transfer Blob Storage data to another cloud account that is under their control by using internal APIs and network paths that evade detection mechanisms focused on external data transfers.\n\n### Impact\n\n[T1485 Data Destruction](https://attack.mitre.org/techniques/T1485/) | Blob Storage could be compromised or misused for data destruction, where a threat actor deletes or overwrites blob data for impact.\n\n[T1486 Data Encrypted for Impact](https://attack.mitre.org/techniques/T1486/) | Blob Storage could be targeted by ransomware if threat actors obtain privileged access or compromise keys.\n\n[T1565 Data Manipulation](https://attack.mitre.org/techniques/T1565/) | Threat actors might insert, delete, or modify Blob Storage data to compromise data integrity and influence outcomes by altering blob contents or metadata, disrupting business processes, distorting organizational insights, or concealing malicious activities.\n\n## References\n\n- [https://attack.mitre.org/](https://attack.mitre.org/)\n- [https://cyberdom.blog/azure-blob-storage-powershell-scanning-script/](https://cyberdom.blog/azure-blob-storage-powershell-scanning-script/)\n- [https://grayhatwarfare.medium.com/how-to-search-for-open-amazon-s3-buckets-and-their-contents-https-buckets-grayhatwarfare-com-577b7b437e01](https://grayhatwarfare.medium.com/how-to-search-for-open-amazon-s3-buckets-and-their-contents-https-buckets-grayhatwarfare-com-577b7b437e01)\n- [https://www.bleepingcomputer.com/news/security/ransomware-gangs-now-abuse-microsoft-azure-tool-for-data-theft/](https://www.bleepingcomputer.com/news/security/ransomware-gangs-now-abuse-microsoft-azure-tool-for-data-theft/)\n- [https://www.progress.com/moveit](https://www.progress.com/moveit)\n- [https://x.com/MsftSecIntel/status/1665537730946670595](https://x.com/MsftSecIntel/status/1665537730946670595)\n\n## Learn more\n\nFor the latest security research from the Microsoft Threat Intelligence community, check out the [Microsoft Threat Intelligence Blog](https://aka.ms/threatintelblog).\n\nTo get notified about new publications and to join discussions on social media, follow us on [LinkedIn](https://www.linkedin.com/showcase/microsoft-threat-intelligence), [X (formerly Twitter)](https://x.com/MsftSecIntel), and [Bluesky](https://bsky.app/profile/threatintel.microsoft.com).\n\nTo hear stories and insights from the Microsoft Threat Intelligence community about the ever-evolving threat landscape, listen to the [Microsoft Threat Intelligence podcast](https://thecyberwire.com/podcasts/microsoft-threat-intelligence).",
  "Title": "Inside the attack chain: Threat activity targeting Azure Blob Storage",
  "Link": "https://www.microsoft.com/en-us/security/blog/2025/10/20/inside-the-attack-chain-threat-activity-targeting-azure-blob-storage/",
  "Description": "Azure Blob Storage is a high-value target for threat actors due to its critical role in storing and managing massive amounts of unstructured data at scale across diverse workloads and is increasingly targeted through sophisticated attack chains that exploit misconfigurations, exposed credentials, and evolving cloud tactics.\n\nThe post [Inside the attack chain: Threat activity targeting Azure Blob Storage](https://www.microsoft.com/en-us/security/blog/2025/10/20/inside-the-attack-chain-threat-activity-targeting-azure-blob-storage/) appeared first on [Microsoft Security Blog](https://www.microsoft.com/en-us/security/blog).",
  "FeedUrl": "https://www.microsoft.com/en-us/security/blog/feed/",
  "Tags": [],
  "Author": "Microsoft Threat Intelligence",
  "FeedLevelAuthor": "Microsoft Security Blog",
  "PubDate": "2025-10-20T16:00:00+00:00",
  "FeedName": "Microsoft Security Blog",
  "OutputDir": "_news",
  "ProcessedDate": "2025-10-20 17:02:45"
}
