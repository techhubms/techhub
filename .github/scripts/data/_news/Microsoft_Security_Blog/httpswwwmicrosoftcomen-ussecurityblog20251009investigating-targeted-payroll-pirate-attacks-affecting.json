{
  "Tags": [],
  "Author": "Microsoft Threat Intelligence",
  "FeedLevelAuthor": "Microsoft Security Blog",
  "EnhancedContent": "Microsoft Threat Intelligence has observed a financially motivated threat actor that we track as Storm-2657 compromising employee accounts to gain unauthorized access to employee profiles and divert salary payments to attacker-controlled accounts. These types of attacks have been dubbed “payroll pirate” by the industry. Storm-2657 is actively targeting a range of US-based organizations, particularly employees in sectors like higher education, to gain access to third-party human resources (HR) software as a service (SaaS) platforms like Workday.\n\nIn a campaign observed in the first half of 2025, we identified the actor specifically targeting Workday profiles. However, it’s important to note that any SaaS systems storing HR or payment and bank account information could be easily targeted with the same technique. These attacks don’t represent any vulnerability in the Workday platform or products, but rather financially motivated threat actors using sophisticated social engineering tactics and taking advantage of the complete lack of multifactor authentication (MFA) or lack of phishing-resistant MFA to compromise accounts. Workday has published guidance for their customers in their community, and we thank Workday for their partnership and support in helping to raise awareness on how to mitigate this threat.\n\nMicrosoft has identified and reached out to some of the affected customers to share tactics, techniques, and procedures (TTPs) and assist with mitigation efforts. In this blog, we present our analysis of Storm-2657’s recent campaign and the TTPs employed in attacks. We offer comprehensive guidance for investigation and remediation, including implementing phishing-resistant MFA to help block these attacks and protect user accounts. Additionally, we provide comprehensive detections and hunting queries to enable organizations to defend against this attack and disrupt threat actor activity.\n\n## Analysis of the campaign\n\nIn the observed campaign, the threat actor gained initial access through phishing emails crafted to steal MFA codes using adversary-in-the-middle (AITM) phishing links. After obtaining MFA codes, the threat actor was able to gain unauthorized access to the victims’ Exchange Online and later hijacked and modified their Workday profiles.\n\nAfter gaining access to compromised employee accounts, the threat actor created inbox rules to delete incoming warning notification emails from Workday, hiding the actor’s changes to the HR profiles. Storm-2657 then stealthily moved on to modify the employee’s salary payment configuration in their HR profile, thereby redirecting future salary payments to accounts under the actor’s control, causing financial harm to their victims. While the following example illustrates the attack flow as observed in Workday environments, it’s important to note that similar techniques could be leveraged against any payroll provider or SaaS platform.\n\n![Diagram depicting Storm-2657 phishing a Entra user account for MFA Duo to access the employee mailbox and HR SaaS system. In the mailbox, the attacker accesses various folders and messages in addition to creating an inbox rule to delete emails from Workday. In the HR system, the attacker accesses the employee's Workday through SSO before updating the employee's MFA settings and payroll information to redirect payments to the attacker-controlled bank account. ](https://www.microsoft.com/en-us/security/blog/wp-content/uploads/2025/10/Fig1-attack-chain.webp)*Figure 1. Attack flow of threat actor activity in a real incident*\n\n### Initial access\n\nThe threat actor used realistic phishing emails, targeting accounts at multiple universities, to harvest credentials. Since March 2025, we’ve observed 11 successfully compromised accounts at three universities that were used to send phishing emails to nearly 6,000 email accounts across 25 universities.\n\nSome phishing emails contained Google Docs links, making detection challenging, as these are common in academic environments. In multiple instances, compromised accounts did not have MFA enabled. In other cases, users were tricked into disclosing MFA codes via AiTM phishing links distributed through email. Following the compromise of email accounts and the payroll modifications in Workday, the threat actor leveraged newly accessed accounts to distribute further phishing emails, both within the organization and externally to other universities.\n\nThe threat actor used several themes in their phishing emails. One common theme involved messages about illnesses or outbreaks on campus, suggesting that recipients might have been exposed. These emails included a link to a Google Docs page that then redirected to an attacker-controlled domain.\n\nSome examples of the email subject lines are:\n\n- COVID-Like Case Reported — Check Your Contact Status\n- Confirmed Case of Communicable Illness\n- Confirmed Illness\n\nIn one instance, a phishing email was sent to 500 individuals within a single organization, encouraging targets to check their illness exposure status. Approximately 10% of recipients reported the email as a suspected phishing attempt.\n\n![](https://www.microsoft.com/en-us/security/blog/wp-content/uploads/2025/10/Figure-2.-Sample-of-a-phishing-email-sent-by-the-threat-actor-with-illness-exposure-related-theme.webp)*Figure 2. Sample of a phishing email sent by the threat actor with illness exposure related theme*\n\nThe second theme involved reports of misconduct or actions by individuals within the faculty, with the goal of tricking recipients into checking the link to determine if they are mentioned in the report.\n\nSome examples of the subject lines are:\n\n- Faculty Compliance Notice – Classroom Misconduct Report\n- Review Acknowledgment Requested – Faculty Misconduct Mention\n\nThe most recently identified theme involved phishing emails impersonating a legitimate university or an entity associated with a university. To make their messages appear convincing, Storm-2657 tailored the content based on the recipient’s institution. Examples included messages that appear to be official communications from the university president, information about compensation and benefits, or documents shared by HR with recipients. Most of the time the subject line contained either the university name or the university’s president name, further enhancing the email’s legitimacy and appeal to the intended target.\n\nSome examples of the subject lines are:\n\n- Please find the document forwarded by the HR Department for your review\n- [UNIVERSITY NAME] 2025 Compensation and Benefits Update\n- A document authored by [UNIVERSITY PRESIDENT NAME] has been shared for your examination.\n\n![Screenshot of a sample phishing email claiming to be about 2025 compensation and benefits with a link for the recipient to access their benefits. ](https://www.microsoft.com/en-us/security/blog/wp-content/uploads/2025/10/image-4.webp)*Figure 3. Sample of a phishing email sent by the threat actor with HR related theme*\n\n### Defense evasion\n\nFollowing account compromise, the threat actor created a generic inbox rule to hide or delete any incoming warning notification emails from the organization’s Workday email service. This rule ensured that the victim would not see the notification emails from Workday about the payroll changes made by the threat actor, thereby minimizing the likelihood of detection by the victim. In some cases, the threat actor might have attempted to stay under the radar and hide their traces from potential reviews by creating rule names solely using special characters or non-alphabetic symbols like “….” or “\\’\\’\\’\\’”.\n\n![Screenshot of an example inbox rule creation to delete all incoming emails from \"@myworkday.com\"](https://www.microsoft.com/en-us/security/blog/wp-content/uploads/2025/10/image-8.webp)*Figure 4. An example of inbox rule creation to delete all incoming emails from Workday portal captured through Microsoft Defender for Cloud Apps*\n\n### Persistence\n\nIn observed cases, the threat actor established persistence by enrolling their own phone numbers as MFA devices for victim accounts, either through Workday profiles or Duo MFA settings. By doing so, they bypassed the need for further MFA approval from the legitimate user, enabling continued access without detection.\n\n### Impact\n\nThe threat actor subsequently accessed Workday through single sign-on (SSO) and changed the victim’s payroll/bank account information.\n\nWith the [Workday connector](https://learn.microsoft.com/defender-cloud-apps/protect-workday) enabled in Microsoft Defender for Cloud Apps, analysts can efficiently investigate and identify attack traces by examining Workday logs and Defender-recorded actions. There are multiple indicators available to help pinpoint these changes. For example, one indicator from the Workday logs generated by such threat actor changes is an event called “Change My Account” or “Manage Payment Elections”, depending on the type of modifications performed in the Workday application audit logs:\n\n![](https://www.microsoft.com/en-us/security/blog/wp-content/uploads/2025/10/Figure-5.-Example-of-payment-modification-audit-log-as-captured-through-Microsoft-Defender-for-Cloud-Apps.webp)*Figure 5. Example of payment modification audit log as captured through Microsoft Defender for Cloud Apps*\n\nThese payroll modifications are frequently accompanied by notification emails informing users that payroll or bank details have been changed or updated. As previously discussed, threat actors might attempt to eliminate these messages either through manual deletion or by establishing inbox rules. These deletions can be identified by monitoring Exchange Online events such as *SoftDelete*, *HardDelete*, and *MoveToDeletedItems*. The subjects of these emails typically contain the following terms:\n\n- “Payment Elections”\n- “Payment Election”\n- “Direct Deposit”\n\nMicrosoft Defender for Cloud Apps correlates signals from both Microsoft Exchange Online (first-party SaaS application) and Workday (third-party SaaS application), enabling thorough detection of suspicious activities that span multiple systems, as seen in the image below. Only by correlating first party and third-party signals is it possible to detect this activity spawning across multiple systems.\n\n![Screenshot of an audit log depicting an inbox rule creation in Exchange Online on August 14, 2025, followed by payroll account modifications in Workday on the same day.](https://www.microsoft.com/en-us/security/blog/wp-content/uploads/2025/10/image-11.webp)*Figure 6. Example of audit logs captured through Microsoft Defender for Cloud Apps showcasing an inbox rule creation in Microsoft Exchange Online followed by payroll account modification in Workday*\n\n## Mitigation and protection guidance\n\nMitigating threats from actors like Storm-2657 begins with securing user identity by eliminating traditional credentials and adopting passwordless, phishing-resistant MFA methods such as FIDO2 security keys, Windows Hello for Business, and Microsoft Authenticator passkeys.\n\nMicrosoft recommends enforcing phishing-resistant MFA for privileged roles in Microsoft Entra ID to significantly reduce the risk of account compromise. Learn how to [require phishing-resistant MFA for admin roles](https://learn.microsoft.com/entra/identity/conditional-access/policy-admin-phish-resistant-mfa) and [plan a passwordless deployment](https://learn.microsoft.com/entra/identity/authentication/how-to-deploy-phishing-resistant-passwordless-authentication).\n\nPasswordless authentication improves security as well as enhances user experience and reduces IT overhead. Explore Microsoft’s [overview of passwordless authentication](https://www.microsoft.com/security/business/solutions/passwordless-authentication) and [authentication strength guidance](https://learn.microsoft.com/entra/identity/authentication/concept-authentication-strengths) to understand how to align your organization’s policies with best practices. For broader strategies on defending against identity-based attacks, refer to Microsoft’s blog on [evolving identity attack techniques](https://www.microsoft.com/security/blog/2025/05/29/defending-against-evolving-identity-attack-techniques/).\n\nIf Microsoft Defender alerts indicate suspicious activity or confirmed compromised account or a system, it’s essential to act quickly and thoroughly. Below are recommended remediation steps for each affected identity:\n\n1. **Reset credentials** – Immediately reset the account’s password and revoke any active sessions or tokens. This ensures that any stolen credentials can no longer be used.\n2. **Re-register or remove MFA devices** – Review users MFA devices, specifically those recently added or updated.\n3. **Revert unauthorized payroll or financial changes** – If the attacker modified payroll or financial configurations, such as direct deposit details, revert them to their original state and notify the appropriate internal teams.\n4. **Remove malicious inbox rules** – Attackers often create inbox rules to hide their activity or forward sensitive data. Review and delete any suspicious or unauthorized rules.\n5. **Verify MFA reconfiguration** – Confirm that the user has successfully reconfigured MFA and that the new setup uses secure, phishing-resistant methods.\n\n## Microsoft Defender XDR detections\n\nMicrosoft Defender XDR coordinates detection, prevention, investigation, and response across endpoints, identities, email, apps to provide integrated protection against attacks like the threat discussed in this blog.\n\nCustomers with provisioned access can also use [Microsoft Security Copilot in Microsoft Defender](https://learn.microsoft.com/defender-xdr/security-copilot-in-microsoft-365-defender) to investigate and respond to incidents, hunt for threats, and protect their organization with relevant threat intelligence.\n\n| **Tactic** | **Observed activity** | **Microsoft Defender coverage** | | --- | --- | --- | | Initial access | Threat actor gains access to account through phishing | **Microsoft Defender for Office 365** <br>– Email messages removed after delivery <br>– Email reported by user as malware or phish <br><br>**Microsoft Defender XDR** <br>– Compromised user account in a recognized attack pattern <br>– Anonymous IP address | | Defense Evasion | Threat actor creates an inbox rule to delete incoming emails from Workday | **Microsoft Defender for Cloud apps** <br>– Possible BEC-related inbox rule <br>– Suspicious inbox manipulation rule <br>– Suspicious Workday inbox rule creation followed by a Workday session <br>– Malicious inbox rule manipulation possibly related to BEC payroll fraud attempt | | Impact | Threat actor gains access to victim’s Workday profile and modifies payroll elections | **Microsoft Defender for Cloud apps** <br>– Suspicious payroll configuration user activity in Workday |\n\n## Hunting queries\n\n### Microsoft Defender XDR\n\nThe Microsoft Defender for Cloud Apps connector for Workday includes write events such as Workday account updates, payroll configuration changes, etc. These are available in the Defender XDR *CloudAppEvents* hunting tables for further investigation. Important events related to this attack include but are not limited:\n\n- Add iOS Device\n- Add Android Device\n- Change My Account\n- Manage Payment Elections\n\n[Install the Microsoft Defender for Cloud Apps connector for Workday](https://learn.microsoft.com/defender-cloud-apps/protect-workday) to take advantage of these logging, investigation, and detection capabilities.\n\n**Review inbox rules created to hide or delete incoming emails from Workday**\n\nResults of the following query may indicate an attacker is trying to delete evidence of Workday activity.\n\n```\n\nCloudAppEvents | where Timestamp >= ago(1d) | where Application == \"Microsoft Exchange Online\" and ActionType in (\"New-InboxRule\", \"Set-InboxRule\") | extend Parameters = RawEventData.Parameters // extract inbox rule parameters | where Parameters has \"From\" and Parameters has \"@myworkday.com\" // filter for inbox rule with From field and @MyWorkday.com in the parameters | where Parameters has \"DeleteMessage\" or Parameters has (\"MoveToFolder\") // email deletion or move to folder (hiding) | mv-apply Parameters on (where Parameters.Name == \"From\" | extend RuleFrom = tostring(Parameters.Value)) | mv-apply Parameters on (where Parameters.Name == \"Name\" | extend RuleName = tostring(Parameters.Value)) ```\n\n**Review updates to payment election or bank account information in Workday**\n\nThe following query surfaces changes to payment accounts in Workday.\n\n```\n\nCloudAppEvents | where Timestamp >= ago(1d) | where Application == \"Workday\" | where ActionType == \"Change My Account\" or ActionType == \"Manage Payment Elections\" | extend Descriptor = tostring(RawEventData.target.descriptor) ```\n\n**Review device additions in Workday**\n\nThe following query looks for recent device additions in Workday. If the device is unknown, it may indicate an attacker joined their own device for persistence and MFA evasion.\n\n```\n\nCloudAppEvents | where Timestamp >= ago(1d) | where Application == \"Workday\" | where ActionType has \"Add iOS Device\" or ActionType has \"Add Android Device\" | extend Descriptor = tostring(RawEventData.target.descriptor) // will contain information of the device ```\n\n**Hunt for bulk suspicious emails from *.edu* sender**\n\nThe following query identifies email from *.edu* senders sent to a high number of users.\n\n```\n\nEmailEvents | where Timestamp >= ago(7d) | where SenderFromDomain has \"edu\" or SenderMailFromDomain has \"edu\" | where EmailDirection == \"Inbound\" | summarize dcount(RecipientEmailAddress), dcount(InternetMessageId), make_set(InternetMessageId), dcount(Subject), dcount(NetworkMessageId), take_any(NetworkMessageId) by bin(Timestamp,1d), SenderFromAddress | where dcount_RecipientEmailAddress > 100 // number can be adjusted, usually the sender will send emails to around 100-600 recipients per day ```\n\n**Hunt for phishing URL from identified *.edu* phish sender**\n\nIf a suspicious *.edu* sender has been identified, use the following query to surface email events from this sender address.\n\n```\n\nEmailEvents | where Timestamp >= ago(1d) | where SenderFromAddress == \"\" | where EmailDirection == \"Inbound\" | project NetworkMessageId, Subject, InternetMessageId | join EmailUrlInfo on NetworkMessageId | where Timestamp >= ago(1d) | project Url, NetworkMessageId, Subject, InternetMessageId ```\n\n**Hunt for user clicks to suspicious URL from the identified *.edu* phish sender (previous query)**\n\nIf a suspicious *.edu* sender has been identified, use the below query to surface user clicks that may indicate a malicious link was accessed.\n\n```\n\nEmailEvents | where Timestamp >= ago(1d) | where SenderFromAddress == \"\" | where EmailDirection == \"Inbound\" | project NetworkMessageId, Subject, InternetMessageId | join UrlClickEvents on NetworkMessageId | where Timestamp >= ago(1d) | project AccountUpn, Subject, InternetMessageId, DetectionMethods, ThreatTypes, IsClickedThrough // these users very likely fall into the phishing attack ```\n\n### Microsoft Sentinel\n\n[Install the Workday connector for Microsoft Sentinel](https://azuremarketplace.microsoft.com/en-us/marketplace/apps/azuresentinel.azure-sentinel-solution-workday?tab=overview). Microsoft Sentinel has a range of detection and threat hunting content that customers can use to detect the post exploitation activity detailed in this blog.\n\nMicrosoft Sentinel customers can use the TI Mapping analytics (a series of analytics all prefixed with ‘TI map’) to automatically match the malicious domain indicators mentioned in this blog post with data in their workspace. If the TI Map analytics are not currently deployed, customers can install the Threat Intelligence solution from the [Microsoft Sentinel Content Hub](https://learn.microsoft.com/azure/sentinel/sentinel-solutions-deploy) to have the analytics rule deployed in their Sentinel workspace.\n\n**Malicious inbox rule**\n\nThe query includes filters specific to inbox rule creation, operations for messages with ‘DeleteMessage’, and suspicious keywords.\n\n```\n\nlet Keywords = dynamic([\"helpdesk\", \" alert\", \" suspicious\", \"fake\", \"malicious\", \"phishing\", \"spam\", \"do not click\", \"do not open\", \"hijacked\", \"Fatal\"]); OfficeActivity | where OfficeWorkload =~ \"Exchange\" | where Operation =~ \"New-InboxRule\" and (ResultStatus =~ \"True\" or ResultStatus =~ \"Succeeded\") | where Parameters has \"Deleted Items\" or Parameters has \"Junk Email\" or Parameters has \"DeleteMessage\" | extend Events=todynamic(Parameters) | parse Events with * \"SubjectContainsWords\" SubjectContainsWords '}'* | parse Events with * \"BodyContainsWords\" BodyContainsWords '}'* | parse Events with * \"SubjectOrBodyContainsWords\" SubjectOrBodyContainsWords '}'* | where SubjectContainsWords has_any (Keywords) or BodyContainsWords has_any (Keywords) or SubjectOrBodyContainsWords has_any (Keywords) | extend ClientIPAddress = case( ClientIP has \".\", tostring(split(ClientIP,\":\")[0]), ClientIP has \"[\", tostring(trim_start(@'[[]',tostring(split(ClientIP,\"]\")[0]))), ClientIP ) | extend Keyword = iff(isnotempty(SubjectContainsWords), SubjectContainsWords, (iff(isnotempty(BodyContainsWords),BodyContainsWords,SubjectOrBodyContainsWords ))) | extend RuleDetail = case(OfficeObjectId contains '/' , tostring(split(OfficeObjectId, '/')[-1]) , tostring(split(OfficeObjectId, '\\\\')[-1])) | summarize count(), StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated) by Operation, UserId, ClientIPAddress, ResultStatus, Keyword, OriginatingServer, OfficeObjectId, RuleDetail | extend AccountName = tostring(split(UserId, \"@\")[0]), AccountUPNSuffix = tostring(split(UserId, \"@\")[1]) | extend OriginatingServerName = tostring(split(OriginatingServer, \" \")[0]) ```\n\n**Risky sign-in with new MFA method**\n\nThis query identifies scenarios of risky sign-ins tied to new MFA methods being added.\n\n```\n\nlet mfaMethodAdded=CloudAppEvents | where ActionType =~ \"Update user.\" | where RawEventData has \"StrongAuthenticationPhoneAppDetail\" | where isnotempty(RawEventData.ObjectId) and isnotempty(RawEventData.Target[1].ID) | extend AccountUpn = tostring(RawEventData.ObjectId) | extend AccountObjectId = tostring(RawEventData.Target[1].ID) | project MfaAddedTimestamp=Timestamp,AccountUpn,AccountObjectId; let usersWithNewMFAMethod=mfaMethodAdded | distinct AccountObjectId; let hasusersWithNewMFAMethod = isnotempty(toscalar(usersWithNewMFAMethod)); let riskySignins=AADSignInEventsBeta | where hasusersWithNewMFAMethod | where AccountObjectId in (usersWithNewMFAMethod) | where RiskLevelDuringSignIn in (\"50\",\"100\") //Medium and High sign-in risk level. | where Application in (\"Office 365 Exchange Online\", \"OfficeHome\") | where isnotempty(SessionId) | project SignInTimestamp=Timestamp, Application, SessionId, AccountObjectId, IPAddress,RiskLevelDuringSignIn | summarize SignInTimestamp=argmin(SignInTimestamp,*) by Application,SessionId, AccountObjectId, IPAddress,RiskLevelDuringSignIn; mfaMethodAdded | join riskySignins on AccountObjectId | where MfaAddedTimestamp - SignInTimestamp ```\n\n## Microsoft Security Copilot\n\nSecurity Copilot customers can use the standalone experience to [create their own prompts](https://learn.microsoft.com/copilot/security/prompting-security-copilot#create-your-own-prompts) or run the following [prebuilt promptbooks](https://learn.microsoft.com/copilot/security/using-promptbooks) to automate incident response or investigation tasks related to this threat:\n\n- Incident investigation\n- Microsoft User analysis\n- Threat actor profile\n- Threat Intelligence 360 report based on MDTI article\n- Vulnerability impact assessment\n\nNote that some promptbooks require access to plugins for Microsoft products such as Microsoft Defender XDR or Microsoft Sentinel.\n\n## Acknowledgments\n\nWe would like to thank Workday for their collaboration and assistance in responding to this threat.\n\nWorkday customers can refer to the guidance published by Workday on their community: [https://community.workday.com/alerts/customer/1229867](https://community.workday.com/alerts/customer/1229867).\n\n## Learn more\n\nFor the latest security research from the Microsoft Threat Intelligence community, check out the [Microsoft Threat Intelligence Blog](https://aka.ms/threatintelblog).\n\nTo get notified about new publications and to join discussions on social media, follow us on [LinkedIn](https://www.linkedin.com/showcase/microsoft-threat-intelligence), [X (formerly Twitter)](https://x.com/MsftSecIntel), and [Bluesky](https://bsky.app/profile/threatintel.microsoft.com).\n\nTo hear stories and insights from the Microsoft Threat Intelligence community about the ever-evolving threat landscape, listen to the [Microsoft Threat Intelligence podcast](https://thecyberwire.com/podcasts/microsoft-threat-intelligence).",
  "PubDate": "2025-10-09T15:00:00+00:00",
  "Link": "https://www.microsoft.com/en-us/security/blog/2025/10/09/investigating-targeted-payroll-pirate-attacks-affecting-us-universities/",
  "FeedName": "Microsoft Security Blog",
  "OutputDir": "_news",
  "Title": "Investigating targeted “payroll pirate” attacks affecting US universities",
  "Description": "Microsoft Threat Intelligence has identified a financially motivated threat actor that we track as Storm-2657 compromising employee accounts to gain unauthorized access to employee profiles and divert salary payments to attacker-controlled accounts, attacks that have been dubbed “payroll pirate”.\n\nThe post [Investigating targeted “payroll pirate” attacks affecting US universities](https://www.microsoft.com/en-us/security/blog/2025/10/09/investigating-targeted-payroll-pirate-attacks-affecting-us-universities/) appeared first on [Microsoft Security Blog](https://www.microsoft.com/en-us/security/blog).",
  "ProcessedDate": "2025-10-09 16:04:16",
  "FeedUrl": "https://www.microsoft.com/en-us/security/blog/feed/"
}
