{
  "Title": "Unlocking Flexibility in Fabric: Introducing Multiple Scheduler and CI/CD Support",
  "FeedName": "Microsoft Fabric Blog",
  "OutputDir": "_news",
  "Tags": [],
  "ProcessedDate": "2025-08-05 17:04:19",
  "Description": "Multiple Scheduler: A Game-Changer for Complex Scheduling Needs In today’s data environments, one size rarely fits all. Yet until now, Fabric only allowed one scheduler per item, forcing users to duplicate pipelines, manually configure jobs, or build brittle workarounds to meet real-world needs. That changes today. We’re excited to announce Multiple Scheduler support in Fabric — a long-awaited …\n\n[Continue reading “Unlocking Flexibility in Fabric: Introducing Multiple Scheduler and CI/CD Support”](https://blog.fabric.microsoft.com/en-us/blog/unlocking-flexibility-in-fabric-introducing-multiple-scheduler-and-ci-cd-support/)",
  "Author": "Microsoft Fabric Blog",
  "Link": "https://blog.fabric.microsoft.com/en-US/blog/unlocking-flexibility-in-fabric-introducing-multiple-scheduler-and-ci-cd-support/",
  "PubDate": "2025-08-05T09:00:00+00:00",
  "EnhancedContent": "## Multiple Scheduler: A Game-Changer for Complex Scheduling Needs\n\nIn today’s data environments, one size rarely fits all. Yet until now, Fabric only allowed **one scheduler per item**, forcing users to duplicate pipelines, manually configure jobs, or build brittle workarounds to meet real-world needs.\n\nThat changes today.\n\nWe’re excited to announce **Multiple Scheduler** support in Fabric — a long-awaited capability that allows users to configure **up to 20 schedulers per item**, each with its own time plan.\n\n![](//dataplatformblogwebfd-d3h9cbawf0h8ecgf.b01.azurefd.net/wp-content/uploads/2025/08/image-4-835x1024.png)\n\n### Why It Matters\n\nThis feature was a **P0 ask** from many enterprise customers and a top complaint surfaced in CAT team surveys. It directly addresses the flexibility gap that blocked many users from migrating from platforms like ADF and Synapse\n\nReal Scenarios, Now Solved\n\n- **Multiple time schedules for the same item**\nA pipeline used by several dashboards can now be triggered at different intervals — for example, one scheduler runs daily at 6 AM, another weekly on Sundays. Previously, users had to duplicate the pipeline to achieve this. Now, they can configure multiple schedulers directly on the same item.\n- **Different job types on the same item**\nSome items support more than one job type (e.g., refresh vs. publish). With Multiple Scheduler, users can now create separate schedulers for each job type — even though only the default job type is visible in the UI, all schedulers are fully supported via API. (UI is on the way.)\n\n## Scheduler CI/CD: Making It All Deployable\n\nBut with great flexibility comes great complexity. More Schedulers mean more configurations, more dependencies, and more chances for deployment errors.\n\nThat’s why we’re also announcing **Scheduler CI/CD support** — a foundational upgrade that makes Multiple Scheduler truly usable at scale.\n\n### What’s New\n\n- Schedulers are deployed **alongside the item** via Git, Deployment Pipelines, or public APIs.\n- Configuration changes are tracked, versioned, and validated — just like any other part of your item.\n\n### Deployment Scenarios, Solved\n\n- **Git integration**: Scheduler configurations are stored as `.json`\nfiles in the item folder and reflected in Git status and diffs.![](//dataplatformblogwebfd-d3h9cbawf0h8ecgf.b01.azurefd.net/wp-content/uploads/2025/08/schedulerJSON.png)\n- **Deployment Pipeline support**: Changes are surfaced in deployment history and comparison tools.\n- **Public API**: Scheduler definitions are embedded in item definitions, enabling full CRUD operations and version control.\n\n## What’s Available Today\n\n- **Multiple Scheduler API support**: Create, read, update, and delete up to 20 schedulers per item.\n- **UI support for default job types**: Easily manage multiple schedulers in the Fabric UI.\n- **CI/CD integration**: Scheduler configurations are deployed with the item, tracked in Git, and validated in pipelines.\n- **Monitoring**: Job history is separated per scheduler, and errors are surfaced clearly.\n\n## What’s Coming Next\n\nWe’re continuing to expand support with:\n\n- Full UI CRUD support for all job types.\n- Job history separation by Scheduler in Monitor hub.\n- Scheduler reuse across items.\n- Enhanced validation and naming support.\n\nFor more information, refer to the [Choose the best Fabric CI/CD workflow option for you](https://learn.microsoft.com/fabric/cicd/manage-deployment) documentation.",
  "FeedLevelAuthor": "Microsoft Fabric Blog",
  "FeedUrl": "https://blog.fabric.microsoft.com/en-us/blog/feed/"
}
