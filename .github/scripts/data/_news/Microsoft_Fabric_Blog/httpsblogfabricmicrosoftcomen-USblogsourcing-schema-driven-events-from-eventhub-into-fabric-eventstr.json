{
  "PubDate": "2025-10-14T10:00:00+00:00",
  "OutputDir": "_news",
  "ProcessedDate": "2025-10-14 17:03:00",
  "Tags": [],
  "FeedLevelAuthor": "Microsoft Fabric Blog",
  "Title": "Sourcing Schema-Driven Events from EventHub into Fabric Eventstreams (Preview)",
  "FeedName": "Microsoft Fabric Blog",
  "FeedUrl": "https://blog.fabric.microsoft.com/en-us/blog/feed/",
  "Author": "Microsoft Fabric Blog",
  "Description": "In our previous blog post on Schema Registry and Eventstreams, we introduced how Schema Registry in Microsoft Fabric Real-Time Intelligence enables type-safe, reliable event processing pipelines. With Azure EventHub integration with schema-enabled Eventstreams in preview, this brings enterprise-grade event streaming with schema validation to your real-time analytics workflows. Why EventHub + Schema Registry Matters Azure EventHub …\n\n[Continue reading “Sourcing Schema-Driven Events from EventHub into Fabric Eventstreams (Preview)”](https://blog.fabric.microsoft.com/en-us/blog/sourcing-schema-driven-events-from-eventhub-into-fabric-eventstreams-preview/)",
  "Link": "https://blog.fabric.microsoft.com/en-US/blog/sourcing-schema-driven-events-from-eventhub-into-fabric-eventstreams-preview/",
  "EnhancedContent": "In our previous blog post [on Schema Registry and Eventstreams](https://blog.fabric.microsoft.com/blog/schema-registry-creating-type-safe-pipelines-using-schemas-and-eventstreams-preview/), we introduced how Schema Registry in Microsoft Fabric Real-Time Intelligence enables type-safe, reliable event processing pipelines. With Azure EventHub integration with schema-enabled Eventstreams in preview, this brings enterprise-grade event streaming with schema validation to your real-time analytics workflows.\n\n## Why EventHub + Schema Registry Matters\n\nAzure EventHub is the backbone of event streaming for many organizations, handling millions of events per second from IoT devices, applications, and microservices. However, these high-volume streams often come with challenges:\n\n- Inconsistent event structures from multiple producers.\n- Schema evolution breaking downstream consumers.\n- Lack of visibility into what’s flowing through your pipelines.\n- Data quality issues discovered too late in the pipeline.\n\nCombine EventHub with Fabric’s Schema Registry to unlock:\n\n**Event Contracts**: Define agreement between event publishers and consumers. **Early Validation**: Catch malformed events at ingestion, not in downstream analytics. **Self-Documenting Pipelines**: Instantly understand data flows. **Type Safety**: Downstream Eventhouse tables receive expected data types. **Governance**: Centralized schema management across all your event streams.\n\n## The Power of Payload Modeling\n\nBefore Schema Registry: Managing Event Data Without Standards. Imagine building a real-time baggage tracking system for an airport—without schemas, you might receive events like this:\n\n``` // Event 1 - All fields present {\"bagId\": \"BAG001\", \"weight\": 23.5, \"flightId\": \"AA1234\"}\n\n// Event 2 - Weight as string instead of number {\"bagId\": \"BAG002\", \"weight\": \"18kg\", \"flightId\": \"DL5678\"}\n\n// Event 3 - Missing required field {\"bagId\": \"BAG003\", \"flightId\": \"UA9012\"}\n\n// Event 4 - Extra unexpected fields {\"bagId\": \"BAG004\", \"weight\": 21.0, \"flightId\": \"SW3456\", \"color\": \"blue\", \"owner\": \"John\"} ```\n\nThe result? Your downstream KQL queries fail, Eventhouse tables have inconsistent columns, dashboards show incorrect data, and you spend hours debugging production issues.\n\n### After Schema Registry – Predictable, Reliable Pipelines\n\nWith a registered Avro schema, you define exactly what’s allowed:\n\n``` { \"type\": \"record\", \"name\": \"BaggageCheckinEventData\", \"namespace\": \"Airport.Baggage\", \"fields\": [ {\"name\": \"bagId\", \"type\": \"string\"}, {\"name\": \"weightKg\", \"type\": \"double\"}, {\"name\": \"flightId\", \"type\": \"string\"}, {\"name\": \"paxId\", \"type\": \"string\"} ] } ```\n\nNow, only conforming events enter your Eventstream. Malformed events are rejected at the gate, logged in Fabric Diagnostics, and never pollute your analytics pipeline. Only events that conform to the mapped schemas are accepted by the eventstream, and delivered to downstream components such as an Eventhouse.\n\n![](//dataplatformblogwebfd-d3h9cbawf0h8ecgf.b01.azurefd.net/wp-content/uploads/2025/10/image-11-1024x416.png)Schema driven type-safe pipeline delivering events from an EventHub to an Eventhouse\n\nThe value proposition is clear:\n\n- Data Quality: 100% of ingested events match your schema.\n- Faster Development: No guessing about field names or types.\n- Production Confidence: Schemas prevent breaking changes from reaching production.\n- Consistent Analytics: KQL queries work reliably without defensive null checks.\n\n## Looking Ahead\n\nEventHub integration with Schema Registry is just the beginning. If you would like to influence our direction, [vote](https://forms.office.com/r/YHDdDd50UT) for the what’s on the horizon:\n\n- Failed Event Retry & Reprocessing: Quarantine failed events and replay.\n- Schema Inference from Sample Events: Store inferred schemas.\n- Multi-Header Routing: Allow more complex rules than 1:1 schema mapping.\n\n## Conclusion\n\nYou can now source events from EventHub using schemas. By enforcing contracts at ingestion through header-based schema matching, you achieve:\n\n- Reliability: Only valid, expected data enters your pipeline.\n- Velocity: Developers work faster with clear data contracts.\n- Quality: Zero malformed events reach downstream systems.\n- Governance: Centralized schema management and access control.\n\nStart modeling your event payloads today and experience the difference that schema-driven pipelines make for your organization.\n\n## Get Started\n\nReady to source events from your EventHub with Schema Registry? Visit the Fabric Real-Time documentation to learn how to map schemas to your EventHub source:\n\n- [Event Schema Registry Documentation](https://learn.microsoft.com/fabric/real-time-intelligence/schema-sets/schema-registry-overview)\n- [Add EventHub as a source to your eventstream](https://learn.microsoft.com/fabric/real-time-intelligence/event-streams/add-source-azure-event-hubs?branch=pr-en-us-10586&amp;pivots=extended-features)\n\n**We Want Your Feedback!**\n\nThis capability is evolving based on your input. [Share your experiences](https://forms.office.com/r/YHDdDd50UT), challenges, and feature requests with the Fabric RTI team.\n\n*Have questions or want to share your schema-driven pipeline success story? Connect with us in the Fabric Community or reach out to the Real-Time Intelligence team.*"
}
