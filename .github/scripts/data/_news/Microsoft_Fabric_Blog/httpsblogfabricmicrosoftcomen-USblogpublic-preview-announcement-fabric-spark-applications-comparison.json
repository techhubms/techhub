{
  "ProcessedDate": "2025-09-22 17:10:36",
  "Author": "Microsoft Fabric Blog",
  "Link": "https://blog.fabric.microsoft.com/en-US/blog/public-preview-announcement-fabric-spark-applications-comparison/",
  "FeedName": "Microsoft Fabric Blog",
  "OutputDir": "_news",
  "Title": "Fabric Spark Applications Comparison (Preview)",
  "PubDate": "2025-09-22T09:30:00+00:00",
  "Description": "The Spark Applications Comparison feature is now in preview in Microsoft Fabric. This new capability empowers developers and data engineers to analyze, debug, and optimize Spark performance across multiple application runs—whether you’re tracking changes from code updates or data variations to improve performance. What is Spark Applications Comparison? The Spark Applications Comparison feature allows users …\n\n[Continue reading “Fabric Spark Applications Comparison (Preview)”](https://blog.fabric.microsoft.com/en-us/blog/public-preview-announcement-fabric-spark-applications-comparison/)",
  "Tags": [],
  "FeedLevelAuthor": "Microsoft Fabric Blog",
  "EnhancedContent": "The Spark Applications Comparison feature is now in preview in Microsoft Fabric. This new capability empowers developers and data engineers to analyze, debug, and optimize Spark performance across multiple application runs—whether you’re tracking changes from code updates or data variations to improve performance.\n\n## What is Spark Applications Comparison?\n\nThe Spark Applications Comparison feature allows users to select and compare up to four Spark application run side by side. By visualizing and contrasting key execution metrics, users can more easily identify performance regressions, improvements, and anomalies.\n\n### Key Use Cases\n\n- Compare runs from the same artifact (e.g., Notebook or Spark Job Definition).\n- Identify regressions or improvements by viewing metric deltas from a base run.\n- Debug performance issues using execution time, input/output data trends, and resource utilization metrics.\n\n## Explore the Compare Panel\n\nThe Compare Panel provides a side-by-side breakdown of key performance and resource metrics. Each Spark application run can be easily compared to the base run, with clear indicators of change and percentage variation\n\n### Metrics include\n\n- Start Time\n- Running Duration\n- Queued Duration\n- Total Duration\n- Executor CPU Time & Run Time\n- Input / Output Size and Record Counts\n- Disk & Memory Spill\n- Shuffle Write Volume and Record Count\n\nFor anomalous runs, the panel also surfaces potential root causes and highlights time-intensive activities to help focus your debugging efforts.\n\n## Deep Dive: Spark Monitoring L2 Integration\n\nFor any run in the comparison view, you can navigate to the detailed Spark L2 Monitoring page to explore jobs, stages, logs, and configuration history in greater depth—enabling root cause analysis and fine-tuned performance optimization.\n\n## How It Works\n\nAccess the Compare Feature – You can launch the comparison view directly from the Monitor Run Series page:\n\n1. Navigate to the Run Series page.\n2. Switch to the Compare Runs tab.\n3. Select up to four completed runs to compare. One run will serve as the base run for reference, and others will be compared against it.\n\nYou can reassign the base run at any time by clicking the flag icon.\n\n![](//dataplatformblogwebfd-d3h9cbawf0h8ecgf.b01.azurefd.net/wp-content/uploads/2025/09/image-36-1024x519.png)\n\n## Get Started\n\nTo try out the Spark Applications Comparison feature, head over to the Monitor Run Series page in Microsoft Fabric. Select a few completed runs, open the Compare Panel, and start exploring how your Spark applications evolve over time.\n\nFor more information, refer to the documentation for [Apache Spark Applications Comparison](https://learn.microsoft.com/fabric/data-engineering/spark-comparison-runs).",
  "FeedUrl": "https://blog.fabric.microsoft.com/en-us/blog/feed/"
}
