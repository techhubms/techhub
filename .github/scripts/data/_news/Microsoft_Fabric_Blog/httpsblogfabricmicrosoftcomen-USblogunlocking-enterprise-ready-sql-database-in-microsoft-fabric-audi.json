{
  "PubDate": "2025-09-23T13:00:00+00:00",
  "OutputDir": "_news",
  "Author": "Microsoft Fabric Blog",
  "Link": "https://blog.fabric.microsoft.com/en-US/blog/unlocking-enterprise-ready-sql-database-in-microsoft-fabric-auditing-backup-copilot-more/",
  "Title": "Unlocking Enterprise ready SQL database in Microsoft Fabric: ALM, Backup, Copilot & more",
  "FeedUrl": "https://blog.fabric.microsoft.com/en-us/blog/feed/",
  "FeedLevelAuthor": "Microsoft Fabric Blog",
  "EnhancedContent": "Coauthored by: Joanne Wong\n\nMicrosoft Fabric continues to evolve as a unified data platform, and the latest updates to SQL Database in Fabric as a fully managed database SaaS offering, brings a suite of application developer centric and enterprise-grade features that elevates security, flexibility, and developer productivity. Here’s a breakdown of the most impactful enhancements.\n\n### **Copilot & Query Editor Enhancements**\n\n1. Connect in SSMS with One Click: Instantly connect to your SQL database in Fabric provisioning is now integrated into VS Code. Server Management Studio (SSMS) without manual entry—streamlining developer workflows and reducing friction for data professionals. ![](//dataplatformblogwebfd-d3h9cbawf0h8ecgf.b01.azurefd.net/wp-content/uploads/2025/09/2openInSSMS_sqldb_INSTALLED_FULL.gif)\n2. Bulk Query Management: Delete multiple queries at once by simply holding Shift, selecting, and right-clicking, making workspace cleanup fast and intuitive. ![](//dataplatformblogwebfd-d3h9cbawf0h8ecgf.b01.azurefd.net/wp-content/uploads/2025/09/bulkDeleteSharedQueries1.gif)\n3. Share Queries Across Teams: Create shared queries that any admin, contributor, or member in your workspace can view and edit, supporting collaborative development and knowledge sharing.\n4. Copilot Mode Selector: Easily toggle between read-only and read/write modes. In read-only, Copilot generates SQL code but doesn’t execute changes; in read/write, Copilot executes code only after your approval, ensuring safe automation and governance.\n\n### **Application Lifecycle Management (ALM)**\n\nDatabase Definition Import/Export via REST API **** now empowers developers with REST APIs to:\n\n1. Export database object definitions as portable SQL projects.\n2. Import compiled definitions (dacpacs) to update existing databases, with automatic diff detection and application of changes.\n\n![](//dataplatformblogwebfd-d3h9cbawf0h8ecgf.b01.azurefd.net/wp-content/uploads/2025/09/SQL-db-in-Fabric-Shared-Queries-to-Source-Control.gif)\n\n### **VS Code Integrations**\n\nThe MSSQL extension for VS Code now enables seamless Fabric connectivity, letting developers browse, authenticate, and connect to Fabric workspaces directly from their editor. With real-time search, intuitive workspace browsing, and persistent sign-in via Microsoft Entra ID, connecting to Fabric resources is fast and friction-free—eliminating the need for portal hopping and making early prototyping much more efficient.\n\nSQL database provisioning in Fabric is now integrated into VS Code, allowing users to authenticate, select or create a workspace, name their database, and provision it in under three minutes. The experience is consistent with other backend options, instantly connects the new database for querying, and clearly indicates disabled workspaces if capacity isn’t available—making database creation and management simple, reliable, and developer-friendly.\n\nTo learn more, read the [MSSQL extension for VS Code: Fabric integration (preview)](https://aka.ms/vscode-mssql-fabric) blog.\n\nRefer to the [Fabric Integration in Visual Studio Code with MSSQL – SQL Server | Microsoft Learn](https://learn.microsoft.com/en-us/sql/tools/visual-studio-code-extensions/mssql/mssql-fabric-integration?view=sql-server-ver17) documentation to get started.\n\n![](//dataplatformblogwebfd-d3h9cbawf0h8ecgf.b01.azurefd.net/wp-content/uploads/2025/09/VS-Code-SQL-database-in-Fabric-Provisioning.gif)\n\n### **Point-in-Time Restore (PITR): Precision Recovery**\n\nPITR allows users to restore a database to any specific moment within the configured retention window. Whether recovering from a user error, application bug, or security incident, PITR provides granular control to rewind your database to a known good state.\n\nUntil recently, PITR in Fabric SQL DB supported a 7-day retention window. With the latest update, this can now be extended to 35 days, offering significantly more flexibility for operational recovery and compliance scenarios.\n\n### **Performance Dashboard Improvements**\n\nWe’ve further enhanced the performance dashboard by adding memory consumption metrics. This new feature offers real-time insights into memory usage by individual database queries, enabling better resource management and optimization. The dashboard now includes memory consumption alongside CPU usage, user connections, requests per second, blocked queries, database size, automatic index info, and query performance metrics for comprehensive monitoring.\n\nTo learn more, refer to the [Performance Dashboard for SQL database in Microsoft Fabric](https://learn.microsoft.com/fabric/database/sql/performance-dashboard) documentation.\n\n### **Mirroring/Replication Configurability: REST API Control**\n\nSQL database in Fabric will soon support the ability to start**/**stop replication/mirroring operations to Fabric OneLake via REST APIs, giving teams programmatic control over replication workflows. This is especially useful for managing high-volume data pipelines and ensuring resilience without manual intervention.\n\n### **Coming soon**: **SQL Auditing**\n\nAuditing in SQL in Fabric is designed to meet enterprise compliance and security standards. This feature will be coming soon in preview by the end of this year.\n\n1. Default Auditing: All activities are audited by default, capturing all critical events (logins, schema changes, permission modifications) and storing logs in an immutable OneLake folder, ensuring transparency and traceability.\n2. Custom Auditing: Organizations can tailor audit configurations to specific needs. Custom action groups, retention policies, and predicate expressions offer granular control over what gets logged and for how long.\n\nThese updates mark a significant leap forward in making SQL in Fabric a robust, secure, and developer-friendly platform for modern data estates. Whether you’re building mission-critical applications or managing complex compliance requirements, Fabric SQL Database is ready to meet the challenge.\n\n**Getting Started**\n\nWe encourage you to start exploring and dive into the [SQL database in Fabric (Preview) – SQL Server | Microsoft Learn](https://learn.microsoft.com/en-us/sql/sql-server/fabric-database/sql-database-in-fabric?view=azuresqldb-current) documentation and start building!\n\n**Resources**\n\n[Watch this training video](https://youtu.be/ycq7r-ngOBI) to learn how to deploy SQL databases in Fabric.\n\nJoin the [Fabric community](http://ideas.fabric.microsoft.com) discussion, report issues and suggestions, and share your feedback.\n\nExplore [end-to-end tutorials in Microsoft Fabric](http://aka.ms/Fabric-tutorials)\n\nDiscover new features in the [Microsoft Fabric Roadmap](https://aka.ms/fabricsqlroadmap)",
  "Description": "Coauthored by: Joanne Wong Microsoft Fabric continues to evolve as a unified data platform, and the latest updates to SQL Database in Fabric as a fully managed database SaaS offering, brings a suite of application developer centric and enterprise-grade features that elevates security, flexibility, and developer productivity. Here’s a breakdown of the most impactful enhancements. …\n\n[Continue reading “Unlocking Enterprise ready SQL database in Microsoft Fabric: ALM, Backup, Copilot & more”](https://blog.fabric.microsoft.com/en-us/blog/unlocking-enterprise-ready-sql-database-in-microsoft-fabric-auditing-backup-copilot-more/)",
  "ProcessedDate": "2025-09-23 20:12:34",
  "FeedName": "Microsoft Fabric Blog",
  "Tags": []
}
