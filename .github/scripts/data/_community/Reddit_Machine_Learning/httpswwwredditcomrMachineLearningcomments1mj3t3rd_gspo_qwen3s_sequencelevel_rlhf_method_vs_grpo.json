{
  "FeedUrl": "https://www.reddit.com/r/MachineLearning/.rss",
  "Link": "https://www.reddit.com/r/MachineLearning/comments/1mj3t3r/d_gspo_qwen3s_sequencelevel_rlhf_method_vs_grpo/",
  "Tags": [
    "MachineLearning"
  ],
  "OutputDir": "_community",
  "FeedName": "Reddit Machine Learning",
  "ProcessedDate": "2025-08-08 16:08:39",
  "Title": "[D] GSPO: Qwen3’s sequence-level RLHF method vs. GRPO - stability & scaling analysis",
  "FeedLevelAuthor": "Machine Learning",
  "EnhancedContent": "The Qwen team recently proposed **Group Sequence Policy Optimization (GSPO)**, a reinforcement learning approach for post-training LLM fine-tuning. They position it as an alternative to **Group Relative Policy Optimization (GRPO)** - used in DeepSeek - and claim GRPO’s token-level importance sampling is “ill‑posed” for stable training.\n\n**Background:**\n\n- Popular RLHF methods (e.g. PPO) optimize LLMs via reward signals.\n- DeepSeek’s GRPO extends this by computing sample-level value estimations.\n- Qwen reports that GRPO often triggers gradient instability and model collapse unless patched with complex adjustments.\n\n**Key concerns with GRPO:**\n\n- Applies importance sampling **per token**, accumulating high variance across long sequences.\n- Particularly problematic for **Mixture-of-Experts (MoE)** models, where token-level routing shifts can destabilize training.\n- To counteract this, GRPO-based pipelines often rely on strategies like **Routing Replay**.\n\n**GSPO’s proposal:**\n\n- Moves to **sequence-level importance sampling**, normalizing by sequence length.\n- Dramatically reduces variance and eliminates the need for routing hacks.\n- Qwen reports stable MoE convergence and better scaling.\n\n**Findings from experiments:**\n\n- On benchmarks such as AIME’24, LiveCodeBench, and CodeForces, GSPO achieves better reward curves than GRPO.\n- GSPO converges faster with more compute and shows smoother scaling trends.\n- GRPO requires Routing Replay to perform adequately; GSPO does not.\n\nIf you're interested, read more about it here: [Qwen Team Proposes GSPO for Qwen3, Claims DeepSeek's GRPO is Ill-Posed](https://blog.netmind.ai/article/Qwen_Team_Proposes_GSPO_for_Qwen3%2C_Claims_DeepSeek). The blog post includes mathematical formulations of both methods and performance comparisons.\n\nI’m interested to know:\n\n- Whether anyone in the community has observed instability with token-level importance sampling or GRPO?\n- Has sequence-level weighting like GSPO been tested in your RLHF pipelines?\n\nOur original blog post didn’t contain this error, but in my post here I mistakenly referred to GSPO/GRPO as RLHF. For the record: GSPO isn’t RLHF or RLVR - it’s straightforward reinforcement learning, more precisely reinforcement fine‑tuning (RFT).\n\nIf trained with rewards imitating human feedback, that’s RLHF. If trained with verifiable rewards, that’s RLVR. RLHF is less common now since it requires a large dataset of human feedback to train the reward model. Most post‑training today uses RLVR, but for instruct models you can still use RLHF with either GSPO or GRPO.\n\nWe’ve shared this in a few other subs to spark a wider discussion, as we think this new algorithm deserves more attention. Special thanks to [u/shark8866](/user/shark8866/) for spotting the typo.\n\nGreat analysis, the stability gains here are compelling. This makes me wonder if the token-level instability in GRPO is partly a symptom of the information loss inherent in tokenization itself.\n\nEach token is a noisy approximation, and multiplying those signals seems destined to accumulate variance. GSPO's sequence-level approach feels more robust precisely because it evaluates the final 'reconstructed' message, effectively averaging out that noise.\n\nThanks for sharing!\n\nI'm currently a little skeptical of technique proposals looking only at a single Qwen model due to [Reasoning or Memorization](https://arxiv.org/abs/2507.10532). I think I'll need to see similar results from another model to buy it.",
  "Author": "MarketingNetMind",
  "PubDate": "2025-08-06T12:50:47+00:00",
  "Description": "| [!\\[\\\\[D\\\\] GSPO: Qwen3’s sequence-level RLHF method vs. GRPO - stability & scaling analysis\\](https://b.thumbs.redditmedia.com/XqCqBe63bCQw2OFDJAuvW48gHUuv_xP_RCWYiKIf4bU.jpg \"\\[D\\] GSPO: Qwen3’s sequence-level RLHF method vs. GRPO - stability & scaling analysis\")](https://www.reddit.com/r/MachineLearning/comments/1mj3t3r/d_gspo_qwen3s_sequencelevel_rlhf_method_vs_grpo/) | The Qwen team recently proposed **Group Sequence Policy Optimization (GSPO)**, a reinforcement learning approach for post-training LLM fine-tuning. They position it as an alternative to **Group Relative Policy Optimization (GRPO)** - used in DeepSeek - and claim GRPO’s token-level importance sampling is “ill‑posed” for stable training.<br><br> <br>**Background:**<br><br> <ul> <li>Popular RLHF methods (e.g. PPO) optimize LLMs via reward signals.</li><br> <li>DeepSeek’s GRPO extends this by computing sample-level value estimations.</li><br> <li>Qwen reports that GRPO often triggers gradient instability and model collapse unless patched with complex adjustments.</li><br> </ul><br><br> <br>**Key concerns with GRPO:**<br><br> <ul> <li>Applies importance sampling <strong>per token</strong>, accumulating high variance across long sequences.</li><br> <li>Particularly problematic for <strong>Mixture-of-Experts (MoE)</strong> models, where token-level routing shifts can destabilize training.</li><br> <li>To counteract this, GRPO-based pipelines often rely on strategies like <strong>Routing Replay</strong>.</li><br> </ul><br><br> <br>**GSPO’s proposal:**<br><br> <ul> <li>Moves to <strong>sequence-level importance sampling</strong>, normalizing by sequence length.</li><br> <li>Dramatically reduces variance and eliminates the need for routing hacks.</li><br> <li>Qwen reports stable MoE convergence and better scaling.</li><br> </ul><br><br> <br>**Findings from experiments:**<br><br> <ul> <li>On benchmarks such as AIME’24, LiveCodeBench, and CodeForces, GSPO achieves better reward curves than GRPO.</li><br> <li>GSPO converges faster with more compute and shows smoother scaling trends.</li><br> <li>GRPO requires Routing Replay to perform adequately; GSPO does not.</li><br> </ul><br><br> <br>If you're interested, read more about it here: [Qwen Team Proposes GSPO for Qwen3, Claims DeepSeek's GRPO is Ill-Posed](https://blog.netmind.ai/article/Qwen_Team_Proposes_GSPO_for_Qwen3%2C_Claims_DeepSeek). The blog post includes mathematical formulations of both methods and performance comparisons.<br><br> <br>I’m interested to know:<br><br> <ul> <li>Whether anyone in the community has observed instability with token-level importance sampling or GRPO?</li><br> <li>Has sequence-level weighting like GSPO been tested in your RLHF pipelines?</li><br> </ul><br>"
}
