{
  "Tags": [],
  "Description": "# Introduction\n\nAzure Functions on Azure Container Apps lets you run serverless functions in a flexible, scalable container environment. As the platform evolves, there are two mechanisms to deploy Images with Function Programming Model as Azure Container apps:\n\n- Functions V1 (Legacy Microsoft.Web RP Model)\n- Functions V2 (New Microsoft.App RP Model)\n\nV2 is latest and recommended approach to host Functions on Azure Container Apps. In this article, we will learn about differences in different approaches and how you can transition to V2 model.\n\n## V1 Limitations (Legacy approach)\n\nFunction App Deployments has limited functionality and experience therefore transition to V2 is encouraged. Below are the limitations of V1\n\n**Troubleshooting Limitations**\n\n- Direct container access and real-time log viewing are not supported.\n- Console access and live log output are restricted due to system-generated container configurations.\n- Low-level diagnostics are available via Log Analytics, while application-level logs can be accessed through Application Insights.\n\n**Portal UI experience limitations**\n\n- Lacks experiences on multi revision, easy auth, health probes, custom domain\n\n**DAPR Integration Challenges**\n\n- Compatibility issues with DAPR with .NET isolated functions, particularly during build processes due to dependency conflicts.\n\n# Functions V2 (Improved and Recommended)\n\nDeployment **with** -–kind=functionapp using Microsoft.App RP reflects the newer approach of deployment (Function on Container Apps V2)\n\n*Simplified Resource Management internally:* Instead of relying on proxy Function App (as in the V1 model), V2 provisions a native Azure Container App resource directly. This shift eliminates the need to dual-resource management previously involving both the proxy and the container app, thereby simplifying operations by consolidating everything into a single, standalone resource.\n\n*Feature rich and fully native:* As a result, V2 brings the native features of Azure Container Apps for the images deployed with Azure functions programming model, including\n\n- [Multi-revision management](https://learn.microsoft.com/en-us/azure/container-apps/revisions-manage) and traffic split\n- [Easy Auth](https://learn.microsoft.com/en-us/azure/container-apps/authentication)\n- Private Endpoint support\n- [Metrics](https://learn.microsoft.com/en-us/azure/container-apps/metrics) & [Alerting](https://learn.microsoft.com/en-us/azure/container-apps/alerts)\n- CI/CD through [Azure pipelines](https://learn.microsoft.com/en-us/azure/container-apps/azure-pipelines) and [GitHub actions](https://learn.microsoft.com/en-us/azure/container-apps/github-actions)\n- [Health probes](https://learn.microsoft.com/en-us/azure/container-apps/health-probes)\n- [Custom domains and managed certificates](https://learn.microsoft.com/en-us/azure/container-apps/custom-domains-managed-certificates)\n- Setting Polling interval and Cool down intervals in [scale settings](https://learn.microsoft.com/en-us/azure/container-apps/scale-app)\n- Use [container app secrets](https://learn.microsoft.com/en-us/azure/container-apps/manage-secrets)\n- Use [Side car containers](https://learn.microsoft.com/en-us/azure/container-apps/containers)\n\nSince V2 contains significant upgrade on experience and functionality, it’s recommended to transition to V2 from existing V1 deployments.\n\n# Legacy Direct Function image deployment approach\n\nSome customers continue to deploy Function images as standard container apps (without kind=functionapp) using the Microsoft.App resource provider. While this method enables access to native Container Apps features, it comes with key limitations:\n\n- Not officially supported.\n- No auto-scale rules — manual configuration required\n- No access to new V2 capabilities in roadmap (e.g., List Functions, Function Keys, Invocation Count)\n\nRecommendation: Transition to Functions on Container Apps V2, which offers a significantly improved experience and enhanced functionality.\n\n# Checklist for the transitioning to Functions V2 on Azure Container Apps\n\nBelow is the transition guide\n\n## 1. Preparation\n\n- Identify your current deployment: Confirm you are running Functions V1 (Web RP) in Azure Container Apps\n- Locate your container image: Ensure you have access to the container image used in your V1 deployment.\n- Document configuration: Record all environment variables, secrets, storage account connections, and networking settings from your existing app.\n- Check Azure Container Apps environment quotas: Review memory, CPU, and instance limits for your Azure Container Apps environment. Request quota increases if needed.\n\n## 2. Create the New V2 App\n\n- Create a new Container App with kind=functionapp:\n- Use the Azure Portal (“Optimize for Functions app” option)\n- Or use the CLI (az functionapp create) and specify your existing container image.\n- See detailed guide for [creating Functions on Container apps V2](https://learn.microsoft.com/en-us/azure/container-apps/functions-usage)\n\n![]()![]()\n\n- No code changes required: You can use the same container image you used for V1-no need to modify your Functions code or rebuild your image.\n- Replicate configuration: Apply all environment variables, secrets, and settings from your previous deployment.\n\n## 3. Validation\n\n- Test function triggers: Confirm all triggers (HTTP, Event Hub, Service Bus, etc.) work as expected.\n- Test all integrations: Validate connections to databases, storage, and other Azure services.\n\n## 4. DNS and Custom Domain Updates (optional)\n\n- Review DNS names: The new V2 app will have a different default DNS name than your v1 app.\n- Update custom domains:\n- If you use a custom domain (e.g., api.yourcompany.com), update your DNS records (CNAME or A record) to point to the new V2 app’s endpoint after validation.\n- Re-bind or update SSL/TLS certificates as needed.\n- Notify Users and Stakeholders: Inform anyone who accesses the app directly about the DNS or endpoint change.\n- Test endpoint: Ensure the new DNS or custom domain correctly routes traffic to the V2 app.\n\n## 5. Cutover\n\n- Switch production traffic: Once validated, update DNS, endpoints, or routing to direct traffic to the new V2 app.\n- Monitor for issues: Closely monitor the new deployment for errors, latency, or scaling anomalies.\n- Communicate with stakeholders: Notify your team and users about the transition and any expected changes.\n\n## 6. Cleanup\n\n- Remove the old V1 app: Delete the previous V1 deployment to avoid duplication and unnecessary costs.\n- Update documentation: Record the new deployment details, configuration, and any lessons learned\n\n# Feedback and Support\n\nWe’re continuously improving Functions on Container Apps V2 and welcome your input.\n\n- Share Feedback: Let us know what’s working well and what could be better.\n- Submit an issue or a feature request to the [Azure Container Apps GitHub repo](https://github.com/microsoft/azure-container-apps/issues)\n- Support Channels:\n\n- - Use the [Support Portal](https://azure.microsoft.com/en-us/support/options/) for technical assistance.\n- Engage with the team via [GitHub Discussions](https://github.com/microsoft/azure-container-apps) or[Azure Community forums](https://azure.microsoft.com/en-us/support/community/).\n- Reach out to your Microsoft account team for enterprise-specific guidance.\n\nYour feedback helps shape the future of serverless on containers—thank you for being part of the journey!",
  "FeedUrl": "https://techcommunity.microsoft.com/t5/s/gxcuf89792/rss/Category?category.id=Azure",
  "Link": "https://techcommunity.microsoft.com/t5/apps-on-azure-blog/transition-to-azure-functions-v2-on-azure-container-apps/ba-p/4457258",
  "Author": "DeepGanguly",
  "PubDate": "2025-10-14T04:39:47+00:00",
  "FeedLevelAuthor": "rss.livelink.threads-in-node",
  "FeedName": "Microsoft Tech Community",
  "Title": "Transition to Azure Functions V2 on Azure Container Apps",
  "ProcessedDate": "2025-10-14 05:03:54",
  "OutputDir": "_community",
  "EnhancedContent": "# Introduction\n\nAzure Functions on Azure Container Apps lets you run serverless functions in a flexible, scalable container environment. As the platform evolves, there are two mechanisms to deploy Images with Function Programming Model as Azure Container apps:\n\n- Functions V1 (Legacy Microsoft.Web RP Model)\n- Functions V2 (New Microsoft.App RP Model)\n\nV2 is latest and recommended approach to host Functions on Azure Container Apps. In this article, we will learn about differences in different approaches and how you can transition to V2 model.\n\n## V1 Limitations (Legacy approach)\n\nFunction App Deployments has limited functionality and experience therefore transition to V2 is encouraged. Below are the limitations of V1\n\n**Troubleshooting Limitations**\n\n- Direct container access and real-time log viewing are not supported.\n- Console access and live log output are restricted due to system-generated container configurations.\n- Low-level diagnostics are available via Log Analytics, while application-level logs can be accessed through Application Insights.\n\n**Portal UI experience limitations**\n\n- Lacks experiences on multi revision, easy auth, health probes, custom domain\n\n**DAPR Integration Challenges**\n\n- Compatibility issues with DAPR with .NET isolated functions, particularly during build processes due to dependency conflicts.\n\n# Functions V2 (Improved and Recommended)\n\nDeployment **with** -–kind=functionapp using Microsoft.App RP reflects the newer approach of deployment (Function on Container Apps V2)\n\n*Simplified Resource Management internally:* Instead of relying on proxy Function App (as in the V1 model), V2 provisions a native Azure Container App resource directly. This shift eliminates the need to dual-resource management previously involving both the proxy and the container app, thereby simplifying operations by consolidating everything into a single, standalone resource.\n\n*Feature rich and fully native:* As a result, V2 brings the native features of Azure Container Apps for the images deployed with Azure functions programming model, including\n\n- [Multi-revision management](https://learn.microsoft.com/en-us/azure/container-apps/revisions-manage) and traffic split\n- [Easy Auth](https://learn.microsoft.com/en-us/azure/container-apps/authentication)\n- Private Endpoint support\n- [Metrics](https://learn.microsoft.com/en-us/azure/container-apps/metrics) & [Alerting](https://learn.microsoft.com/en-us/azure/container-apps/alerts)\n- CI/CD through [Azure pipelines](https://learn.microsoft.com/en-us/azure/container-apps/azure-pipelines) and [GitHub actions](https://learn.microsoft.com/en-us/azure/container-apps/github-actions)\n- [Health probes](https://learn.microsoft.com/en-us/azure/container-apps/health-probes)\n- [Custom domains and managed certificates](https://learn.microsoft.com/en-us/azure/container-apps/custom-domains-managed-certificates)\n- Setting Polling interval and Cool down intervals in [scale settings](https://learn.microsoft.com/en-us/azure/container-apps/scale-app)\n- Use [container app secrets](https://learn.microsoft.com/en-us/azure/container-apps/manage-secrets)\n- Use [Side car containers](https://learn.microsoft.com/en-us/azure/container-apps/containers)\n\nSince V2 contains significant upgrade on experience and functionality, it’s recommended to transition to V2 from existing V1 deployments.\n\n# Legacy Direct Function image deployment approach\n\nSome customers continue to deploy Function images as standard container apps (without kind=functionapp) using the Microsoft.App resource provider. While this method enables access to native Container Apps features, it comes with key limitations:\n\n- Not officially supported.\n- No auto-scale rules — manual configuration required\n- No access to new V2 capabilities in roadmap (e.g., List Functions, Function Keys, Invocation Count)\n\nRecommendation: Transition to Functions on Container Apps V2, which offers a significantly improved experience and enhanced functionality.\n\n# Checklist for the transitioning to Functions V2 on Azure Container Apps\n\nBelow is the transition guide\n\n## 1. Preparation\n\n- Identify your current deployment: Confirm you are running Functions V1 (Web RP) in Azure Container Apps\n- Locate your container image: Ensure you have access to the container image used in your V1 deployment.\n- Document configuration: Record all environment variables, secrets, storage account connections, and networking settings from your existing app.\n- Check Azure Container Apps environment quotas: Review memory, CPU, and instance limits for your Azure Container Apps environment. Request quota increases if needed.\n\n## 2. Create the New V2 App\n\n- Create a new Container App with kind=functionapp:\n- Use the Azure Portal (“Optimize for Functions app” option)\n- Or use the CLI (az functionapp create) and specify your existing container image.\n- See detailed guide for [creating Functions on Container apps V2](https://learn.microsoft.com/en-us/azure/container-apps/functions-usage)\n\n- No code changes required: You can use the same container image you used for V1-no need to modify your Functions code or rebuild your image.\n- Replicate configuration: Apply all environment variables, secrets, and settings from your previous deployment.\n\n## 3. Validation\n\n- Test function triggers: Confirm all triggers (HTTP, Event Hub, Service Bus, etc.) work as expected.\n- Test all integrations: Validate connections to databases, storage, and other Azure services.\n\n## 4. DNS and Custom Domain Updates (optional)\n\n- Review DNS names: The new V2 app will have a different default DNS name than your v1 app.\n- Update custom domains:\n- If you use a custom domain (e.g., api.yourcompany.com), update your DNS records (CNAME or A record) to point to the new V2 app’s endpoint after validation.\n- Re-bind or update SSL/TLS certificates as needed.\n- Notify Users and Stakeholders: Inform anyone who accesses the app directly about the DNS or endpoint change.\n- Test endpoint: Ensure the new DNS or custom domain correctly routes traffic to the V2 app.\n\n## 5. Cutover\n\n- Switch production traffic: Once validated, update DNS, endpoints, or routing to direct traffic to the new V2 app.\n- Monitor for issues: Closely monitor the new deployment for errors, latency, or scaling anomalies.\n- Communicate with stakeholders: Notify your team and users about the transition and any expected changes.\n\n## 6. Cleanup\n\n- Remove the old V1 app: Delete the previous V1 deployment to avoid duplication and unnecessary costs.\n- Update documentation: Record the new deployment details, configuration, and any lessons learned\n\n# Feedback and Support\n\nWe’re continuously improving Functions on Container Apps V2 and welcome your input.\n\n- Share Feedback: Let us know what’s working well and what could be better.\n- Submit an issue or a feature request to the [Azure Container Apps GitHub repo](https://github.com/microsoft/azure-container-apps/issues)\n- Support Channels:\n\n- - Use the [Support Portal](https://azure.microsoft.com/en-us/support/options/) for technical assistance.\n- Engage with the team via [GitHub Discussions](https://github.com/microsoft/azure-container-apps) or[Azure Community forums](https://azure.microsoft.com/en-us/support/community/).\n- Reach out to your Microsoft account team for enterprise-specific guidance.\n\nYour feedback helps shape the future of serverless on containers—thank you for being part of the journey!\n\nUpdated Oct 14, 2025\n\nVersion 1.0\n\n[azure container apps](/tag/azure%20container%20apps?nodeId=board%3AAppsonAzureBlog)\n\n[!\\[DeepGanguly&#x27;s avatar\\](https://techcommunity.microsoft.com/t5/s/gxcuf89792/images/dS0zMTc3ODQ4LTBEV0FTUQ?image-coordinates=6%2C0%2C536%2C530&amp;image-dimensions=50x50)](/users/deepganguly/3177848) [DeepGanguly](/users/deepganguly/3177848) ![Icon for Microsoft rank](https://techcommunity.microsoft.com/t5/s/gxcuf89792/images/cmstNC05WEo0blc?image-dimensions=100x16&amp;constrain-image=true)Microsoft\n\nJoined September 11, 2025\n\n[View Profile](/users/deepganguly/3177848)\n\n/category/azure/blog/appsonazureblog [Apps on Azure Blog](/category/azure/blog/appsonazureblog) Follow this blog board to get notified when there's new activity"
}
