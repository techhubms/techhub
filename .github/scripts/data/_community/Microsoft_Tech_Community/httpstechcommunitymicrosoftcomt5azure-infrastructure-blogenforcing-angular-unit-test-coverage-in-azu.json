{
  "Tags": [],
  "Title": "Enforcing Angular Unit Test Coverage in Azure DevOps Pipelines: A Step-by-Step Guide",
  "ProcessedDate": "2025-08-21 16:20:23",
  "OutputDir": "_community",
  "Author": "Sakshi_Gupta22",
  "FeedUrl": "https://techcommunity.microsoft.com/t5/s/gxcuf89792/rss/Category?category.id=Azure",
  "Description": "#### üîÑ **Pipeline Overview**\n\nThe Pipeline consists of the following key stages: ****\n\n- **Install Dependencies** ‚Äì Ensure Angular CLI and required npm packages are set up.\n- **Run Angular Unit Tests** ‚Äì Execute ng test in CI mode with coverage enabled.\n- **Generate Reports** ‚Äì Store results in JUnit and Cobertura formats.\n- **Publish to ADO** ‚Äì Push test results and coverage report into the Azure DevOps UI.\n- **Verify Coverage** ‚Äì Fail the pipeline if coverage\n\nThis workflow ensures Angular code is continuously validated, with measurable quality checks at every build.\n\n##### Step-by-Step Integration Guide\n\n1Ô∏è‚É£ **Install Angular Dependencies**\n\n- - script: |\nnpm cache clean --force npm set \"//.jfrog.io/:\\_authToken=$(npm-auth-token)\" npm config set @your-org:registry https://.jfrog.io/artifactory/api/npm// npm install -g npm npm install -g @angular/cli npm install -g @angular-devkit/build-angular --force rm -rf node\\_modules package-lock.json npm install --force displayName: Install npm packages workingDirectory: '$(System.DefaultWorkingDirectory)/unittestintegartion'\n\n*Why it matters*: Ensures a clean environment and installs all required packages for Angular testing.\n\n2Ô∏è‚É£ **Run Angular Unit Tests with Coverage**\n- - script: |\nCHROME\\_PATH=$(which google-chrome || which chromium-browser) if [ -z \"$CHROME\\_PATH\" ]; then echo \"Error: Chrome or Chromium is not installed on your system.\" exit 1 fi export CHROME\\_BIN=\"$CHROME\\_PATH\" echo \"Running Angular tests\" npm run test:ci -- --code-coverage workingDirectory: '$(System.DefaultWorkingDirectory)/unittestintegration/src/ui' displayName: Run Angular tests for remote continueOnError: true\n\n*Why it matters*: Executes tests in CI mode using ChromeHeadless and generates coverage data.\n\n3Ô∏è‚É£ **Create Report Directories**\n- - script: |\nmkdir -p reports/junit mkdir -p reports/coverage displayName: Create reports directories workingDirectory: '$(System.DefaultWorkingDirectory)/unittestintegration/src/ui'\n\n*Why it matters*: Prepares folders for storing JUnit and Cobertura reports.\n\n4Ô∏è‚É£ **Publish Test Results**\n- - task: PublishTestResults@1\ndisplayName: 'Publish Test Results - Generate Test Report remote' inputs: testResultsFiles: '$(System.DefaultWorkingDirectory)/unittestintegration/src/ui/reports/junit/unit-test-results.xml'\n\n*Why it matters*: Makes test results visible in Azure DevOps UI.\n\n5Ô∏è‚É£ **Use .NET Core SDK**\n- - task: UseDotNet@2\ndisplayName: 'Use .NET Core sdk 9.0.x' inputs: version: 9.0.x\n\n*Why it matters*: Required for publishing code coverage results.\n\n6Ô∏è‚É£ **Publish Code Coverage**\n- - task: PublishCodeCoverageResults@2\ninputs: codeCoverageTool: 'Cobertura' summaryFileLocation: '$(System.DefaultWorkingDirectory)/unittestintegration/src/ui/coverage/code-coverage.xml' reportDirectory: '$(System.DefaultWorkingDirectory)/unittestintegration/src/ui/coverage' displayName: 'Publish UI Code Coverage Results-remote'\n\n*Why it matters*: Displays detailed coverage reports in Azure DevOps.\n\n7Ô∏è‚É£ **Enforce 70% Coverage Threshold**\n- - script: |\nangular\\_coverage=$(grep -oP 'line-rate=\"(\\d+\\.\\d+)\"' $(System.DefaultWorkingDirectory)/unittestintegration/src/ui/coverage/code-coverage.xml | head -1 | grep -oP '\\d+\\.\\d+') angular\\_coverage=$(echo \"$angular\\_coverage \\* 100\" | bc) if (( $(echo \"$angular\\_coverage\n\n*Why it matters*: Automatically fails the pipeline if coverage drops below 70%.\n\n8Ô∏è‚É£ **Configure Karma for CI**\n- coverageReporter: {\ndir: require('path').join(\\_\\_dirname, 'coverage'), reporters: [ { type: 'html' }, { type: 'lcov' }, { type: 'cobertura', file: 'code-coverage.xml' }, { type: 'text-summary' } ] }, junitReporter: { outputDir: 'reports/junit', outputFile: 'unit-test-results.xml', useBrowserName: false }\n\n*Why it matters*: Enables Cobertura and JUnit reporting for CI pipelines.\n\n9Ô∏è‚É£ **Update package.json**\n- \"scripts\": {\n\"test:ci\": \"ng test --watch=false --browsers=ChromeHeadless --code-coverage\" }, \"devDependencies\": { \"karma-coverage\": \"^2.0.3\", \"karma-junit-reporter\": \"^2.0.1\", \"chrome-launcher\": \"^0.14.0\" }\n\n*Why it matters*: Adds CI-friendly test command and required packages.\n\n##### **Takeaway**\n\nUnit tests aren‚Äôt just about coverage numbers ‚Äî they‚Äôre about confidence in every merge. By enforcing Angular unit tests in your Azure DevOps pipeline with JUnit, Cobertura, and a 70% threshold, you build a quality gate that scales with your team.",
  "FeedName": "Microsoft Tech Community",
  "EnhancedContent": "## In the rush to ship features, unit tests often become an afterthought. This guide helps you build a scalable Azure DevOps pipeline that enforces Angular test coverage and publishes actionable reports.\n\n#### üîÑ **Pipeline Overview**\n\nThe Pipeline consists of the following key stages:¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬†****\n\n- **Install Dependencies** ‚Äì Ensure Angular CLI and required npm packages are set up.\n- **Run Angular Unit Tests** ‚Äì Execute ng test in CI mode with coverage enabled.\n- **Generate Reports** ‚Äì Store results in JUnit and Cobertura formats.\n- **Publish to ADO** ‚Äì Push test results and coverage report into the Azure DevOps UI.\n- **Verify Coverage** ‚Äì Fail the pipeline if coverage &lt; 70%.****\n\nThis workflow ensures Angular code is continuously validated, with measurable quality checks at every build.\n\n##### Step-by-Step Integration Guide\n\n1Ô∏è‚É£ **Install Angular Dependencies**\n\n```\n- script: |\nnpm cache clean --force npm set \"//<your-org>.jfrog.io/:_authToken=$(npm-auth-token)\" npm config set @your-org:registry https://<your-org>.jfrog.io/artifactory/api/npm/<your-repo>/ npm install -g npm npm install -g @angular/cli npm install -g @angular-devkit/build-angular --force rm -rf node_modules package-lock.json npm install --force displayName: Install npm packages workingDirectory: '$(System.DefaultWorkingDirectory)/unittestintegartion'\n\n```\n\n*Why it matters*: Ensures a clean environment and installs all required packages for Angular testing.\n\n2Ô∏è‚É£ **Run Angular Unit Tests with Coverage**\n\n```\n- script: |\nCHROME_PATH=$(which google-chrome || which chromium-browser) if [ -z \"$CHROME_PATH\" ]; then echo \"Error: Chrome or Chromium is not installed on your system.\" exit 1 fi export CHROME_BIN=\"$CHROME_PATH\" echo \"Running Angular tests\" npm run test:ci -- --code-coverage workingDirectory: '$(System.DefaultWorkingDirectory)/unittestintegration/src/ui' displayName: Run Angular tests for remote continueOnError: true\n\n```\n\n*Why it matters*: Executes tests in CI mode using ChromeHeadless and generates coverage data.\n\n3Ô∏è‚É£ **Create Report Directories**\n\n```\n- script: |\nmkdir -p reports/junit mkdir -p reports/coverage displayName: Create reports directories workingDirectory: '$(System.DefaultWorkingDirectory)/unittestintegration/src/ui'\n\n```\n\n*Why it matters*: Prepares folders for storing JUnit and Cobertura reports.\n\n4Ô∏è‚É£ **Publish Test Results**\n\n```\n- task: PublishTestResults@1\ndisplayName: 'Publish Test Results - Generate Test Report remote' inputs: testResultsFiles: '$(System.DefaultWorkingDirectory)/unittestintegration/src/ui/reports/junit/unit-test-results.xml'\n\n```\n\n*Why it matters*: Makes test results visible in Azure DevOps UI.\n\n5Ô∏è‚É£ **Use .NET Core SDK**\n\n```\n- task: UseDotNet@2\ndisplayName: 'Use .NET Core sdk 9.0.x' inputs: version: 9.0.x\n\n```\n\n*Why it matters*: Required for publishing code coverage results.\n\n6Ô∏è‚É£ **Publish Code Coverage**\n\n```\n- task: PublishCodeCoverageResults@2\ninputs: codeCoverageTool: 'Cobertura' summaryFileLocation: '$(System.DefaultWorkingDirectory)/unittestintegration/src/ui/coverage/code-coverage.xml' reportDirectory: '$(System.DefaultWorkingDirectory)/unittestintegration/src/ui/coverage' displayName: 'Publish UI Code Coverage Results-remote'\n\n```\n\n*Why it matters*: Displays detailed coverage reports in Azure DevOps.\n\n7Ô∏è‚É£ **Enforce 70% Coverage Threshold**\n\n```\n- script: |\nangular_coverage=$(grep -oP 'line-rate=\"(\\d+\\.\\d+)\"' $(System.DefaultWorkingDirectory)/unittestintegration/src/ui/coverage/code-coverage.xml | head -1 | grep -oP '\\d+\\.\\d+') angular_coverage=$(echo \"$angular_coverage * 100\" | bc) if (( $(echo \"$angular_coverage < 70\" | bc -l) )); then echo \"Angular test coverage is below 70%: $angular_coverage%\" exit 1 fi echo \"Angular test coverage is above 70%: $angular_coverage%\" displayName: Verify Angular test coverage-remote\n\n```\n\n*Why it matters*: Automatically fails the pipeline if coverage drops below 70%.\n\n8Ô∏è‚É£ **Configure Karma for CI**\n\n``` coverageReporter: { dir: require('path').join(__dirname, 'coverage'), reporters: [ { type: 'html' }, { type: 'lcov' }, { type: 'cobertura', file: 'code-coverage.xml' }, { type: 'text-summary' } ] }, junitReporter: { outputDir: 'reports/junit', outputFile: 'unit-test-results.xml', useBrowserName: false }\n\n```\n\n*Why it matters*: Enables Cobertura and JUnit reporting for CI pipelines.\n\n9Ô∏è‚É£ **Update package.json**\n\n``` \"scripts\": { \"test:ci\": \"ng test --watch=false --browsers=ChromeHeadless --code-coverage\" }, \"devDependencies\": { \"karma-coverage\": \"^2.0.3\", \"karma-junit-reporter\": \"^2.0.1\", \"chrome-launcher\": \"^0.14.0\" }\n\n```\n\n*Why it matters*: Adds CI-friendly test command and required packages.\n\n##### **Takeaway**\n\nUnit tests aren‚Äôt just about coverage numbers ‚Äî they‚Äôre about confidence in every merge. By enforcing Angular unit tests in your Azure DevOps pipeline with JUnit, Cobertura, and a 70% threshold, you build a quality gate that scales with your team.\n\nUpdated Aug 21, 2025\n\nVersion 1.0\n\n[!\\[Sakshi_Gupta22&#x27;s avatar\\](https://techcommunity.microsoft.com/t5/s/gxcuf89792/m_assets/avatars/default/avatar-10.svg?image-dimensions=50x50)](/users/sakshi_gupta22/2838885) [Sakshi_Gupta22](/users/sakshi_gupta22/2838885) ![Icon for Microsoft rank](https://techcommunity.microsoft.com/t5/s/gxcuf89792/images/cmstNC05WEo0blc?image-dimensions=100x16&amp;constrain-image=true)Microsoft\n\nJoined December 27, 2024\n\n[View Profile](/users/sakshi_gupta22/2838885)\n\n/category/azure/blog/azureinfrastructureblog [Azure Infrastructure Blog](/category/azure/blog/azureinfrastructureblog) Follow this blog board to get notified when there's new activity",
  "FeedLevelAuthor": "rss.livelink.threads-in-node",
  "Link": "https://techcommunity.microsoft.com/t5/azure-infrastructure-blog/enforcing-angular-unit-test-coverage-in-azure-devops-pipelines-a/ba-p/4446485",
  "PubDate": "2025-08-21T15:04:06+00:00"
}
