{
  "ProcessedDate": "2025-08-15 14:40:33",
  "PubDate": "2025-08-13T23:52:31+00:00",
  "Link": "https://techcommunity.microsoft.com/t5/linux-and-open-source-blog/azure-linux-with-os-guard-immutable-container-host-with-code/ba-p/4437473",
  "FeedUrl": "https://techcommunity.microsoft.com/t5/s/gxcuf89792/rss/Category?category.id=Azure",
  "Author": "Sudhanva",
  "FeedName": "Microsoft Tech Community",
  "EnhancedContent": "*This blog is authored by [David Weston](https://techcommunity.microsoft.com/users/david%20weston%20%28dwizzzle%29/125192) (Corporate Vice President, Security @ Microsoft) and [Sudhanva Huruli](https://techcommunity.microsoft.com/users/sudhanva/567919) (Principal PM Core OS @ Microsoft)*\n\n**Azure Linux is the Linux OS Microsoft trusts for its Linux fleet.** Built from the ground up for cloud-native workloads, Azure Linux is optimized for performance, reliability, and security. It powers essential infrastructure throughout Microsoft, including the foundational Azure Kubernetes Service (AKS) platform and more than 80% of Microsoft’s own AKS workloads—which are among the largest and most demanding in the world. Externally, Azure Linux has been available on Azure Kubernetes Service (AKS) for over 2 years and has seen nearly 10X growth in adoption – serving thousands of customers, including many customers from the S&P 500.\n\nAs threat actors continue to grow in sophistication, we increasingly hear customers asking for a locked down container host based on Azure Linux and backed by Microsoft.\n\n# Strengthening Cloud-Native Security\n\nAnnounced at [Microsoft Build 2025](https://youtu.be/lHBo_lDWFcI?si=W36ZdtOJWrUzpUbH&amp;t=1256) by Azure CTO and dCISO Mark Russinovich, Azure Linux with OS Guard (codename Linux Guard) is a container host that builds on the FedRAMP-certified Azure Linux 3.0 base and its sovereign supply chain by enforcing immutability, code integrity and mandatory access control.\n\n**Code Integrity:** Azure Linux with OS Guard builds on top of the immutable property and extends it with [IPE (Integrity Policy Enforcement)](https://docs.kernel.org/admin-guide/LSM/ipe.html). Pioneered by Microsoft for production workloads like Azure Boost, and recently upstreamed in the 6.12 kernel, IPE leverages immutable security properties to verify the integrity and authenticity of all executable code running in user-space. In Azure Linux with OS Guard, IPE ensures that only trusted binaries from *dm-verity* protected volumes are allowed to run, including the container layers. The IPE policy can be extended to meet customer needs, such as narrowing the scope to only specific *dm-verity* volumes or allowing specific files by *fs-verity* digest.\n\n**Immutability:** Azure Linux with OS Guard offers an immutable */usr* directory by mounting it as a *dm-verity* protected volume with a signed root hash. This ensures that any unauthorized changes—whether to the data or the hash—are detected and rejected by the kernel at runtime, effectively locking down the user space against tampering.\n\n**Mandatory Access Control:** Azure Linux with OS Guard also employs SELinux to ensure only trusted users and processes can access sensitive portions of the filesystem.\n\n**Support for Trusted Launch**: Azure Linux with OS Guard supports Trusted Launch by default ensuring measured integrity of boot components, backed by keys stored securely in a vTPM.\n\nWith the protections above, Azure Linux with OS Guard mitigates threats such as:\n\n- **Rootkits and tampering of boot components:** By supporting Secure Boot, Azure Linux with OS Guard aims to ensure integrity of components from the initial stages of boot all the way to user-space.\n- **Container escapes and user tampering**: By enforcing a read-only root filesystem and validating container layers with signed *dm-verity* hashes, Azure Linux with OS Guard looks to ensure core parts of the filesystem cannot be tampered with.\n- **Unauthorized code execution**:\n- Untrusted or tampered code cannot run—even if present inside the container image. This is done through IPE, which blocks execution of binaries not originating from trusted, signed sources.\n- Beyond IPE, SELinux helps restrict access to critical system resources to only those users or processes with appropriate permissions.\n\n# Building on the strong foundation of Azure Linux\n\nAzure Linux with OS Guard is built on Azure Linux and reaps the following benefits out-of-the-box as a result.\n\n**Sovereign Supply Chain Security:** Azure Linux with OS Guard is built on the foundation of Azure Linux’s sovereign supply chain, which includes signed Unified Kernel Images (UKIs). These components are built and signed through official Azure Linux pipelines, ensuring there is a clear trusted Software-Bill-of-Materials (SBOM) for components from firmware to user space.\n\n**Out-of-the-box Compliance and Quantum-Safe Security:** Azure Linux offers robust compliance, featuring FIPS 140-3 certified cryptographic modules and FedRAMP certification for Azure Linux 3.0, which Azure Linux with OS Guard inherits.  As NIST-approved post-quantum algorithms are integrated into our cryptographic modules, Azure Linux with OS Guard will gain access to these enhanced security features concurrently with their availability in Azure Linux.\n\n**Enterprise grade security and support from Microsoft:** Azure Linux follows strict SLAs for patching critical and high CVEs. Furthermore, security researchers across Microsoft help triage CVEs and run penetration tests against Azure Linux frequently to ensure it meets a high bar for security.\n\n# Commitment to Open Source\n\nWe believe that security and transparency go hand in hand. That’s why Azure Linux with OS Guard is not a black box—in fact, it’s built using the same binaries that make up Azure Linux. Many of the technologies like *dm-verity*, SELinux, and IPE are open source and actively maintained in upstream Linux communities.\n\nMicrosoft engineers are contributing back to these projects, including:\n\n- **Script integrity enforcement**: Kernel changes for interpreter enlightenment (e.g., Bash, Python) are being upstreamed to enable secure script execution across the ecosystem.\n- **SELinux policy enhancements**: We’re working to move SELinux configurations into immutable paths under */usr*, aligning with upstream best practices.\n- **Containerd Code Integrity Contributions:** We are actively working with the upstream containerd community to contribute code-integrity for OCI container support using the erofs-snapshotter.\n\nThe team has also made public the build tooling used to procure these images: [GitHub - microsoft/azure-linux-image-tools](https://github.com/microsoft/azure-linux-image-tools).\n\n# What’s Next?\n\n- We’re excited to announce that **Azure Linux with OS Guard will be available soon as an official OS SKU on AKS**. This milestone will allow customers to deploy AKS clusters with Azure Linux with OS Guard using a feature flag & the preview CLI.\n\n# Try it yourself\n\nIf you're ready to explore Azure Linux with OS Guard, we have made the community image available via Microsoft Container Registry so those interested can explore the image and deploy it on an Azure VM via the instructions: [https://aka.ms/azurelinux-osguard-howto](https://aka.ms/azurelinux-osguard-howto).  In this first community edition of Azure Linux with OS Guard, the following capabilities can be explored:\n\n- Secure Boot is enabled by using Trusted Launch VMs with ephemeral keys.\n- */usr* is read-only and backed by *dm-verity*.\n- IPE and SELinux are both in enforcing mode in this image.\n\nUpdated Aug 13, 2025\n\nVersion 3.0\n\n[azure linux](/tag/azure%20linux?nodeId=board%3ALinuxandOpenSourceBlog)\n\n[!\\[Sudhanva&#x27;s avatar\\](https://techcommunity.microsoft.com/t5/s/gxcuf89792/images/dS01Njc5MTktMzA3NjQ3aUZCODUwRDczOEI5NEVBNUE?image-dimensions=50x50)](/users/sudhanva/567919) [Sudhanva](/users/sudhanva/567919) ![Icon for Microsoft rank](https://techcommunity.microsoft.com/t5/s/gxcuf89792/images/cmstNC05WEo0blc?image-dimensions=100x16&amp;constrain-image=true)Microsoft\n\nJoined February 25, 2020\n\n[View Profile](/users/sudhanva/567919)\n\n/category/azure/blog/linuxandopensourceblog [Linux and Open Source Blog](/category/azure/blog/linuxandopensourceblog) Follow this blog board to get notified when there's new activity",
  "Title": "Azure Linux with OS Guard: Immutable Container Host with Code Integrity and Open Source Transparency",
  "FeedLevelAuthor": "rss.livelink.threads-in-node",
  "OutputDir": "_community",
  "Description": "*This blog is authored by [David Weston](https://techcommunity.microsoft.com/users/david%20weston%20%28dwizzzle%29/125192) (Corporate Vice President, Security @ Microsoft) and [Sudhanva Huruli](https://techcommunity.microsoft.com/users/sudhanva/567919) (Principal PM Core OS @ Microsoft)*\n\n**Azure Linux is the Linux OS Microsoft trusts for its Linux fleet.** Built from the ground up for cloud-native workloads, Azure Linux is optimized for performance, reliability, and security. It powers essential infrastructure throughout Microsoft, including the foundational Azure Kubernetes Service (AKS) platform and more than 80% of Microsoft’s own AKS workloads—which are among the largest and most demanding in the world. Externally, Azure Linux has been available on Azure Kubernetes Service (AKS) for over 2 years and has seen nearly 10X growth in adoption – serving thousands of customers, including many customers from the S&P 500.\n\nAs threat actors continue to grow in sophistication, we increasingly hear customers asking for a locked down container host based on Azure Linux and backed by Microsoft.\n\n# Strengthening Cloud-Native Security\n\nAnnounced at [Microsoft Build 2025](https://youtu.be/lHBo_lDWFcI?si=W36ZdtOJWrUzpUbH&t=1256) by Azure CTO and dCISO Mark Russinovich, Azure Linux with OS Guard (codename Linux Guard) is a container host that builds on the FedRAMP-certified Azure Linux 3.0 base and its sovereign supply chain by enforcing immutability, code integrity and mandatory access control.\n\n**Code Integrity:** Azure Linux with OS Guard builds on top of the immutable property and extends it with [IPE (Integrity Policy Enforcement)](https://docs.kernel.org/admin-guide/LSM/ipe.html). Pioneered by Microsoft for production workloads like Azure Boost, and recently upstreamed in the 6.12 kernel, IPE leverages immutable security properties to verify the integrity and authenticity of all executable code running in user-space. In Azure Linux with OS Guard, IPE ensures that only trusted binaries from *dm-verity* protected volumes are allowed to run, including the container layers. The IPE policy can be extended to meet customer needs, such as narrowing the scope to only specific *dm-verity* volumes or allowing specific files by *fs-verity* digest.\n\n**Immutability:** Azure Linux with OS Guard offers an immutable */usr* directory by mounting it as a *dm-verity* protected volume with a signed root hash. This ensures that any unauthorized changes—whether to the data or the hash—are detected and rejected by the kernel at runtime, effectively locking down the user space against tampering.\n\n**Mandatory Access Control:** Azure Linux with OS Guard also employs SELinux to ensure only trusted users and processes can access sensitive portions of the filesystem.\n\n**Support for Trusted Launch**: Azure Linux with OS Guard supports Trusted Launch by default ensuring measured integrity of boot components, backed by keys stored securely in a vTPM.\n\nWith the protections above, Azure Linux with OS Guard mitigates threats such as:\n\n- **Rootkits and tampering of boot components:** By supporting Secure Boot, Azure Linux with OS Guard aims to ensure integrity of components from the initial stages of boot all the way to user-space.\n- **Container escapes and user tampering**: By enforcing a read-only root filesystem and validating container layers with signed *dm-verity* hashes, Azure Linux with OS Guard looks to ensure core parts of the filesystem cannot be tampered with.\n- **Unauthorized code execution**:\n- Untrusted or tampered code cannot run—even if present inside the container image. This is done through IPE, which blocks execution of binaries not originating from trusted, signed sources.\n- Beyond IPE, SELinux helps restrict access to critical system resources to only those users or processes with appropriate permissions.\n\n# Building on the strong foundation of Azure Linux\n\nAzure Linux with OS Guard is built on Azure Linux and reaps the following benefits out-of-the-box as a result.\n\n**Sovereign Supply Chain Security:** Azure Linux with OS Guard is built on the foundation of Azure Linux’s sovereign supply chain, which includes signed Unified Kernel Images (UKIs). These components are built and signed through official Azure Linux pipelines, ensuring there is a clear trusted Software-Bill-of-Materials (SBOM) for components from firmware to user space.\n\n**Out-of-the-box Compliance and Quantum-Safe Security:** Azure Linux offers robust compliance, featuring FIPS 140-3 certified cryptographic modules and FedRAMP certification for Azure Linux 3.0, which Azure Linux with OS Guard inherits. As NIST-approved post-quantum algorithms are integrated into our cryptographic modules, Azure Linux with OS Guard will gain access to these enhanced security features concurrently with their availability in Azure Linux.\n\n**Enterprise grade security and support from Microsoft:** Azure Linux follows strict SLAs for patching critical and high CVEs. Furthermore, security researchers across Microsoft help triage CVEs and run penetration tests against Azure Linux frequently to ensure it meets a high bar for security.\n\n# Commitment to Open Source\n\nWe believe that security and transparency go hand in hand. That’s why Azure Linux with OS Guard is not a black box—in fact, it’s built using the same binaries that make up Azure Linux. Many of the technologies like *dm-verity*, SELinux, and IPE are open source and actively maintained in upstream Linux communities.\n\nMicrosoft engineers are contributing back to these projects, including:\n\n- **Script integrity enforcement**: Kernel changes for interpreter enlightenment (e.g., Bash, Python) are being upstreamed to enable secure script execution across the ecosystem.\n- **SELinux policy enhancements**: We’re working to move SELinux configurations into immutable paths under */usr*, aligning with upstream best practices.\n- **Containerd Code Integrity Contributions:** We are actively working with the upstream containerd community to contribute code-integrity for OCI container support using the erofs-snapshotter.\n\nThe team has also made public the build tooling used to procure these images: [GitHub - microsoft/azure-linux-image-tools](https://github.com/microsoft/azure-linux-image-tools).\n\n# What’s Next?\n\n- We’re excited to announce that **Azure Linux with OS Guard will be available soon as an official OS SKU on AKS**. This milestone will allow customers to deploy AKS clusters with Azure Linux with OS Guard using a feature flag & the preview CLI.\n\n# Try it yourself\n\nIf you're ready to explore Azure Linux with OS Guard, we have made the community image available via Microsoft Container Registry so those interested can explore the image and deploy it on an Azure VM via the instructions: [https://aka.ms/azurelinux-osguard-howto](https://aka.ms/azurelinux-osguard-howto). In this first community edition of Azure Linux with OS Guard, the following capabilities can be explored:\n\n- Secure Boot is enabled by using Trusted Launch VMs with ephemeral keys.\n- */usr* is read-only and backed by *dm-verity*.\n- IPE and SELinux are both in enforcing mode in this image.",
  "Tags": []
}
