{
  "Description": "# Introducing the Microsoft Agent Framework: A Unified Foundation for AI Agents and Workflows\n\nThe landscape of AI development is evolving rapidly, and Microsoft is at the forefront with the release of the [**Microsoft Agent Framework**](https://aka.ms/AgentFramework) an open-source SDK designed to empower developers to build intelligent, multi-agent systems with ease and precision. Whether you're working in .NET or Python, this framework offers a unified, extensible foundation that merges the best of **Semantic Kernel** and **AutoGen**, while introducing powerful new capabilities for agent orchestration and workflow design.\n\n[Introducing Microsoft Agent Framework: The Open-Source Engine for Agentic AI Apps | Azure AI Foundry Blog](https://devblogs.microsoft.com/foundry/introducing-microsoft-agent-framework-the-open-source-engine-for-agentic-ai-apps/) [Introducing Microsoft Agent Framework | Microsoft Azure Blog](https://azure.microsoft.com/en-us/blog/introducing-microsoft-agent-framework/)\n\n## Why Another Agent Framework?\n\nBoth Semantic Kernel and AutoGen have pioneered agentic development, Semantic Kernel with its enterprise-grade features and AutoGen with its research-driven abstractions. The Microsoft Agent Framework is the **next generation** of both, built by the same teams to unify their strengths:\n\n- **AutoGen’s simplicity** in multi-agent orchestration.\n- **Semantic Kernel’s robustness** in thread-based state management, telemetry, and type safety.\n- **New capabilities** like graph-based workflows, checkpointing, and human-in-the-loop support\n\nThis convergence means developers no longer have to choose between experimentation and production. The Agent Framework is designed to scale from single-agent prototypes to complex, enterprise-ready systems\n\n## Core Capabilities\n\n### AI Agents\n\nAI agents are autonomous entities powered by LLMs that can process user inputs, make decisions, call tools and MCP servers, and generate responses. They support providers like **Azure OpenAI**, **OpenAI**, and **Azure AI**, and can be enhanced with:\n\n- **Agent threads** for state management.\n- **Context providers** for memory.\n- **Middleware** for action interception.\n- **MCP clients** for tool integration\n\nUse cases include customer support, education, code generation, research assistance, and more—especially where tasks are dynamic and underspecified.\n\n### Workflows\n\nWorkflows are graph-based orchestrations that connect multiple agents and functions to perform complex, multi-step tasks. They support:\n\n- **Type-based routing**\n- **Conditional logic**\n- **Checkpointing**\n- **Human-in-the-loop interactions**\n- **Multi-agent orchestration patterns** (sequential, concurrent, hand-off, Magentic)\n\nWorkflows are ideal for structured, long-running processes that require reliability and modularity.\n\n## Developer Experience\n\nThe Agent Framework is designed to be intuitive and powerful:\n\n- **Installation**:\n- Python:\n\npip install agent-framework\n- .NET:\n\ndotnet add package Microsoft.Agents.AI\n\n**Integration**:\n\n- Works with **Foundry SDK**, **MCP SDK**, **A2A SDK**, and **M365 Copilot Agents**\n- **Samples and Manifests**:\n- Explore declarative agent manifests and code samples\n- **Learning Resources**:\n- [Microsoft Learn modules](https://learn.microsoft.com/training/paths/develop-ai-agents-on-azure/)\n- [AI Agents for Beginners](https://github.com/microsoft/ai-agents-for-beginners)\n- [AI Show demos](https://aka.ms/AIShow/NewAgentFramework)\n- [Azure AI Foundry Discord community](https://aka.ms/foundry/discord)\n\n## Migration and Compatibility\n\nIf you're currently using Semantic Kernel or AutoGen, migration guides are available to help you transition smoothly. The framework is designed to be backward-compatible where possible, and future updates will continue to support community contributions via the [GitHub repository](https://github.com/microsoft/agent-framework).\n\n## Important Considerations\n\n- The Agent Framework is in **public preview**. Feedback and issues are welcome on the [GitHub repository](https://github.com/microsoft/agent-framework).\n- When integrating with third-party servers or agents, review data sharing practices and compliance boundaries carefully.\n\nThe Microsoft Agent Framework marks a pivotal moment in AI development, bringing together research innovation and enterprise readiness into a single, open-source foundation. Whether you're building your first agent or orchestrating a fleet of them, this framework gives you the tools to do it safely, scalably, and intelligently.\n\nReady to get started? [Download the SDK](https://aka.ms/AgentFramework), explore the [documentation](https://aka.ms/AgentFramework/Docs), and join the community shaping the future of AI agents.",
  "OutputDir": "_community",
  "ProcessedDate": "2025-10-01 15:04:12",
  "PubDate": "2025-10-01T14:14:57+00:00",
  "FeedName": "Microsoft Tech Community",
  "Link": "https://techcommunity.microsoft.com/t5/microsoft-developer-community/introducing-the-microsoft-agent-framework/ba-p/4458377",
  "Tags": [],
  "Title": "Introducing the Microsoft Agent Framework",
  "EnhancedContent": "# Introducing the Microsoft Agent Framework: A Unified Foundation for AI Agents and Workflows\n\nThe landscape of AI development is evolving rapidly, and Microsoft is at the forefront with the release of the [**Microsoft Agent Framework**](https://aka.ms/AgentFramework) an open-source SDK designed to empower developers to build intelligent, multi-agent systems with ease and precision. Whether you're working in .NET or Python, this framework offers a unified, extensible foundation that merges the best of **Semantic Kernel** and **AutoGen**, while introducing powerful new capabilities for agent orchestration and workflow design.\n\n[Introducing Microsoft Agent Framework: The Open-Source Engine for Agentic AI Apps | Azure AI Foundry Blog](https://devblogs.microsoft.com/foundry/introducing-microsoft-agent-framework-the-open-source-engine-for-agentic-ai-apps/) [Introducing Microsoft Agent Framework | Microsoft Azure Blog](https://azure.microsoft.com/en-us/blog/introducing-microsoft-agent-framework/)\n\n## Why Another Agent Framework?\n\nBoth Semantic Kernel and AutoGen have pioneered agentic development, Semantic Kernel with its enterprise-grade features and AutoGen with its research-driven abstractions. The Microsoft Agent Framework is the **next generation** of both, built by the same teams to unify their strengths:\n\n- **AutoGen’s simplicity** in multi-agent orchestration.\n- **Semantic Kernel’s robustness** in thread-based state management, telemetry, and type safety.\n- **New capabilities** like graph-based workflows, checkpointing, and human-in-the-loop support\n\nThis convergence means developers no longer have to choose between experimentation and production. The Agent Framework is designed to scale from single-agent prototypes to complex, enterprise-ready systems\n\n## Core Capabilities\n\n### AI Agents\n\nAI agents are autonomous entities powered by LLMs that can process user inputs, make decisions, call tools and MCP servers, and generate responses. They support providers like **Azure OpenAI**, **OpenAI**, and **Azure AI**, and can be enhanced with:\n\n- **Agent threads** for state management.\n- **Context providers** for memory.\n- **Middleware** for action interception.\n- **MCP clients** for tool integration\n\nUse cases include customer support, education, code generation, research assistance, and more—especially where tasks are dynamic and underspecified.\n\n### Workflows\n\nWorkflows are graph-based orchestrations that connect multiple agents and functions to perform complex, multi-step tasks. They support:\n\n- **Type-based routing**\n- **Conditional logic**\n- **Checkpointing**\n- **Human-in-the-loop interactions**\n- **Multi-agent orchestration patterns** (sequential, concurrent, hand-off, Magentic)\n\nWorkflows are ideal for structured, long-running processes that require reliability and modularity.\n\n## Developer Experience\n\nThe Agent Framework is designed to be intuitive and powerful:\n\n- **Installation**:\n- Python:\n\npip install agent-framework\n- .NET:\n\ndotnet add package Microsoft.Agents.AI\n\n**Integration**:\n\n- Works with **Foundry SDK**, **MCP SDK**, **A2A SDK**, and **M365 Copilot Agents**\n- **Samples and Manifests**:\n- Explore declarative agent manifests and code samples\n- **Learning Resources**:\n- [Microsoft Learn modules](https://learn.microsoft.com/training/paths/develop-ai-agents-on-azure/)\n- [AI Agents for Beginners](https://github.com/microsoft/ai-agents-for-beginners)\n- [AI Show demos](https://aka.ms/AIShow/NewAgentFramework)\n- [Azure AI Foundry Discord community](https://aka.ms/foundry/discord)\n\n## Migration and Compatibility\n\nIf you're currently using Semantic Kernel or AutoGen, migration guides are available to help you transition smoothly. The framework is designed to be backward-compatible where possible, and future updates will continue to support community contributions via the [GitHub repository](https://github.com/microsoft/agent-framework).\n\n## Important Considerations\n\n- The Agent Framework is in **public preview**. Feedback and issues are welcome on the [GitHub repository](https://github.com/microsoft/agent-framework).\n- When integrating with third-party servers or agents, review data sharing practices and compliance boundaries carefully.\n\nThe Microsoft Agent Framework marks a pivotal moment in AI development, bringing together research innovation and enterprise readiness into a single, open-source foundation. Whether you're building your first agent or orchestrating a fleet of them, this framework gives you the tools to do it safely, scalably, and intelligently.\n\nReady to get started? [Download the SDK](https://aka.ms/AgentFramework), explore the [documentation](https://aka.ms/AgentFramework/Docs), and join the community shaping the future of AI agents.\n\nUpdated Oct 01, 2025\n\nVersion 2.0\n\n[agent support](/tag/agent%20support?nodeId=board%3AAzureDevCommunityBlog)\n\n[agents](/tag/agents?nodeId=board%3AAzureDevCommunityBlog)\n\n[ai](/tag/ai?nodeId=board%3AAzureDevCommunityBlog)\n\n[ai foundry](/tag/ai%20foundry?nodeId=board%3AAzureDevCommunityBlog)\n\n[azure ai foundry](/tag/azure%20ai%20foundry?nodeId=board%3AAzureDevCommunityBlog)\n\n[get started](/tag/get%20started?nodeId=board%3AAzureDevCommunityBlog)\n\n[github](/tag/github?nodeId=board%3AAzureDevCommunityBlog)\n\n[llm](/tag/llm?nodeId=board%3AAzureDevCommunityBlog)\n\n[python](/tag/python?nodeId=board%3AAzureDevCommunityBlog)\n\n[vs code](/tag/vs%20code?nodeId=board%3AAzureDevCommunityBlog)\n\n[!\\[Lee_Stott&#x27;s avatar\\](https://techcommunity.microsoft.com/t5/s/gxcuf89792/images/dS0yMTA1NDYtODM5MjVpMDI2ODNGQTMwMzAwNDFGQQ?image-dimensions=50x50)](/users/lee_stott/210546) [Lee_Stott](/users/lee_stott/210546) ![Icon for Microsoft rank](https://techcommunity.microsoft.com/t5/s/gxcuf89792/images/cmstNC05WEo0blc?image-dimensions=100x16&amp;constrain-image=true)Microsoft\n\nJoined September 25, 2018\n\n[View Profile](/users/lee_stott/210546)\n\n/category/azure/blog/azuredevcommunityblog [Microsoft Developer Community Blog](/category/azure/blog/azuredevcommunityblog) Follow this blog board to get notified when there's new activity",
  "FeedUrl": "https://techcommunity.microsoft.com/t5/s/gxcuf89792/rss/Category?category.id=Azure",
  "Author": "Lee_Stott",
  "FeedLevelAuthor": "rss.livelink.threads-in-node"
}
