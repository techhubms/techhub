{
  "Link": "https://techcommunity.microsoft.com/t5/microsoft-developer-community/use-copilot-and-mcp-to-query-microsoft-learn-docs/ba-p/4455835",
  "Title": "Use Copilot and MCP to query Microsoft Learn Docs",
  "FeedLevelAuthor": "rss.livelink.threads-in-node",
  "FeedUrl": "https://techcommunity.microsoft.com/t5/s/gxcuf89792/rss/Category?category.id=Azure",
  "Tags": [],
  "PubDate": "2025-09-23T07:00:00+00:00",
  "EnhancedContent": "## Are you ready to take your Azure development workflow to the next level? In this post, we‚Äôll walk through how to use GitHub Copilot in Agent Mode‚Äîpaired with MCP (Model Context Protocol)‚Äîto get trusted, grounded answers from Microsoft Learn Docs, right inside your coding workspace.\n\nAre you ready to take your Azure development workflow to the next level? In this post, we‚Äôll walk through how to use GitHub Copilot in Agent Mode‚Äîpaired with MCP (Model Context Protocol) servers‚Äîto get trusted, grounded answers from Microsoft Learn Docs, right inside your coding workspace.\n\nWhether you‚Äôre tired of switching tabs to search documentation or want to ensure your AI assistant‚Äôs answers are always accurate, this guide will show you how to streamline your workflow and boost your productivity.\n\n## üöÄ Why Use Copilot with MCP Servers?\n\nHave you ever asked your AI assistant about Microsoft technologies and wondered if the answer was truly reliable? With MCP, you can connect Copilot directly to official Microsoft documentation‚Äîno more second-guessing or uploading your own grounding data.\n\n## üîå What is MCP (Model Context Protocol)?\n\n[MCP](https://modelcontextprotocol.io/docs/getting-started/intro) is a standardized protocol that allows AI tools to connect seamlessly with external data, tools, and resources‚Äîwithout custom integrations. Here‚Äôs how it works:\n\n- **Hosts:** AI tools or environments (like VS Code or Copilot Studio) that initiate data access.\n- **Clients:** Protocol clients (like GitHub Copilot) that manage connections with servers.\n- **Servers:** Lightweight programs that expose specific capabilities (tools, resources, prompts) through MCP.\n\nYou can browse available MCP servers‚Äîincluding the Microsoft Docs MCP Server‚Äîat [https://code.visualstudio.com/mcp](https://code.visualstudio.com/mcp).\n\n## üõ†Ô∏è Installing and Using the Microsoft Docs MCP Server in VS Code\n\n1. **Find the Server:** Visit the [MCP server list](https://code.visualstudio.com/mcp) and locate the [Microsoft Docs MCP Server](https://github.com/microsoftdocs/mcp).\n2. **Install:** Click the blue 'Install' button to add it to VS Code.\n3. **Activate Agent Mode:** In VS Code, open GitHub Copilot chat, switch to Agent Mode, and select your preferred model (e.g., GPT-5).\n4. **Enable the Server:** Expand the tools to ensure the MCP server is installed and enabled.\n5. **Ask Away:** Try a question like, ‚ÄúDoes Azure AI Foundry offer a Python SDK?‚Äù Copilot will route your query to the MCP server and return grounded answers from Microsoft Learn Docs‚Äîso you know you‚Äôre getting the real deal. You'll see that Copilot will ask permission to use the 'microsoft\\_docs\\_search' tool offered by the MCP server. Click on 'Allow' to let it proceed.\n\n## üìÇ Grounding Azure Queries with Prompt Files\n\nTo make sure your Azure and Microsoft tech-related queries always use the Microsoft Docs MCP Server, leverage the **Prompt Files** feature in Copilot Agent Mode:\n\n- Click the settings icon, then 'Prompt Files', and define a new markdown file (e.g., *msdocs-assistant.prompt.md*).\n- Add your guidelines or instructions, including the ask to *always use the Microsoft Docs MCP server when answering Microsoft tools-related questions.*\n- You can set prompt files at the user profile (default option) or workspace level for maximum flexibility.\n\n## üêç Going Further: Build a Custom Python Client\n\nWant even more control? You can build a custom Python client to invoke the Microsoft Docs MCP server directly via streamable http. This approach gives you maximum flexibility and lets you overcome product-specific constraints.\n\n- Create a new chat in Copilot and configure your model.\n- Provide instructions to create a Python client that queries the MCP server - to explore tools and resources - and performs a test call.\n- Review Copilot code and make adjustments if needed\n- Create a virtual environment and install the required packages to execute the Python MCP client - *pip install \"mcp[cli]\"*\n- Test the client\n- Optionally, commit your code to a GitHub repo for version control. TIP: GitHub Copilot can help with this task as well!\n\n## üé¨ Useful Resources\n\n1. Watch the whole step-by-step video tutorial\n2. Review my instruction files and MCP client code [in this repo](https://github.com/carlotta94c/ms-docs-mcp-client) (DISCLAIMER: all the files in the repo have been created by using GitHub Copilot)\n3. Check the whole video series, for more tips and tricks about using GitHub Copilot in VS Code to boost your developer workflow\n4. New MCP? Compete the MCP for Beginners course at [https://aka.ms/mc-for-beginners](https://aka.ms/mc-for-beginners)\n\nUpdated Sep 22, 2025\n\nVersion 1.0\n\n[agents](/tag/agents?nodeId=board%3AAzureDevCommunityBlog)\n\n[ai](/tag/ai?nodeId=board%3AAzureDevCommunityBlog)\n\n[developer](/tag/developer?nodeId=board%3AAzureDevCommunityBlog)\n\n[genai](/tag/genai?nodeId=board%3AAzureDevCommunityBlog)\n\n[github](/tag/github?nodeId=board%3AAzureDevCommunityBlog)\n\n[mcp](/tag/mcp?nodeId=board%3AAzureDevCommunityBlog)\n\n[vs code](/tag/vs%20code?nodeId=board%3AAzureDevCommunityBlog)\n\n[!\\[carlottacaste&#x27;s avatar\\](https://techcommunity.microsoft.com/t5/s/gxcuf89792/images/dS0xMzEwMTYxLThaUHBDZg?image-coordinates=0%2C31%2C937%2C968&amp;image-dimensions=50x50)](/users/carlottacaste/1310161) [carlottacaste](/users/carlottacaste/1310161) ![Icon for Microsoft rank](https://techcommunity.microsoft.com/t5/s/gxcuf89792/images/cmstNC05WEo0blc?image-dimensions=100x16&amp;constrain-image=true)Microsoft\n\nJoined February 17, 2022\n\n[View Profile](/users/carlottacaste/1310161)\n\n/category/azure/blog/azuredevcommunityblog [Microsoft Developer Community Blog](/category/azure/blog/azuredevcommunityblog) Follow this blog board to get notified when there's new activity",
  "ProcessedDate": "2025-09-23 07:13:41",
  "Description": "Are you ready to take your Azure development workflow to the next level? In this post, we‚Äôll walk through how to use GitHub Copilot in Agent Mode‚Äîpaired with MCP (Model Context Protocol) servers‚Äîto get trusted, grounded answers from Microsoft Learn Docs, right inside your coding workspace.\n\nWhether you‚Äôre tired of switching tabs to search documentation or want to ensure your AI assistant‚Äôs answers are always accurate, this guide will show you how to streamline your workflow and boost your productivity.\n\n## üöÄ Why Use Copilot with MCP Servers?\n\nHave you ever asked your AI assistant about Microsoft technologies and wondered if the answer was truly reliable? With MCP, you can connect Copilot directly to official Microsoft documentation‚Äîno more second-guessing or uploading your own grounding data.\n\n## üîå What is MCP (Model Context Protocol)?\n\n[MCP](https://modelcontextprotocol.io/docs/getting-started/intro) is a standardized protocol that allows AI tools to connect seamlessly with external data, tools, and resources‚Äîwithout custom integrations. Here‚Äôs how it works:\n\n- **Hosts:** AI tools or environments (like VS Code or Copilot Studio) that initiate data access.\n- **Clients:** Protocol clients (like GitHub Copilot) that manage connections with servers.\n- **Servers:** Lightweight programs that expose specific capabilities (tools, resources, prompts) through MCP.\n\nYou can browse available MCP servers‚Äîincluding the Microsoft Docs MCP Server‚Äîat [https://code.visualstudio.com/mcp](https://code.visualstudio.com/mcp).\n\n## üõ†Ô∏è Installing and Using the Microsoft Docs MCP Server in VS Code\n\n1. **Find the Server:** Visit the [MCP server list](https://code.visualstudio.com/mcp) and locate the [Microsoft Docs MCP Server](https://github.com/microsoftdocs/mcp).\n2. **Install:** Click the blue 'Install' button to add it to VS Code.\n3. **Activate Agent Mode:** In VS Code, open GitHub Copilot chat, switch to Agent Mode, and select your preferred model (e.g., GPT-5).\n4. **Enable the Server:** Expand the tools to ensure the MCP server is installed and enabled.\n5. **Ask Away:** Try a question like, ‚ÄúDoes Azure AI Foundry offer a Python SDK?‚Äù Copilot will route your query to the MCP server and return grounded answers from Microsoft Learn Docs‚Äîso you know you‚Äôre getting the real deal. You'll see that Copilot will ask permission to use the 'microsoft\\_docs\\_search' tool offered by the MCP server. Click on 'Allow' to let it proceed. ![]()\n\n## üìÇ Grounding Azure Queries with Prompt Files\n\nTo make sure your Azure and Microsoft tech-related queries always use the Microsoft Docs MCP Server, leverage the **Prompt Files** feature in Copilot Agent Mode:\n\n- Click the settings icon, then 'Prompt Files', and define a new markdown file (e.g., *msdocs-assistant.prompt.md*).\n- Add your guidelines or instructions, including the ask to *always use the Microsoft Docs MCP server when answering Microsoft tools-related questions.*\n- You can set prompt files at the user profile (default option) or workspace level for maximum flexibility.![]()\n\n## üêç Going Further: Build a Custom Python Client\n\nWant even more control? You can build a custom Python client to invoke the Microsoft Docs MCP server directly via streamable http. This approach gives you maximum flexibility and lets you overcome product-specific constraints.\n\n- Create a new chat in Copilot and configure your model.\n- Provide instructions to create a Python client that queries the MCP server - to explore tools and resources - and performs a test call.\n- Review Copilot code and make adjustments if needed\n- Create a virtual environment and install the required packages to execute the Python MCP client - *pip install \"mcp[cli]\"*\n- Test the client\n- Optionally, commit your code to a GitHub repo for version control. TIP: GitHub Copilot can help with this task as well!\n\n![]()\n\n## üé¨ Useful Resources\n\n1. Watch the whole step-by-step video tutorial\n2. Review my instruction files and MCP client code [in this repo](https://github.com/carlotta94c/ms-docs-mcp-client) (DISCLAIMER: all the files in the repo have been created by using GitHub Copilot)\n3. Check the whole video series, for more tips and tricks about using GitHub Copilot in VS Code to boost your developer workflow\n4. New MCP? Compete the MCP for Beginners course at [https://aka.ms/mc-for-beginners](https://aka.ms/mc-for-beginners)",
  "FeedName": "Microsoft Tech Community",
  "OutputDir": "_community",
  "Author": "carlottacaste"
}
