{
  "PubDate": "2025-09-15T14:49:18+00:00",
  "FeedLevelAuthor": "rss.livelink.threads-in-node",
  "OutputDir": "_community",
  "FeedName": "Microsoft Tech Community",
  "Link": "https://techcommunity.microsoft.com/t5/analytics-on-azure-blog/explore-microsoft-fabric-data-agent-azure-ai-foundry-for-agentic/ba-p/4453709",
  "Title": "Explore Microsoft Fabric Data Agent & Azure AI Foundry for agentic solutions",
  "Author": "GISV-PSA-MSFT",
  "ProcessedDate": "2025-09-15 15:13:53",
  "Tags": [],
  "FeedUrl": "https://techcommunity.microsoft.com/t5/s/gxcuf89792/rss/Category?category.id=Azure",
  "EnhancedContent": "Contributors for this blogpost:  Jeet J & Ritaja S\n\n**Context & Objective**\n\nOver the past year, Gen AI apps have expanded significantly across enterprises. The agentic AI era is here, and the Microsoft ecosystem helps enable end-to-end acceleration of agentic AI apps in production. In this blog, we'll cover how both low-code business analysts and pro-code developers can use the Microsoft stack to build reusable agentic apps for their organizations.\n\nProfessionals in the Microsoft ecosystem are starting to build advanced agentic generative AI solutions using Microsoft AI Services and Azure AI Foundry, which supports both open source and industry models. Combined with the advancements in Microsoft Fabric, these tools enable robust, industry-specific applications. This blog post explains how to develop multi-agent solutions for various industries using Azure AI Foundry, Copilot Studio, and Fabric. Disclaimer: This blogpost is for educational purposes only and walks through the process of using the relevant services without ton of custom code; teams must follow engineering best practices—including development, automated deployment, testing, security, and responsible AI—before any production deployment.\n\n**What to expect**\n\nIn-Focus: Our goal is to help the reader explore specific industry use cases and understand the concept of building multi-agent solutions. In our case, we will focus on the insurance and financial services use case, use Fabric Notebooks to create sample (fake) datasets, utilize simple click-through based workflow to build-and-configure three agents (both on Fabric and Azure AI Foundry), tie them together and offer the solution via Teams or Microsoft Copilot using the new M365 Agents Toolkit.\n\nOut-of-Focus: This blog post will not cover the fundamentals of Azure AI Services, Azure AI Foundry, or the various components of Microsoft Fabric. It also won’t cover the different ways (low-code or pro-code) to build agents, orchestration frameworks (Semantic Kernel, Langchain, AutoGen, etc.) for orchestrating the agents, or hosting options (Azure App Service – Web App, Azure Kubernetes Service, Azure Container Apps, Azure Functions ).\n\nPlease review the pointers listed towards the end to gain a holistic understanding of building and deploying mission-critical generative AI solutions.\n\n**Logical Architecture** of Multi-Agent Solution utilizing Microsoft Fabric Data Agent and Azure AI Foundry Agent.\n\n**Fabric & Azure AI Foundry – Pro-code Agentic path**\n\n**Prerequisites**\n\na. Access to Azure Tenant & Subscription b. Work with Azure tenant administrator to have appropriate Azure Roles and Capacity to provision Azure Resources (services) and Deploy AI Models in certain regions. c. [A paid F2 or higher Fabric capacity resource](https://learn.microsoft.com/en-us/fabric/fundamentals/copilot-fabric-overview#available-regions-for-azure-openai-service) – Important to note that the Fabric compute capacity can be paused and resumed. Pause in case you wish to save costs after your learning.\n\n| | | | --- | --- |\n\nd. Access Fabric Admin Portal [Power BI](https://app.powerbi.com/admin-portal/tenantSettings?experience=power-bi) for enabling these settings\n\n&gt; Fabric data agent tenant settings is enabled.\n\n&gt; Copilot tenant switch is enabled. &gt; Optional: Cross-geo processing for AI is enabled. (depends on your region and data sovereignty requirements) &gt; Optional: Cross-geo storing for AI is enabled. (depends on your region)\n\ne. At least one of these: Fabric Data Warehouse, Fabric Lakehouse, one or more Power BI semantic models, or a KQL database with data. This blog post will cover how to create sample datasets using Fabric Notebooks.\n\nf. [Power BI semantic models via XMLA endpoints tenant switch](https://learn.microsoft.com/en-us/fabric/data-science/data-agent-tenant-settings) is enabled for Power BI semantic model data sources.\n\n**Walkthrough/Set-up**\n\n1. One-time setup for Fabric Workspace and all agents\n\na)      Visit [https://app.powerbi.com](https://app.powerbi.com./)\n\nClick “New workspace” button to create a new workspace, give it a name and ensure that it is tied/associated to the Fabric Capacity you have provisioned.\n\n| | | --- |\n\nb)   Click Workspace settings of the newly created Workspace\n\n| | | --- |\n\nc)    Review the information in License info.  If the workspace isn’t associated with your newly created Fabric Capacity, please do the proper association (link the Fabric capacity to the workspace) and wait for 5-10 mins.\n\n| | | --- |\n\n2. Create an Insurance Agent\n\na) Create a new Lakehouse in your Fabric Workspace. Change the name to InsuranceLakehouse\n\nb) Create a new Fabric Notebook, assign a name, and associate the Insurance Lakehouse with it.\n\n| | | --- |\n\nc) Add the following Pyspark (Python) code-snippets in the Notebook. i)   Faker library for Fabric Notebook ii)  Insurance Sample Dataset in Fabric Notebook iii) Run both cells to generate the sample Insurance dataset.\n\nd) Create a new Fabric data agent, give it a name and add the Data Source (InsuranceLakehouse). i) Ensure that the Insurance Lakehouse is added as the data source in the Insurance Fabric data agent. ii) Click AI instructions button first to paste the sample instructions and finally the Publish button.\n\n| | | --- |\n\niii) Paste the sample instructions in the field. A churn is represented by number 1. Calculate churn rate as : total number of churns (TC) / (TT) total count of churn entries. When asked to calculate churn for each policy type then TT should be total count of churn of that policy type e.g Life, legal.\n\n| | | --- |\n\niv) Make sure to hit the Publish button.\n\nv) Capture two values from the URL and store them in secure/private place. We will use them to configure the knowledge source in Azure AI Foundry Agent.\n\nhttps://app.powerbi.com/groups/&lt;WORKSPACE-ID&gt;/aiskills/&lt;ARTIFACT-ID&gt;?experience=power-bi\n\ne) Create Azure AI Agent on Azure AI Foundry and use Fabric Data Agent as the Knowledge Source\n\ni) Visit https://ai.azure/com\n\nii) Create new Azure AI Project and deploy gpt-4o-mini model (as an example model) in the region where the model is available.\n\niii) Create new Azure AI Foundry Agent by clicking the “New agent” button. Give it a name (for e.g. AgentforInsurance)\n\niv) Paste the sample Instructions in the Azure AI Agent as follows\n\nUse Fabric data agent tool to answer questions related to Insurance data. Fabric data agent as a tool has access to insurance data tables: Claims (amount, date, status), Customer (age, address, occupation, etc), Policy (premium amount, policy type: life insurance, auto insurance, etc)\n\n| | | --- |\n\nv) On the right-hand pane, click “+Add” button next to Knowledge.\n\nvi) Choose an existing Fabric data agent connection or click the new Connection.\n\nvii) In the next dialog, plug-in the values of the Workspace and Artifact ID you captured above,\n\nEnsure that “is secret” is checked, give a name to the connection and hit the Connect button.\n\n| | | | --- | --- |\n\nviii) Add the Code Interpreter as the tool in the Azure AI Foundry agent by clicking +Add next to Actions and selecting Code Interpreter.\n\n| | | | --- | --- |\n\nix) Test the agent by clicking “Try in playground” button\n\n| | | | --- | --- |\n\nx) To test the Agent, you can try out these sample questions: What is the churn rate across my different insurance policy types What’s the month over month claims change in % for each insurance type? Show me graph view of month over month claims change in % for each insurance type for the year 2025 only Based on month over month claims change for the year 2025, can you show the forecast for the next 3 months in a graph?\n\nf) Exposing the Fabric data agent to end users: We will explore this in the Copilot Studio Section\n\n**Fabric & Copilot Studio – Low-code agentic path******\n\nPrerequisites\n\n- For Copilot Studio, you have 3 options to work with:\n- Copilot Studio [trial](https://learn.microsoft.com/en-us/microsoft-copilot-studio/sign-up-individual)  or\n- Copilot Studio [license](https://learn.microsoft.com/en-us/microsoft-copilot-studio/billing-licensing) or\nCopilot Studio Pay as you go (connected to your Azure billing). Follow steps here to setup: [Copilot Studio licensing - Microsoft Copilot Studio | Microsoft Learn](https://learn.microsoft.com/en-us/microsoft-copilot-studio/billing-licensing#copilot-studio-pay-as-you-go)\n- Once you have Copilot Studio set up, navigate to [https://copilotstudio.microsoft.com/](https://copilotstudio.microsoft.com/) and start creating a new agent – Click on “create” and then “New Agent”\n\n**Walkthrough/Set-up:**\n- Follow steps from “Fabric & Azure AI Foundry section” to create the Fabric Lakehouse and\n- You could create the new agent by describing step by step in natural language but for this exercise we will “skip to configure” (button):\n- Give the agent a name, add a helpful description (suggestion, add: Agent that has access to Insurance data and helps with data driven insights from Policy, Claims and Customer information). Then add the agent instruction prompt: “Answer questions related to Insurance data, you have access to insurance data agent, use the agent to gather insights from insurance Lakehouse containing customer, policy and claim information.” Finally click on “Create”\n- You should have the following setup like below:\n- Next, we want to add another agent for this agent to use – in this case this will be our Fabric Data Agent. Click on “Agents”:\n- Next click on “Add” and add agent. From the screen click on Microsoft Fabric:\n- If you haven’t set-up a connection to Fabric from Copilot Studio, you will be prompted to create a new connection, follow the prompts to sign in with your user and add a connection. Once that is done click “Next” to continue:\n\n- From the Fabric screen, select the appropriate data agent and click “Next”:\n\n- On the next screen, name the agent appropriately and use a friendly description “Agent that answers questions from the insurance lakehouse knowledge, has access to claims, policies and customer information” and finally click on “Add Agent”:\n- On the “Tools” section click on refresh to make sure the tool description populates.\n- Finally go back to overview and then Start Testing the agent from the side Test Panel. Click on Activity map to see the sequence of events. Type in the following question: “What’s the month over month claims change in % for auto insurance ?”\n\n- You can see the Fabric data agent is called by the Copilot Agent in this scenario to answer your question:\n\n- Now let’s prepare to surface this through Teams. You will need to publish the agent to a channel (in this case, we will use the Teams channel). First, navigate to channels:\n\n- Click on the Teams and M365 Copilot channel and click add. After adding the channel, a pop up will ask you if you are ready to publish the agent:\n- To view the app in Teams you need to make sure that you have setup proper policies in Teams. Follow this tutorial: [Connect and configure an agent for Teams and Microsoft 365 Copilot - Microsoft Copilot Studio | Microsoft Learn](https://learn.microsoft.com/en-us/microsoft-copilot-studio/publication-add-bot-to-microsoft-teams).\n\n- Now your app is available across Teams. Below is an example of how to use it from Teams – make sure you click on “Allow” for the fabric data agent connection:\n\n**Fabric & AI Foundry & Copilot Studio – the end to end**\n\nWe saw how Fabric data agents can be created and utilized in Copilot Studio in a multi-agent setup. In the future, pro-code and low-code agentic developers are expected to work together to create agentic apps, instead of in silos. So, how do we solve the challenge of connecting all the components together in the same technology stack ? Let’s say a pro-code developer has created a custom agent in AI Foundry. Meanwhile, a low-code business user has put in business context to create another agent that requires access to the agent in AI Foundry. You’ll be pleased to know that Copilot Studio and Azure AI Foundry are becoming more integrated to enable complex, custom scenarios: Copilot Studio will soon release the integration to help with this:\n\n**Summary**: We demonstrated how one can build a Gen AI solution that allows seamless integration between Azure AI Foundry agents and Fabric data agents.  We look forward to seeing what innovative solutions you can build by learning and working closely with your Microsoft contacts or your SI partner. This may include but not limited to:\n\n- Utilizing a real industry domain to illustrate the concepts of building simple multi-agent solution.\n- Showcasing the value of combining Fabric data agent and Azure AI agent\n- Demonstrating how one can publish the conceptual solution to Teams or Copilot using the new M365 Agents Toolkit.\n\nNote that this blog post focused only on Fabric data agent and Azure AI Foundry Agent Service, but production ready solutions will need to consider Azure Monitor (for monitoring and observability) and Microsoft Purview for data governance.\n\n**Pointers to Other Learning Resources**\n\n- Ways to build AI Agents: [Build agents, your way | Microsoft Developer](https://developer.microsoft.com/en-us/agents)\n- Components of Microsoft Fabric: [What is Microsoft Fabric - Microsoft Fabric | Microsoft Learn](https://learn.microsoft.com/en-us/fabric/fundamentals/microsoft-fabric-overview)\n- Info on Microsoft Fabric data agent\n- [Create a Fabric data agent (preview) - Microsoft Fabric | Microsoft Learn](https://learn.microsoft.com/en-us/fabric/data-science/how-to-create-data-agent)\n- Fabric Data Agent Tutorial: [Fabric data agent scenario (preview) - Microsoft Fabric | Microsoft Learn](https://learn.microsoft.com/en-us/fabric/data-science/data-agent-end-to-end-tutorial)\n- [New in Fabric Data Agent: Data source instructions for smarter, more accurate AI responses | Microsoft Fabric Blog | Microsoft Fabric](https://blog.fabric.microsoft.com/en-US/blog/new-in-fabric-data-agent-data-source-instructions-for-smarter-more-accurate-ai-responses/)\n- Info on Azure AI Services, Models and Azure AI Foundry\n- [Azure AI Foundry documentation | Microsoft Learn](https://learn.microsoft.com/en-us/azure/ai-foundry/)\n- [What are Azure AI services? - Azure AI services | Microsoft Learn](https://learn.microsoft.com/en-us/azure/ai-services/what-are-ai-services)\n- [How to use Azure AI services in Azure AI Foundry portal - Azure AI Services | Microsoft Learn](https://learn.microsoft.com/en-us/azure/ai-services/connect-services-ai-foundry-portal?context=%2Fazure%2Fai-foundry%2Fcontext%2Fcontext)\n- [What is Azure AI Foundry Agent Service? - Azure AI Foundry | Microsoft Learn](https://learn.microsoft.com/en-us/azure/ai-foundry/agents/overview)\n- [Explore Azure AI Foundry Models - Azure AI Foundry | Microsoft Learn](https://learn.microsoft.com/en-us/azure/ai-foundry/concepts/foundry-models-overview)\n- [What is Azure OpenAI in Azure AI Foundry Models? | Microsoft Learn](https://learn.microsoft.com/en-us/azure/ai-foundry/openai/overview)\n- [Explore model leaderboards in Azure AI Foundry portal - Azure AI Foundry | Microsoft Learn](https://learn.microsoft.com/en-us/azure/ai-foundry/concepts/model-benchmarks) & [Benchmark models in the model leaderboard of Azure AI Foundry portal - Azure AI Foundry | Microsoft Learn](https://learn.microsoft.com/en-us/azure/ai-foundry/how-to/benchmark-model-in-catalog)\n- [How to use model router for Azure AI Foundry (preview) | Microsoft Learn](https://learn.microsoft.com/en-us/azure/ai-foundry/openai/how-to/model-router)\n- [Observability in Generative AI with Azure AI Foundry - Azure AI Foundry | Microsoft Learn](https://learn.microsoft.com/en-us/azure/ai-foundry/concepts/observability)\n- [Trustworthy AI for Azure AI Foundry - Azure AI Foundry | Microsoft Learn](https://learn.microsoft.com/en-us/azure/ai-foundry/responsible-use-of-ai-overview)\n- Cost Management for Models: [Plan to manage costs for Azure AI Foundry Models | Microsoft Learn](https://learn.microsoft.com/en-us/azure/ai-foundry/foundry-models/how-to/manage-costs)\n- Provisioned Throughput Offering: [Provisioned throughput for Azure AI Foundry Models | Microsoft Learn](https://learn.microsoft.com/en-us/azure/ai-foundry/openai/concepts/provisioned-throughput?context=%2Fazure%2Fai-foundry%2Fcontext%2Fcontext&amp;tabs=global-ptum)\n- Extend Azure AI Foundry Agent with Microsoft Fabric\n- [Expand Azure AI Agent with New Knowledge Tools: Microsoft Fabric and Tripadvisor | Microsoft Community Hub](https://techcommunity.microsoft.com/blog/azure-ai-services-blog/expand-azure-ai-agent-with-new-knowledge-tools-microsoft-fabric-and-tripadvisor/4398085)\n- [How to use the data agents in Microsoft Fabric with Azure AI Foundry Agent Service - Azure AI Foundry | Microsoft Learn](https://learn.microsoft.com/en-us/azure/ai-foundry/agents/how-to/tools/fabric?pivots=portal)\n- General guidance on when to adopt, extend and build CoPilot experiences:\n- [Adopt, extend and build Copilot experiences across the Microsoft Cloud | Microsoft Learn](https://learn.microsoft.com/en-us/microsoft-cloud/dev/copilot/overview)\n- M365 Agents Toolkit\n- [Choose the right agent solution to support your use case | Microsoft Learn](https://learn.microsoft.com/en-us/microsoft-365/agents-sdk/choose-agent-solution)\n- [Microsoft 365 Agents Toolkit Overview - Microsoft 365 Developer | Microsoft Learn](https://learn.microsoft.com/en-us/microsoft-365/developer/overview-m365-agents-toolkit?toc=%2Fmicrosoftteams%2Fplatform%2Ftoc.json&amp;bc=%2Fmicrosoftteams%2Fplatform%2Fbreadcrumb%2Ftoc.json)\n- Github and Video to offer Azure AI Agent inside Teams or CoPilot via M365 Agents Toolkit\n- [OfficeDev/microsoft-365-agents-toolkit: Developer tools for building Teams apps](https://github.com/OfficeDev/microsoft-365-agents-toolkit) & [Deploying your Azure AI Foundry agent to Microsoft 365 Copilot, Microsoft Teams, and beyond](https://www.youtube.com/watch?v=U9Yv2vjKYbI)\n\nHappy Learning!\n\nContributors:  Jeet J & Ritaja S\n\nSpecial thanks to reviewers: Joanne W, Amir J & Noah A\n\nUpdated Sep 15, 2025\n\nVersion 1.0\n\n[microsoft fabric](/tag/microsoft%20fabric?nodeId=board%3AAnalyticsonAzure)\n\n[!\\[GISV-PSA-MSFT&#x27;s avatar\\](https://techcommunity.microsoft.com/t5/s/gxcuf89792/m_assets/avatars/default/avatar-11.svg?image-dimensions=50x50)](/users/gisv-psa-msft/2507412) [GISV-PSA-MSFT](/users/gisv-psa-msft/2507412) ![Icon for Microsoft rank](https://techcommunity.microsoft.com/t5/s/gxcuf89792/images/cmstNC05WEo0blc?image-dimensions=100x16&amp;constrain-image=true)Microsoft\n\nJoined June 04, 2024\n\n[View Profile](/users/gisv-psa-msft/2507412)\n\n/category/azure/blog/analyticsonazure [Analytics on Azure Blog](/category/azure/blog/analyticsonazure) Follow this blog board to get notified when there's new activity",
  "Description": "Contributors for this blogpost: Jeet J & Ritaja S\n\n**Context & Objective**\n\nOver the past year, Gen AI apps have expanded significantly across enterprises. The agentic AI era is here, and the Microsoft ecosystem helps enable end-to-end acceleration of agentic AI apps in production. In this blog, we'll cover how both low-code business analysts and pro-code developers can use the Microsoft stack to build reusable agentic apps for their organizations.\n\nProfessionals in the Microsoft ecosystem are starting to build advanced agentic generative AI solutions using Microsoft AI Services and Azure AI Foundry, which supports both open source and industry models. Combined with the advancements in Microsoft Fabric, these tools enable robust, industry-specific applications. This blog post explains how to develop multi-agent solutions for various industries using Azure AI Foundry, Copilot Studio, and Fabric. Disclaimer: This blogpost is for educational purposes only and walks through the process of using the relevant services without ton of custom code; teams must follow engineering best practices—including development, automated deployment, testing, security, and responsible AI—before any production deployment.\n\n**What to expect**\n\nIn-Focus: Our goal is to help the reader explore specific industry use cases and understand the concept of building multi-agent solutions. In our case, we will focus on the insurance and financial services use case, use Fabric Notebooks to create sample (fake) datasets, utilize simple click-through based workflow to build-and-configure three agents (both on Fabric and Azure AI Foundry), tie them together and offer the solution via Teams or Microsoft Copilot using the new M365 Agents Toolkit.\n\nOut-of-Focus: This blog post will not cover the fundamentals of Azure AI Services, Azure AI Foundry, or the various components of Microsoft Fabric. It also won’t cover the different ways (low-code or pro-code) to build agents, orchestration frameworks (Semantic Kernel, Langchain, AutoGen, etc.) for orchestrating the agents, or hosting options (Azure App Service – Web App, Azure Kubernetes Service, Azure Container Apps, Azure Functions ).\n\nPlease review the pointers listed towards the end to gain a holistic understanding of building and deploying mission-critical generative AI solutions.\n\n**Logical Architecture** of Multi-Agent Solution utilizing Microsoft Fabric Data Agent and Azure AI Foundry Agent.\n\n![]()\n\n**Fabric & Azure AI Foundry – Pro-code Agentic path**\n\n**Prerequisites**\n\na. Access to Azure Tenant & Subscription b. Work with Azure tenant administrator to have appropriate Azure Roles and Capacity to provision Azure Resources (services) and Deploy AI Models in certain regions. c. [A paid F2 or higher Fabric capacity resource](https://learn.microsoft.com/en-us/fabric/fundamentals/copilot-fabric-overview#available-regions-for-azure-openai-service) – Important to note that the Fabric compute capacity can be paused and resumed. Pause in case you wish to save costs after your learning.\n\n| ![]() | ![]() | | --- | --- |\n\nd. Access Fabric Admin Portal [Power BI](https://app.powerbi.com/admin-portal/tenantSettings?experience=power-bi) for enabling these settings\n\n> Fabric data agent tenant settings is enabled.\n\n![]()\n\n> Copilot tenant switch is enabled.\n> Optional: Cross-geo processing for AI is enabled. (depends on your region and data sovereignty requirements)\n> Optional: Cross-geo storing for AI is enabled. (depends on your region)\n\ne. At least one of these: Fabric Data Warehouse, Fabric Lakehouse, one or more Power BI semantic models, or a KQL database with data. This blog post will cover how to create sample datasets using Fabric Notebooks.\n\nf. [Power BI semantic models via XMLA endpoints tenant switch](https://learn.microsoft.com/en-us/fabric/data-science/data-agent-tenant-settings) is enabled for Power BI semantic model data sources.\n\n**Walkthrough/Set-up**\n\n1. One-time setup for Fabric Workspace and all agents\n\na) Visit [https://app.powerbi.com](https://app.powerbi.com./)\n\nClick “New workspace” button to create a new workspace, give it a name and ensure that it is tied/associated to the Fabric Capacity you have provisioned.\n\n| ![]() | | --- |\n\nb) Click Workspace settings of the newly created Workspace\n\n| ![]() | | --- |\n\nc) Review the information in License info. If the workspace isn’t associated with your newly created Fabric Capacity, please do the proper association (link the Fabric capacity to the workspace) and wait for 5-10 mins.\n\n| ![]() | | --- |\n\n2. Create an Insurance Agent\n\na) Create a new Lakehouse in your Fabric Workspace. Change the name to InsuranceLakehouse\n\n![]()\n\nb) Create a new Fabric Notebook, assign a name, and associate the Insurance Lakehouse with it.\n\n| ![]() | | --- |\n\nc) Add the following Pyspark (Python) code-snippets in the Notebook. i) Faker library for Fabric Notebook ii) Insurance Sample Dataset in Fabric Notebook iii) Run both cells to generate the sample Insurance dataset.\n\nd) Create a new Fabric data agent, give it a name and add the Data Source (InsuranceLakehouse). i) Ensure that the Insurance Lakehouse is added as the data source in the Insurance Fabric data agent. ii) Click AI instructions button first to paste the sample instructions and finally the Publish button.\n\n| ![]() | | --- |\n\niii) Paste the sample instructions in the field. A churn is represented by number 1. Calculate churn rate as : total number of churns (TC) / (TT) total count of churn entries. When asked to calculate churn for each policy type then TT should be total count of churn of that policy type e.g Life, legal.\n\n| ![]() | | --- |\n\niv) Make sure to hit the Publish button.\n\nv) Capture two values from the URL and store them in secure/private place. We will use them to configure the knowledge source in Azure AI Foundry Agent.\n\nhttps://app.powerbi.com/groups//aiskills/?experience=power-bi\n\ne) Create Azure AI Agent on Azure AI Foundry and use Fabric Data Agent as the Knowledge Source\n\ni) Visit https://ai.azure/com\n\nii) Create new Azure AI Project and deploy gpt-4o-mini model (as an example model) in the region where the model is available.\n\niii) Create new Azure AI Foundry Agent by clicking the “New agent” button. Give it a name (for e.g. AgentforInsurance)\n\niv) Paste the sample Instructions in the Azure AI Agent as follows\n\nUse Fabric data agent tool to answer questions related to Insurance data. Fabric data agent as a tool has access to insurance data tables: Claims (amount, date, status), Customer (age, address, occupation, etc), Policy (premium amount, policy type: life insurance, auto insurance, etc)\n\n| ![]() | | --- |\n\nv) On the right-hand pane, click “+Add” button next to Knowledge.\n\nvi) Choose an existing Fabric data agent connection or click the new Connection.\n\nvii) In the next dialog, plug-in the values of the Workspace and Artifact ID you captured above,\n\nEnsure that “is secret” is checked, give a name to the connection and hit the Connect button.\n\n| | ![]() | | --- | --- |\n\nviii) Add the Code Interpreter as the tool in the Azure AI Foundry agent by clicking +Add next to Actions and selecting Code Interpreter.\n\n| | ![]() | | --- | --- |\n\nix) Test the agent by clicking “Try in playground” button\n\n| | ![]() | | --- | --- |\n\nx) To test the Agent, you can try out these sample questions: What is the churn rate across my different insurance policy types What’s the month over month claims change in % for each insurance type? Show me graph view of month over month claims change in % for each insurance type for the year 2025 only Based on month over month claims change for the year 2025, can you show the forecast for the next 3 months in a graph?\n\nf) Exposing the Fabric data agent to end users: We will explore this in the Copilot Studio Section\n\n**Fabric & Copilot Studio – Low-code agentic path** ****\n\nPrerequisites\n\n- For Copilot Studio, you have 3 options to work with:\n- Copilot Studio [trial](https://learn.microsoft.com/en-us/microsoft-copilot-studio/sign-up-individual) or\n- Copilot Studio [license](https://learn.microsoft.com/en-us/microsoft-copilot-studio/billing-licensing) or\nCopilot Studio Pay as you go (connected to your Azure billing). Follow steps here to setup: [Copilot Studio licensing - Microsoft Copilot Studio | Microsoft Learn](https://learn.microsoft.com/en-us/microsoft-copilot-studio/billing-licensing#copilot-studio-pay-as-you-go)\n- Once you have Copilot Studio set up, navigate to [https://copilotstudio.microsoft.com/](https://copilotstudio.microsoft.com/) and start creating a new agent – Click on “create” and then “New Agent”\n\n**Walkthrough/Set-up:**\n- Follow steps from “Fabric & Azure AI Foundry section” to create the Fabric Lakehouse and![]()\n- You could create the new agent by describing step by step in natural language but for this exercise we will “skip to configure” (button):\n![]()\n- Give the agent a name, add a helpful description (suggestion, add: Agent that has access to Insurance data and helps with data driven insights from Policy, Claims and Customer information). Then add the agent instruction prompt: “Answer questions related to Insurance data, you have access to insurance data agent, use the agent to gather insights from insurance Lakehouse containing customer, policy and claim information.” Finally click on “Create”\n![]()\n- You should have the following setup like below:\n![]()\n- Next, we want to add another agent for this agent to use – in this case this will be our Fabric Data Agent. Click on “Agents”:\n![]()\n- Next click on “Add” and add agent. From the screen click on Microsoft Fabric:\n![]()\n- If you haven’t set-up a connection to Fabric from Copilot Studio, you will be prompted to create a new connection, follow the prompts to sign in with your user and add a connection. Once that is done click “Next” to continue:\n\n![]()\n\n- From the Fabric screen, select the appropriate data agent and click “Next”:\n![]()\n\n- On the next screen, name the agent appropriately and use a friendly description “Agent that answers questions from the insurance lakehouse knowledge, has access to claims, policies and customer information” and finally click on “Add Agent”:\n![]()\n- On the “Tools” section click on refresh to make sure the tool description populates.\n![]()\n- Finally go back to overview and then Start Testing the agent from the side Test Panel. Click on Activity map to see the sequence of events. Type in the following question: “What’s the month over month claims change in % for auto insurance ?”\n\n![]()\n- You can see the Fabric data agent is called by the Copilot Agent in this scenario to answer your question:\n\n![]()\n- Now let’s prepare to surface this through Teams. You will need to publish the agent to a channel (in this case, we will use the Teams channel). First, navigate to channels:\n\n![]()\n- Click on the Teams and M365 Copilot channel and click add. After adding the channel, a pop up will ask y![]()ou if you are ready to publish the agent:\n- To view the app in Teams you need to make sure that you have setup proper policies in Teams. Follow this tutorial: [Connect and configure an agent for Teams and Microsoft 365 Copilot - Microsoft Copilot Studio | Microsoft Learn](https://learn.microsoft.com/en-us/microsoft-copilot-studio/publication-add-bot-to-microsoft-teams).\n\n- Now your app is available across Teams. Below is an example of how to use it from Teams – make sure you click on “Allow” for the fabric data agent connection:\n\n![]()\n\n**Fabric & AI Foundry & Copilot Studio – the end to end**\n\nWe saw how Fabric data agents can be created and utilized in Copilot Studio in a multi-agent setup. In the future, pro-code and low-code agentic developers are expected to work together to create agentic apps, instead of in silos. So, how do we solve the challenge of connecting all the components together in the same technology stack ? Let’s say a pro-code developer has created a custom agent in AI Foundry. Meanwhile, a low-code business user has put in business context to create another agent that requires access to the agent in AI Foundry. You’ll be pleased to know that Copilot Studio and Azure AI Foundry are becoming more integrated to enable complex, custom scenarios: Copilot Studio will soon release the integration to help with this:\n\n![]()\n\n**Summary**: We demonstrated how one can build a Gen AI solution that allows seamless integration between Azure AI Foundry agents and Fabric data agents. We look forward to seeing what innovative solutions you can build by learning and working closely with your Microsoft contacts or your SI partner. This may include but not limited to:\n\n- Utilizing a real industry domain to illustrate the concepts of building simple multi-agent solution.\n- Showcasing the value of combining Fabric data agent and Azure AI agent\n- Demonstrating how one can publish the conceptual solution to Teams or Copilot using the new M365 Agents Toolkit.\n\nNote that this blog post focused only on Fabric data agent and Azure AI Foundry Agent Service, but production ready solutions will need to consider Azure Monitor (for monitoring and observability) and Microsoft Purview for data governance.\n\n**Pointers to Other Learning Resources**\n\n- Ways to build AI Agents: [Build agents, your way | Microsoft Developer](https://developer.microsoft.com/en-us/agents)\n- Components of Microsoft Fabric: [What is Microsoft Fabric - Microsoft Fabric | Microsoft Learn](https://learn.microsoft.com/en-us/fabric/fundamentals/microsoft-fabric-overview)\n- Info on Microsoft Fabric data agent\n- [Create a Fabric data agent (preview) - Microsoft Fabric | Microsoft Learn](https://learn.microsoft.com/en-us/fabric/data-science/how-to-create-data-agent)\n- Fabric Data Agent Tutorial: [Fabric data agent scenario (preview) - Microsoft Fabric | Microsoft Learn](https://learn.microsoft.com/en-us/fabric/data-science/data-agent-end-to-end-tutorial)\n- [New in Fabric Data Agent: Data source instructions for smarter, more accurate AI responses | Microsoft Fabric Blog | Microsoft Fabric](https://blog.fabric.microsoft.com/en-US/blog/new-in-fabric-data-agent-data-source-instructions-for-smarter-more-accurate-ai-responses/)\n- Info on Azure AI Services, Models and Azure AI Foundry\n- [Azure AI Foundry documentation | Microsoft Learn](https://learn.microsoft.com/en-us/azure/ai-foundry/)\n- [What are Azure AI services? - Azure AI services | Microsoft Learn](https://learn.microsoft.com/en-us/azure/ai-services/what-are-ai-services)\n- [How to use Azure AI services in Azure AI Foundry portal - Azure AI Services | Microsoft Learn](https://learn.microsoft.com/en-us/azure/ai-services/connect-services-ai-foundry-portal?context=%2Fazure%2Fai-foundry%2Fcontext%2Fcontext)\n- [What is Azure AI Foundry Agent Service? - Azure AI Foundry | Microsoft Learn](https://learn.microsoft.com/en-us/azure/ai-foundry/agents/overview)\n- [Explore Azure AI Foundry Models - Azure AI Foundry | Microsoft Learn](https://learn.microsoft.com/en-us/azure/ai-foundry/concepts/foundry-models-overview)\n- [What is Azure OpenAI in Azure AI Foundry Models? | Microsoft Learn](https://learn.microsoft.com/en-us/azure/ai-foundry/openai/overview)\n- [Explore model leaderboards in Azure AI Foundry portal - Azure AI Foundry | Microsoft Learn](https://learn.microsoft.com/en-us/azure/ai-foundry/concepts/model-benchmarks) & [Benchmark models in the model leaderboard of Azure AI Foundry portal - Azure AI Foundry | Microsoft Learn](https://learn.microsoft.com/en-us/azure/ai-foundry/how-to/benchmark-model-in-catalog)\n- [How to use model router for Azure AI Foundry (preview) | Microsoft Learn](https://learn.microsoft.com/en-us/azure/ai-foundry/openai/how-to/model-router)\n- [Observability in Generative AI with Azure AI Foundry - Azure AI Foundry | Microsoft Learn](https://learn.microsoft.com/en-us/azure/ai-foundry/concepts/observability)\n- [Trustworthy AI for Azure AI Foundry - Azure AI Foundry | Microsoft Learn](https://learn.microsoft.com/en-us/azure/ai-foundry/responsible-use-of-ai-overview)\n- Cost Management for Models: [Plan to manage costs for Azure AI Foundry Models | Microsoft Learn](https://learn.microsoft.com/en-us/azure/ai-foundry/foundry-models/how-to/manage-costs)\n- Provisioned Throughput Offering: [Provisioned throughput for Azure AI Foundry Models | Microsoft Learn](https://learn.microsoft.com/en-us/azure/ai-foundry/openai/concepts/provisioned-throughput?context=%2Fazure%2Fai-foundry%2Fcontext%2Fcontext&tabs=global-ptum)\n- Extend Azure AI Foundry Agent with Microsoft Fabric\n- [Expand Azure AI Agent with New Knowledge Tools: Microsoft Fabric and Tripadvisor | Microsoft Community Hub](https://techcommunity.microsoft.com/blog/azure-ai-services-blog/expand-azure-ai-agent-with-new-knowledge-tools-microsoft-fabric-and-tripadvisor/4398085)\n- [How to use the data agents in Microsoft Fabric with Azure AI Foundry Agent Service - Azure AI Foundry | Microsoft Learn](https://learn.microsoft.com/en-us/azure/ai-foundry/agents/how-to/tools/fabric?pivots=portal)\n- General guidance on when to adopt, extend and build CoPilot experiences:\n- [Adopt, extend and build Copilot experiences across the Microsoft Cloud | Microsoft Learn](https://learn.microsoft.com/en-us/microsoft-cloud/dev/copilot/overview)\n- M365 Agents Toolkit\n- [Choose the right agent solution to support your use case | Microsoft Learn](https://learn.microsoft.com/en-us/microsoft-365/agents-sdk/choose-agent-solution)\n- [Microsoft 365 Agents Toolkit Overview - Microsoft 365 Developer | Microsoft Learn](https://learn.microsoft.com/en-us/microsoft-365/developer/overview-m365-agents-toolkit?toc=%2Fmicrosoftteams%2Fplatform%2Ftoc.json&bc=%2Fmicrosoftteams%2Fplatform%2Fbreadcrumb%2Ftoc.json)\n- Github and Video to offer Azure AI Agent inside Teams or CoPilot via M365 Agents Toolkit\n- [OfficeDev/microsoft-365-agents-toolkit: Developer tools for building Teams apps](https://github.com/OfficeDev/microsoft-365-agents-toolkit) & [Deploying your Azure AI Foundry agent to Microsoft 365 Copilot, Microsoft Teams, and beyond](https://www.youtube.com/watch?v=U9Yv2vjKYbI)\n\nHappy Learning!\n\nContributors: Jeet J & Ritaja S\n\nSpecial thanks to reviewers: Joanne W, Amir J & Noah A"
}
