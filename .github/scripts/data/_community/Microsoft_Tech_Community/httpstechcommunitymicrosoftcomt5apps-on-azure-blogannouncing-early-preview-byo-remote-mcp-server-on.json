{
  "ProcessedDate": "2025-08-19 03:38:02",
  "Tags": [],
  "Title": "Announcing Early Preview: BYO Remote MCP Server on Azure Functions",
  "FeedUrl": "https://techcommunity.microsoft.com/t5/s/gxcuf89792/rss/Category?category.id=Azure",
  "FeedName": "Microsoft Tech Community",
  "Link": "https://techcommunity.microsoft.com/t5/apps-on-azure-blog/announcing-early-preview-byo-remote-mcp-server-on-azure/ba-p/4445317",
  "PubDate": "2025-08-19T02:35:21+00:00",
  "OutputDir": "_community",
  "EnhancedContent": "If you’ve already built Model Context Protocol (MCP) servers with the MCP SDKs and wished you could turn them into world class Remote MCP servers using a hyperscale, serverless platform, then this one’s for you! We’ve published samples showing how to host *bring‑your-own* *(BYO) Remote MCP servers on Azure Functions*, so you can run the servers you’ve already built with the MCP SDKs—Python, Node, and .NET—with minimal changes and full serverless goodness.\n\n## Why this is exciting\n\n- **Keep your code**. If you’ve already implemented servers with the MCP SDKs (Python, Node, .NET), deploy them to Azure Functions as remote MCP servers with just one line of code change.\n- **Serverless scale when you need it.** Functions on the Flex Consumption plan handles bursty traffic, scales out and back to zero automatically, and gives you serverless billing.\n- **Secure by default**. Your remote server endpoint is protected with function keys out-of- the-box, with option to layer on Azure API Management for added authorization flow.\n\n## BYO vs. Functions Remote MCP extension—pick the path that fits\n\nThe BYO option complements the existing Azure Functions MCP extension:\n\n- [Build and host with Functions MCP extension](https://techcommunity.microsoft.com/blog/appsonazureblog/build-ai-agent-tools-using-remote-mcp-with-azure-functions/4401059): You can build **stateful** MCP servers with the MCP tool trigger and binding and host them on Functions. Support for SSE is available today with streamable HTTP coming soon.\n- Host BYO remote MCP Server (this announcement): If you already have a server built with the MCP SDKs, or you prefer those SDKs’ ergonomics, host it as‑is on Functions and keep your current codebase.\n\nEither way, you benefit from Functions’ serverless platform: secure access & auth, burst scale, event-driven scale from 0 to N, and pay-for-what-you‑use.\n\n*Summary of remote hosting options on Azure Functions with BYO highlighted.*\n\n## What’s supported in this early preview\n\n- Servers built with the **Python, Node, and .NET** SDKs\n- Debug locally with **func start**on Visual Studio or Visual Studio Code; deploy with the Azure Developer CLI **(azd up)** to get your remote MCP server quickly deployed to Azure Functions\n- **Stateless** servers using the **streamable HTTP** transport, with guidance coming soon for stateful servers\n- Hosting on **[Flex Consumption plan](https://learn.microsoft.com/en-us/azure/azure-functions/flex-consumption-plan)**\n\n## Try it now!\n\n- **Python:** [https://github.com/Azure-Samples/mcp-sdk-functions-hosting-python](https://github.com/Azure-Samples/mcp-sdk-functions-hosting-python)\n- **Node**: [https://github.com/Azure-Samples/mcp-sdk-functions-hosting-node](https://github.com/Azure-Samples/mcp-sdk-functions-hosting-node)\n- **.NET:** [https://github.com/Azure-Samples/mcp-sdk-functions-hosting-dotnet](https://github.com/Azure-Samples/mcp-sdk-functions-hosting-dotnet)\n\nEach repo includes the sample *weather* *MCP server* implemented with the MCP SDK for that language. You’ll find instructions on how to run the server locally with Azure Functions Core Tools and deploy with azd up in minutes. Once deployed, you can connect to the remote server from an MCP client. The samples use Visual Studio Code, but other clients like Claude can also be used.\n\n## Provide feedback to shape feature\n\nTell us what you need next - identity flows, diagnostics, more languages, or any other features. Your feedback will shape how we take this early preview to the next level!\n\nPublished Aug 19, 2025\n\nVersion 1.0\n\n[.net](/tag/.net?nodeId=board%3AAppsonAzureBlog)\n\n[asp .net](/tag/asp%20.net?nodeId=board%3AAppsonAzureBlog)\n\n[azure functions](/tag/azure%20functions?nodeId=board%3AAppsonAzureBlog)\n\n[node.js](/tag/node.js?nodeId=board%3AAppsonAzureBlog)\n\n[python](/tag/python?nodeId=board%3AAppsonAzureBlog)\n\n[serverless](/tag/serverless?nodeId=board%3AAppsonAzureBlog)\n\n[updates](/tag/updates?nodeId=board%3AAppsonAzureBlog)\n\n[!\\[lily-ma&#x27;s avatar\\](https://techcommunity.microsoft.com/t5/s/gxcuf89792/images/dS02MjY0NzEtMzc0NzQwaTgyN0MzNDdFQUExRUI2MjA?image-dimensions=50x50)](/users/lily-ma/626471) [lily-ma](/users/lily-ma/626471) ![Icon for Microsoft rank](https://techcommunity.microsoft.com/t5/s/gxcuf89792/images/cmstNC05WEo0blc?image-dimensions=100x16&amp;constrain-image=true)Microsoft\n\nJoined April 17, 2020\n\n[View Profile](/users/lily-ma/626471)\n\n/category/azure/blog/appsonazureblog [Apps on Azure Blog](/category/azure/blog/appsonazureblog) Follow this blog board to get notified when there's new activity",
  "Author": "lily-ma",
  "FeedLevelAuthor": "rss.livelink.threads-in-node",
  "Description": "If you’ve already built Model Context Protocol (MCP) servers with the MCP SDKs and wished you could turn them into world class Remote MCP servers using a hyperscale, serverless platform, then this one’s for you! We’ve published samples showing how to host *bring‑your-own* *(BYO) Remote MCP servers on Azure Functions*, so you can run the servers you’ve already built with the MCP SDKs—Python, Node, and .NET—with minimal changes and full serverless goodness.\n\n## Why this is exciting\n\n- **Keep your code**. If you’ve already implemented servers with the MCP SDKs (Python, Node, .NET), deploy them to Azure Functions as remote MCP servers with just one line of code change.\n- **Serverless scale when you need it.** Functions on the Flex Consumption plan handles bursty traffic, scales out and back to zero automatically, and gives you serverless billing.\n- **Secure by default**. Your remote server endpoint is protected with function keys out-of- the-box, with option to layer on Azure API Management for added authorization flow.\n\n## BYO vs. Functions Remote MCP extension—pick the path that fits\n\nThe BYO option complements the existing Azure Functions MCP extension:\n\n- [Build and host with Functions MCP extension](https://techcommunity.microsoft.com/blog/appsonazureblog/build-ai-agent-tools-using-remote-mcp-with-azure-functions/4401059): You can build **stateful** MCP servers with the MCP tool trigger and binding and host them on Functions. Support for SSE is available today with streamable HTTP coming soon.\n- Host BYO remote MCP Server (this announcement): If you already have a server built with the MCP SDKs, or you prefer those SDKs’ ergonomics, host it as‑is on Functions and keep your current codebase.\n\nEither way, you benefit from Functions’ serverless platform: secure access & auth, burst scale, event-driven scale from 0 to N, and pay-for-what-you‑use.\n\n![]()*Summary of remote hosting options on Azure Functions with BYO highlighted.*\n\n## What’s supported in this early preview\n\n- Servers built with the **Python, Node, and .NET** SDKs\n- Debug locally with **func start** on Visual Studio or Visual Studio Code; deploy with the Azure Developer CLI **(azd up)** to get your remote MCP server quickly deployed to Azure Functions\n- **Stateless** servers using the **streamable HTTP** transport, with guidance coming soon for stateful servers\n- Hosting on **[Flex Consumption plan](https://learn.microsoft.com/en-us/azure/azure-functions/flex-consumption-plan)**\n\n## Try it now!\n\n- **Python:** [https://github.com/Azure-Samples/mcp-sdk-functions-hosting-python](https://github.com/Azure-Samples/mcp-sdk-functions-hosting-python)\n- **Node**: [https://github.com/Azure-Samples/mcp-sdk-functions-hosting-node](https://github.com/Azure-Samples/mcp-sdk-functions-hosting-node)\n- **.NET:** [https://github.com/Azure-Samples/mcp-sdk-functions-hosting-dotnet](https://github.com/Azure-Samples/mcp-sdk-functions-hosting-dotnet)\n\nEach repo includes the sample *weather* *MCP server* implemented with the MCP SDK for that language. You’ll find instructions on how to run the server locally with Azure Functions Core Tools and deploy with azd up in minutes. Once deployed, you can connect to the remote server from an MCP client. The samples use Visual Studio Code, but other clients like Claude can also be used.\n\n## Provide feedback to shape feature\n\nTell us what you need next - identity flows, diagnostics, more languages, or any other features. Your feedback will shape how we take this early preview to the next level!"
}
