{
  "PubDate": "2025-08-11T09:10:39+00:00",
  "EnhancedContent": "## In document-intensive environments, pinpointing the exact page where relevant information resides within a PDF is crucial for precision and productivity. Whether you're building a knowledge mining solution or enabling AI search, integrating page-level granularity into your AI search pipeline can significantly enhance user experience and retrieval accuracy.\n\n**Why Page Numbers Matter in AI Search**\n\nWhen users search for content within large PDFs—such as contracts, manuals, or reports—they often need to know not just what was found, but where it was found. Associating search results with page numbers enables:\n\n- Contextual navigation within documents.\n- Precise citations in knowledge bases or chatbots.\n- Improved user trust in AI-generated responses.\n\n**Prerequisites for Azure Blob Storage & Azure AI Search Setup Summary**\n\n**1. Azure Blob Storage**\n\nA container is configured to store PDF files.\n\n**2. Appropriate permissions:**\n\nThe AI search service must have **Storage Blob Data Reader** access to the container. If using RBAC, ensure the managed identity is properly assigned.\n\nRef:\n\n- [AI search Search-blob-indexer-role-based-access](https://learn.microsoft.com/en-us/azure/search/search-blob-indexer-role-based-access)\n- [How to Index Azure Blobs](https://learn.microsoft.com/en-us/azure/search/search-howto-indexing-azure-blobs)\n\n**Technical Approaches to Extract Page Numbers using AI search**\n\n**1. Adding a Skillset: Document Cracking and index projection for parent-child indexing**\n\nThe first step in skillset execution is document cracking, which separates text and image content. A common use case for Text Merger is merging the textual representation of images—such as OCR output or image captions—into the content field of a document. This is especially useful for PDFs or Word documents that combine text with embedded images. This ensures that the final enriched document includes all relevant textual data, regardless of its original format, and improves the accuracy of downstream search and analysis.\n\nan index projection specifies how parent-child content is mapped to fields in a search index for one-to-many indexing.\n\n``` { \"@odata.etag\": \"\\\"0x8DDD58F12B5D0B9\\\"\", \"name\": \"pagenumskillset\", \"description\": \"Skillset to feed document to OCR skill and use Index Projection to split the content page wise\", \"skills\": [ { \"@odata.type\": \"#Microsoft.Skills.Vision.OcrSkill\", \"name\": \"#1\", \"context\": \"/document/normalized_images/*\", \"lineEnding\": \"Space\", \"defaultLanguageCode\": \"en\", \"detectOrientation\": true, \"inputs\": [ { \"name\": \"image\", \"source\": \"/document/normalized_images/*\", \"inputs\": [] } ], \"outputs\": [ { \"name\": \"text\", \"targetName\": \"text\" }, { \"name\": \"layoutText\", \"targetName\": \"layoutText\" } ] } ], \"cognitiveServices\": { \"@odata.type\": \"#Microsoft.Azure.Search.DefaultCognitiveServices\" }, \"indexProjections\": { \"selectors\": [ { \"targetIndexName\": \"pagenumidx\", \"parentKeyFieldName\": \"ParentKey\", \"sourceContext\": \"/document/normalized_images/*\", \"mappings\": [ { \"name\": \"DocText\", \"source\": \"/document/normalized_images/*/text\", \"inputs\": [] }, { \"name\": \"DocName\", \"source\": \"/document/metadata_storage_name\", \"inputs\": [] }, { \"name\": \"DocURL\", \"source\": \"/document/metadata_storage_path\", \"inputs\": [] }, { \"name\": \"PageNum\", \"source\": \"/document/normalized_images/*/pageNumber\", \"inputs\": [] } ] } ], \"parameters\": { \"projectionMode\": \"skipIndexingParentDocuments\" } } } ```\n\n**2. Defining Index definition**\n\nAn index is defined by a schema and stored within the search service, ensuring millisecond response times by decoupling from external data sources. Except for indexer-driven scenarios, the search service never queries the original data directly making it ideal for high-performance search applications.\n\n``` { \"@odata.etag\": \"\\\"0x8DDD58E7F7CF595\\\"\", \"name\": \"pagenumidx\", \"fields\": [ { \"name\": \"ID\", \"type\": \"Edm.String\", \"searchable\": true, \"filterable\": false, \"retrievable\": true, \"stored\": true, \"sortable\": false, \"facetable\": false, \"key\": true, \"analyzer\": \"keyword\", \"synonymMaps\": [] }, { \"name\": \"DocText\", \"type\": \"Edm.String\", \"searchable\": true, \"filterable\": false, \"retrievable\": true, \"stored\": true, \"sortable\": false, \"facetable\": false, \"key\": false, \"synonymMaps\": [] }, { \"name\": \"DocName\", \"type\": \"Edm.String\", \"searchable\": true, \"filterable\": true, \"retrievable\": true, \"stored\": true, \"sortable\": true, \"facetable\": true, \"key\": false, \"synonymMaps\": [] }, { \"name\": \"PageNum\", \"type\": \"Edm.Int32\", \"searchable\": false, \"filterable\": true, \"retrievable\": true, \"stored\": true, \"sortable\": true, \"facetable\": false, \"key\": false, \"synonymMaps\": [] }, { \"name\": \"DocURL\", \"type\": \"Edm.String\", \"searchable\": true, \"filterable\": true, \"retrievable\": true, \"stored\": true, \"sortable\": false, \"facetable\": false, \"key\": false, \"analyzer\": \"standard.lucene\", \"synonymMaps\": [] }, { \"name\": \"ParentKey\", \"type\": \"Edm.String\", \"searchable\": true, \"filterable\": true, \"retrievable\": true, \"stored\": true, \"sortable\": false, \"facetable\": false, \"key\": false, \"analyzer\": \"keyword\", \"synonymMaps\": [] } ], \"scoringProfiles\": [], \"suggesters\": [], \"analyzers\": [], \"normalizers\": [], \"tokenizers\": [], \"tokenFilters\": [], \"charFilters\": [], \"similarity\": { \"@odata.type\": \"#Microsoft.Azure.Search.BM25Similarity\" }, \"semantic\": { \"defaultConfiguration\": \"my_semantic_cfg\", \"configurations\": [ { \"name\": \"my_semantic_cfg\", \"flightingOptIn\": false, \"rankingOrder\": \"BoostedRerankerScore\", \"prioritizedFields\": { \"titleField\": { \"fieldName\": \"DocName\" }, \"prioritizedContentFields\": [ { \"fieldName\": \"DocText\" } ], \"prioritizedKeywordsFields\": [ { \"fieldName\": \"DocName\" }, { \"fieldName\": \"ID\" } ] } } ] } } ```\n\n**3.Using Azure AI Search Indexer with OCR and ImageAction**\n\nAzure AI Search allows you to extract page-level data by configuring the indexer with:\n\nThis setting renders each PDF page as a separate image, which can then be processed using the OcrSkill. The OCR output can be mapped to a collection field, where each item corresponds to a page's text. This method enables you to infer page numbers based on the position of matched content in the collection.\n\n``` { \"@odata.context\": \"https://searchinstancename.search.windows.net/$metadata#indexers/$entity\", \"@odata.etag\": \"\\\"0x8DDD58F3760067D\\\"\", \"name\": \"indexer-pagenum\", \"description\": null, \"dataSourceName\": \"azureblob-1754401027271-datasource\", \"skillsetName\": \"pagenumskillset\", \"targetIndexName\": \"pagenumidx\", \"disabled\": null, \"schedule\": null, \"parameters\": { \"batchSize\": null, \"maxFailedItems\": null, \"maxFailedItemsPerBatch\": null, \"configuration\": { \"dataToExtract\": \"contentAndMetadata\", \"parsingMode\": \"default\", \"imageAction\": \"generateNormalizedImagePerPage\", \"pdfTextRotationAlgorithm\": \"none\" } }, \"fieldMappings\": [], \"outputFieldMappings\": [], \"cache\": null, \"encryptionKey\": null } ```\n\n**Validation and Conclusion**\n\nYou can leverage Search Explorer to view the output which will look like below:\n\n``` { \"@search.score\": 1, \"ID\": \"\", \"DocText\": \"the PDF content \", \"DocName\": \"docname.pdf\", \"PageNum\": 33, \"DocURL\": \"https://storageaccoutname.blob.core.windows.net/containername/docname.pdf\", \"ParentKey\": \"sammple key\" } ```\n\nHope this help in your requirement of getting Page Number from PDF using AI search\n\nUpdated Aug 11, 2025\n\nVersion 1.0\n\n[!\\[samsarka&#x27;s avatar\\](https://techcommunity.microsoft.com/t5/s/gxcuf89792/m_assets/avatars/default/avatar-8.svg?image-dimensions=50x50)](/users/samsarka/375224) [samsarka](/users/samsarka/375224) ![Icon for Microsoft rank](https://techcommunity.microsoft.com/t5/s/gxcuf89792/images/cmstNC05WEo0blc?image-dimensions=100x16&amp;constrain-image=true)Microsoft\n\nJoined July 12, 2019\n\n[View Profile](/users/samsarka/375224)\n\n/category/azure/blog/azurepaasblog [Azure PaaS Blog](/category/azure/blog/azurepaasblog) Follow this blog board to get notified when there's new activity",
  "OutputDir": "_community",
  "ProcessedDate": "2025-08-11 10:07:43",
  "Author": "samsarka",
  "Title": "Finding the Right Page number in PDFs with AI Search",
  "Tags": [],
  "FeedName": "Microsoft Tech Community",
  "Description": "**Why Page Numbers Matter in AI Search**\n\nWhen users search for content within large PDFs—such as contracts, manuals, or reports—they often need to know not just what was found, but where it was found. Associating search results with page numbers enables:\n\n- Contextual navigation within documents.\n- Precise citations in knowledge bases or chatbots.\n- Improved user trust in AI-generated responses.\n\n**Prerequisites for Azure Blob Storage & Azure AI Search Setup Summary**\n\n**1. Azure Blob Storage**\n\nA container is configured to store PDF files.\n\n**2. Appropriate permissions:**\n\nThe AI search service must have **Storage Blob Data Reader** access to the container. If using RBAC, ensure the managed identity is properly assigned.\n\nRef:\n\n- [AI search Search-blob-indexer-role-based-access](https://learn.microsoft.com/en-us/azure/search/search-blob-indexer-role-based-access)\n- [How to Index Azure Blobs](https://learn.microsoft.com/en-us/azure/search/search-howto-indexing-azure-blobs)\n\n**Technical Approaches to Extract Page Numbers using AI search**\n\n**1. Adding a Skillset: Document Cracking and index projection for parent-child indexing**\n\nThe first step in skillset execution is document cracking, which separates text and image content. A common use case for Text Merger is merging the textual representation of images—such as OCR output or image captions—into the content field of a document. This is especially useful for PDFs or Word documents that combine text with embedded images. This ensures that the final enriched document includes all relevant textual data, regardless of its original format, and improves the accuracy of downstream search and analysis.\n\nan index projection specifies how parent-child content is mapped to fields in a search index for one-to-many indexing.\n\n- {\n\"@odata.etag\": \"\\\"0x8DDD58F12B5D0B9\\\"\", \"name\": \"pagenumskillset\", \"description\": \"Skillset to feed document to OCR skill and use Index Projection to split the content page wise\", \"skills\": [ { \"@odata.type\": \"#Microsoft.Skills.Vision.OcrSkill\", \"name\": \"#1\", \"context\": \"/document/normalized\\_images/\\*\", \"lineEnding\": \"Space\", \"defaultLanguageCode\": \"en\", \"detectOrientation\": true, \"inputs\": [ { \"name\": \"image\", \"source\": \"/document/normalized\\_images/\\*\", \"inputs\": [] } ], \"outputs\": [ { \"name\": \"text\", \"targetName\": \"text\" }, { \"name\": \"layoutText\", \"targetName\": \"layoutText\" } ] } ], \"cognitiveServices\": { \"@odata.type\": \"#Microsoft.Azure.Search.DefaultCognitiveServices\" }, \"indexProjections\": { \"selectors\": [ { \"targetIndexName\": \"pagenumidx\", \"parentKeyFieldName\": \"ParentKey\", \"sourceContext\": \"/document/normalized\\_images/\\*\", \"mappings\": [ { \"name\": \"DocText\", \"source\": \"/document/normalized\\_images/\\*/text\", \"inputs\": [] }, { \"name\": \"DocName\", \"source\": \"/document/metadata\\_storage\\_name\", \"inputs\": [] }, { \"name\": \"DocURL\", \"source\": \"/document/metadata\\_storage\\_path\", \"inputs\": [] }, { \"name\": \"PageNum\", \"source\": \"/document/normalized\\_images/\\*/pageNumber\", \"inputs\": [] } ] } ], \"parameters\": { \"projectionMode\": \"skipIndexingParentDocuments\" } } }\n\n**2. Defining Index definition**\n\nAn index is defined by a schema and stored within the search service, ensuring millisecond response times by decoupling from external data sources. Except for indexer-driven scenarios, the search service never queries the original data directly making it ideal for high-performance search applications.\n\n- {\n\"@odata.etag\": \"\\\"0x8DDD58E7F7CF595\\\"\", \"name\": \"pagenumidx\", \"fields\": [ { \"name\": \"ID\", \"type\": \"Edm.String\", \"searchable\": true, \"filterable\": false, \"retrievable\": true, \"stored\": true, \"sortable\": false, \"facetable\": false, \"key\": true, \"analyzer\": \"keyword\", \"synonymMaps\": [] }, { \"name\": \"DocText\", \"type\": \"Edm.String\", \"searchable\": true, \"filterable\": false, \"retrievable\": true, \"stored\": true, \"sortable\": false, \"facetable\": false, \"key\": false, \"synonymMaps\": [] }, { \"name\": \"DocName\", \"type\": \"Edm.String\", \"searchable\": true, \"filterable\": true, \"retrievable\": true, \"stored\": true, \"sortable\": true, \"facetable\": true, \"key\": false, \"synonymMaps\": [] }, { \"name\": \"PageNum\", \"type\": \"Edm.Int32\", \"searchable\": false, \"filterable\": true, \"retrievable\": true, \"stored\": true, \"sortable\": true, \"facetable\": false, \"key\": false, \"synonymMaps\": [] }, { \"name\": \"DocURL\", \"type\": \"Edm.String\", \"searchable\": true, \"filterable\": true, \"retrievable\": true, \"stored\": true, \"sortable\": false, \"facetable\": false, \"key\": false, \"analyzer\": \"standard.lucene\", \"synonymMaps\": [] }, { \"name\": \"ParentKey\", \"type\": \"Edm.String\", \"searchable\": true, \"filterable\": true, \"retrievable\": true, \"stored\": true, \"sortable\": false, \"facetable\": false, \"key\": false, \"analyzer\": \"keyword\", \"synonymMaps\": [] } ], \"scoringProfiles\": [], \"suggesters\": [], \"analyzers\": [], \"normalizers\": [], \"tokenizers\": [], \"tokenFilters\": [], \"charFilters\": [], \"similarity\": { \"@odata.type\": \"#Microsoft.Azure.Search.BM25Similarity\" }, \"semantic\": { \"defaultConfiguration\": \"my\\_semantic\\_cfg\", \"configurations\": [ { \"name\": \"my\\_semantic\\_cfg\", \"flightingOptIn\": false, \"rankingOrder\": \"BoostedRerankerScore\", \"prioritizedFields\": { \"titleField\": { \"fieldName\": \"DocName\" }, \"prioritizedContentFields\": [ { \"fieldName\": \"DocText\" } ], \"prioritizedKeywordsFields\": [ { \"fieldName\": \"DocName\" }, { \"fieldName\": \"ID\" } ] } } ] } }\n\n**3.Using Azure AI Search Indexer with OCR and ImageAction**\n\nAzure AI Search allows you to extract page-level data by configuring the indexer with:\n\nThis setting renders each PDF page as a separate image, which can then be processed using the OcrSkill. The OCR output can be mapped to a collection field, where each item corresponds to a page's text. This method enables you to infer page numbers based on the position of matched content in the collection.\n\n- {\n\"@odata.context\": \"https://searchinstancename.search.windows.net/$metadata#indexers/$entity\", \"@odata.etag\": \"\\\"0x8DDD58F3760067D\\\"\", \"name\": \"indexer-pagenum\", \"description\": null, \"dataSourceName\": \"azureblob-1754401027271-datasource\", \"skillsetName\": \"pagenumskillset\", \"targetIndexName\": \"pagenumidx\", \"disabled\": null, \"schedule\": null, \"parameters\": { \"batchSize\": null, \"maxFailedItems\": null, \"maxFailedItemsPerBatch\": null, \"configuration\": { \"dataToExtract\": \"contentAndMetadata\", \"parsingMode\": \"default\", \"imageAction\": \"generateNormalizedImagePerPage\", \"pdfTextRotationAlgorithm\": \"none\" } }, \"fieldMappings\": [], \"outputFieldMappings\": [], \"cache\": null, \"encryptionKey\": null }\n\n**Validation and Conclusion**\n\nYou can leverage Search Explorer to view the output which will look like below:\n\n- {\n\"@search.score\": 1, \"ID\": \"\", \"DocText\": \"the PDF content \", \"DocName\": \"docname.pdf\", \"PageNum\": 33, \"DocURL\": \"https://storageaccoutname.blob.core.windows.net/containername/docname.pdf\", \"ParentKey\": \"sammple key\" }\n\nHope this help in your requirement of getting Page Number from PDF using AI search",
  "Link": "https://techcommunity.microsoft.com/t5/azure-paas-blog/finding-the-right-page-number-in-pdfs-with-ai-search/ba-p/4440758",
  "FeedLevelAuthor": "rss.livelink.threads-in-node",
  "FeedUrl": "https://techcommunity.microsoft.com/t5/s/gxcuf89792/rss/Community"
}
