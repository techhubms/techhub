{
  "Link": "https://techcommunity.microsoft.com/t5/app-development/wpf-application-becomes-unresponsive-after-plugging-unplugging/m-p/4459751#M1274",
  "OutputDir": "_community",
  "FeedUrl": "https://techcommunity.microsoft.com/t5/s/gxcuf89792/rss/Category?category.id=dotnet",
  "Tags": [],
  "FeedName": "Microsoft Tech Community",
  "Author": "shepburn",
  "Title": "WPF application becomes unresponsive after plugging/ unplugging USB device supporting pen events",
  "EnhancedContent": "I've run across an issue on Windows 10 and 11 where WPF apps seem to become unresponsive when unplugging or plugging in a USB device that registers as an input device that can receive touch/stylus events. This can be seen by creating a basic WPF app in Visual Studio, running it, and then adding/removing one of these devices.\n\nI used Spy++ to see which messages the app was receiving. I saw a number of messages I was expecting to see - WM\\_DEVICECHANGE, WM\\_POINTERDEVICECHANGE, as well as 0x02C8 or 0x02C9 (WM\\_TABLET\\_ADDED or WM\\_TABLET\\_DELETED, respectively). However, after this, thousands (or sometimes tens of thousands) of messages were sent to a window belonging to the app that is at (0,0) with dimensions 0x0. Its caption is \"OLEChannelWnd\". The messages are mostly the same:\n\n- They're all posted to the window\n- The message ID is 0x0400 (WM\\_USER + 0)\n- The wParam is always the same (0x0000BABE)\n- The lParam varies each time I restart the WPF app, but they seem to settle on a small number of values - for example, the last time I tried this, I saw 0x05D08BB0 4-6 times, then 0x0D1B8E98 a dozen or more times, then 0x0D1B7B90 several times, and so on.\n\nDuring these messages, the app would become unresponsive for as long as these messages were posted. This could take upwards of 5- 10 minutes before recovering, and sometimes would result in a crash from the app running out of memory.\n\nAfter doing research online, I found some posts that talked about a possible issue in the PenThreadWorker thread - that it could be running into some kind of deadlock when initializing certain objects. I also found several posts that mentioned disabling the stylus & touch events by setting \"Switch.System.Windows.Input.Stylus.DisableStylusAndTouchSupport\". I can add this to the app.config for my app as follows:\n\n&lt;runtime&gt; &lt;AppContextSwitchOverrides value=\"Switch.System.Windows.Input.Stylus.DisableStylusAndTouchSupport=true\" /&gt; &lt;/runtime&gt;\n\nor, equivalently, I can do the following during application startup:\n\nAppContext.SetSwitch(\"Switch.System.Windows.Input.Stylus.DisableStylusAndTouchSupport\", true);\n\nThis does fix the issue - I don't see these WM\\_USER messages being sent to the app, and as such the app becomes immediately responsive once the device is plugged/unplugged. However, one of the WPF apps that I'm working with (i.e. not the simple test app) needs to process tablet events, so this setting can't be used there. Furthermore, it can only be set either in app.config or during application startup - any calls to it after that are ignored.\n\nI've tried this with .NET 4.5.1, .NET 4.6 (which is required to use the code-based method) as well as .NET 4.8.1, but in all cases I see this same result.\n\nAs mentioned, I know this isn't an issue unique to my app since I'm able to reproduce this issue by creating a basic WPF app and following the same steps. Additionally, I observed the same issue with other test applications I've found online while trying to troubleshoot this issue. Interestingly, I have observed this within Microsoft's own Visual Studios 2017 (which is what I'm using for development) and have found a few other threads online from other people running into the same problem with their apps. I have also tried updating to later Visual Studios versions for development of my app, but this doesn't solve the issue either.\n\nFinally, I followed this post from Microsoft regarding https://learn.microsoft.com/en-us/dotnet/desktop/wpf/advanced/disable-the-realtimestylus-for-wpf-applications and still was unable to fix the issue.",
  "Description": "I've run across an issue on Windows 10 and 11 where WPF apps seem to become unresponsive when unplugging or plugging in a USB device that registers as an input device that can receive touch/stylus events. This can be seen by creating a basic WPF app in Visual Studio, running it, and then adding/removing one of these devices.\n\nI used Spy++ to see which messages the app was receiving. I saw a number of messages I was expecting to see - WM\\_DEVICECHANGE, WM\\_POINTERDEVICECHANGE, as well as 0x02C8 or 0x02C9 (WM\\_TABLET\\_ADDED or WM\\_TABLET\\_DELETED, respectively). However, after this, thousands (or sometimes tens of thousands) of messages were sent to a window belonging to the app that is at (0,0) with dimensions 0x0. Its caption is \"OLEChannelWnd\". The messages are mostly the same:\n\n- They're all posted to the window\n- The message ID is 0x0400 (WM\\_USER + 0)\n- The wParam is always the same (0x0000BABE)\n- The lParam varies each time I restart the WPF app, but they seem to settle on a small number of values - for example, the last time I tried this, I saw 0x05D08BB0 4-6 times, then 0x0D1B8E98 a dozen or more times, then 0x0D1B7B90 several times, and so on.\n\nDuring these messages, the app would become unresponsive for as long as these messages were posted. This could take upwards of 5- 10 minutes before recovering, and sometimes would result in a crash from the app running out of memory.\n\nAfter doing research online, I found some posts that talked about a possible issue in the PenThreadWorker thread - that it could be running into some kind of deadlock when initializing certain objects. I also found several posts that mentioned disabling the stylus & touch events by setting \"Switch.System.Windows.Input.Stylus.DisableStylusAndTouchSupport\". I can add this to the app.config for my app as follows:\n\nor, equivalently, I can do the following during application startup:\n\nAppContext.SetSwitch(\"Switch.System.Windows.Input.Stylus.DisableStylusAndTouchSupport\", true);\n\nThis does fix the issue - I don't see these WM\\_USER messages being sent to the app, and as such the app becomes immediately responsive once the device is plugged/unplugged. However, one of the WPF apps that I'm working with (i.e. not the simple test app) needs to process tablet events, so this setting can't be used there. Furthermore, it can only be set either in app.config or during application startup - any calls to it after that are ignored.\n\nI've tried this with .NET 4.5.1, .NET 4.6 (which is required to use the code-based method) as well as .NET 4.8.1, but in all cases I see this same result.\n\nAs mentioned, I know this isn't an issue unique to my app since I'm able to reproduce this issue by creating a basic WPF app and following the same steps. Additionally, I observed the same issue with other test applications I've found online while trying to troubleshoot this issue. Interestingly, I have observed this within Microsoft's own Visual Studios 2017 (which is what I'm using for development) and have found a few other threads online from other people running into the same problem with their apps. I have also tried updating to later Visual Studios versions for development of my app, but this doesn't solve the issue either.\n\nFinally, I followed this post from Microsoft regarding [Disabling RealTimeStylus for WPF Apps](https://learn.microsoft.com/en-us/dotnet/desktop/wpf/advanced/disable-the-realtimestylus-for-wpf-applications) and still was unable to fix the issue.",
  "ProcessedDate": "2025-10-09 00:08:37",
  "FeedLevelAuthor": "rss.livelink.threads-in-node",
  "PubDate": "2025-10-07T18:38:42+00:00"
}
