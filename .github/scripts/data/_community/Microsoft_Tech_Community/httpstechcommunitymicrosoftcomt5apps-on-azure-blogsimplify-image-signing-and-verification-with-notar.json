{
  "Description": "Supply chain security has become one of the most pressing challenges for modern cloud-native applications. Every container image, Helm chart, SBOM, or AI model that flows through your CI/CD pipeline carries risk if its integrity or authenticity cannot be guaranteed. Attackers may attempt to tamper with artifacts, replace trusted images with malicious ones, or inject unverified base images into builds.\n\nToday, we’re excited to highlight how [**Notary Project**](https://notaryproject.dev/) and [**Trusted Signing**](https://learn.microsoft.com/en-us/azure/trusted-signing/overview) (Public Preview) make it easier than ever to secure your container image supply chain with strong, standards-based signing and verification.\n\n## Why image signing matters\n\nImage signing addresses two fundamental questions in the software supply chain:\n\n- **Integrity**: Is this artifact exactly the same one that was originally published?\n- **Authenticity**: Did this artifact really come from the expected publisher?\n\nWithout clear answers, organizations risk deploying compromised images into production environments. With signing and verification in place, you can block untrusted artifacts at build time or deployment, ensuring only approved content runs in your clusters.\n\n## Notary Project: A standard-based solution\n\nNotary Project is a CNCF open-source initiative that defines standards for signing and verifying OCI artifacts—including container images, SBOMs, Helm charts, and AI models. It provides a consistent, interoperable framework for ensuring artifact integrity and authenticity across different registries, platforms, and tools.\n\nNotary Project includes two key sub-projects that address different stages of the supply chain:\n\n- [Notation](https://github.com/notaryproject/notation)– a CLI tool designed for developers and CI/CD pipelines. It enables publishers to sign artifacts after they are built and consumers to verify signatures before artifacts are used in builds.\n- [Ratify](https://ratify.dev) – a verification engine that integrates with Azure policy and Azure Kubernetes Service (AKS). It enforces signature verification at deployment time, ensuring only trusted artifacts are admitted to run in the cluster.\n\nTogether, Notation and Ratify extend supply chain security from the build pipeline all the way to runtime, closing critical gaps and reducing the risk of running unverified content.\n\n## Trusted Signing: Simplifying certificate management\n\nTraditionally, signing workflows required managing certificates: issuing, rotating, and renewing them through services like Azure Key Vault. While this provides control, it also adds operational overhead.\n\n**Trusted Signing** changes the game. It offers:\n\n- **Zero-touch certificate lifecycle management:** no manual issuance or rotation.\n- **Short-lived certificate:** reducing the attack surface.\n- **Built-in timestamping support:** ensuring signatures remain valid even after certificates expire.\n\nWith Trusted Signing, developers focus on delivering software, not managing certificates.\n\n## End-to-end scenarios\n\nHere’s how organizations can use Notary Project and Trusted Signing together:\n\n- **Sign in CI/CD:** An image publisher signs images as part of a GitHub Actions or Azure DevOps pipeline, ensuring every artifact carries a verifiable signature.\n- **Verify in AKS:** An image consumer configures Ratify and Azure Policy on an AKS cluster to enforce that only signed images can be deployed.\n- **Verify in build pipelines:** Developers ensure base images and dependencies are verified before they’re used in application builds, blocking untrusted upstream components.\n- **Extend to all OCI artifacts:** Beyond container images, SBOMs, Helm charts, and even AI models can be signed and verified with the same workflow.\n\n## Get started\n\nTo help you get started, we’ve published new documentation and step-by-step tutorials:\n\n- [Overview: Ensuring integrity and authenticity of container images and OCI artifacts](https://learn.microsoft.com/en-us/azure/container-registry/overview-sign-verify-artifacts)\n- [Sign and verify images with Notation CLI and Trusted Signing](https://learn.microsoft.com/en-us/azure/container-registry/container-registry-tutorial-sign-verify-notation-trusted-signing)\n- [Sign container images in GitHub Actions with Trusted Signing](https://learn.microsoft.com/en-us/azure/container-registry/container-registry-tutorial-github-sign-notation-trusted-signing)\n- [Verify signatures in GitHub Actions](https://learn.microsoft.com/en-us/azure/container-registry/container-registry-tutorial-github-verify-notation-trusted-signing)\n- [Verify signatures on AKS with Ratify](https://learn.microsoft.com/en-us/azure/container-registry/container-registry-tutorial-verify-with-ratify-aks)\n\n## Try it now\n\nSupply chain security is no longer optional. By combining **Notary Project** with the streamlined certificate management experience of **Trusted Signing**, you can strengthen the integrity and authenticity of every artifact in your pipeline without slowing down your teams.\n\nStart signing today and take the next step toward a trusted software supply chain.",
  "ProcessedDate": "2025-09-25 16:16:13",
  "FeedUrl": "https://techcommunity.microsoft.com/t5/s/gxcuf89792/rss/Category?category.id=Azure",
  "Author": "YiZha",
  "EnhancedContent": "Supply chain security has become one of the most pressing challenges for modern cloud-native applications. Every container image, Helm chart, SBOM, or AI model that flows through your CI/CD pipeline carries risk if its integrity or authenticity cannot be guaranteed. Attackers may attempt to tamper with artifacts, replace trusted images with malicious ones, or inject unverified base images into builds.\n\nToday, we’re excited to highlight how [**Notary Project**](https://notaryproject.dev/) and [**Trusted Signing**](https://learn.microsoft.com/en-us/azure/trusted-signing/overview) (Public Preview) make it easier than ever to secure your container image supply chain with strong, standards-based signing and verification.\n\n## Why image signing matters\n\nImage signing addresses two fundamental questions in the software supply chain:\n\n- **Integrity**: Is this artifact exactly the same one that was originally published?\n- **Authenticity**: Did this artifact really come from the expected publisher?\n\nWithout clear answers, organizations risk deploying compromised images into production environments. With signing and verification in place, you can block untrusted artifacts at build time or deployment, ensuring only approved content runs in your clusters.\n\n## Notary Project: A standard-based solution\n\nNotary Project is a CNCF open-source initiative that defines standards for signing and verifying OCI artifacts—including container images, SBOMs, Helm charts, and AI models. It provides a consistent, interoperable framework for ensuring artifact integrity and authenticity across different registries, platforms, and tools.\n\nNotary Project includes two key sub-projects that address different stages of the supply chain:\n\n- [Notation](https://github.com/notaryproject/notation)– a CLI tool designed for developers and CI/CD pipelines. It enables publishers to sign artifacts after they are built and consumers to verify signatures before artifacts are used in builds.\n- [Ratify](https://ratify.dev) – a verification engine that integrates with Azure policy and Azure Kubernetes Service (AKS). It enforces signature verification at deployment time, ensuring only trusted artifacts are admitted to run in the cluster.\n\nTogether, Notation and Ratify extend supply chain security from the build pipeline all the way to runtime, closing critical gaps and reducing the risk of running unverified content.\n\n## Trusted Signing: Simplifying certificate management\n\nTraditionally, signing workflows required managing certificates: issuing, rotating, and renewing them through services like Azure Key Vault. While this provides control, it also adds operational overhead.\n\n**Trusted Signing** changes the game. It offers:\n\n- **Zero-touch certificate lifecycle management:**no manual issuance or rotation.\n- **Short-lived certificate:**reducing the attack surface.\n- **Built-in timestamping support:** ensuring signatures remain valid even after certificates expire.\n\nWith Trusted Signing, developers focus on delivering software, not managing certificates.\n\n## End-to-end scenarios\n\nHere’s how organizations can use Notary Project and Trusted Signing together:\n\n- **Sign in CI/CD:**An image publisher signs images as part of a GitHub Actions or Azure DevOps pipeline, ensuring every artifact carries a verifiable signature.\n- **Verify in AKS:**An image consumer configures Ratify and Azure Policy on an AKS cluster to enforce that only signed images can be deployed.\n- **Verify in build pipelines:**Developers ensure base images and dependencies are verified before they’re used in application builds, blocking untrusted upstream components.\n- **Extend to all OCI artifacts:**Beyond container images, SBOMs, Helm charts, and even AI models can be signed and verified with the same workflow.\n\n## Get started\n\nTo help you get started, we’ve published new documentation and step-by-step tutorials:\n\n- [Overview: Ensuring integrity and authenticity of container images and OCI artifacts](https://learn.microsoft.com/en-us/azure/container-registry/overview-sign-verify-artifacts)\n- [Sign and verify images with Notation CLI and Trusted Signing](https://learn.microsoft.com/en-us/azure/container-registry/container-registry-tutorial-sign-verify-notation-trusted-signing)\n- [Sign container images in GitHub Actions with Trusted Signing](https://learn.microsoft.com/en-us/azure/container-registry/container-registry-tutorial-github-sign-notation-trusted-signing)\n- [Verify signatures in GitHub Actions](https://learn.microsoft.com/en-us/azure/container-registry/container-registry-tutorial-github-verify-notation-trusted-signing)\n- [Verify signatures on AKS with Ratify](https://learn.microsoft.com/en-us/azure/container-registry/container-registry-tutorial-verify-with-ratify-aks)\n\n## Try it now\n\nSupply chain security is no longer optional. By combining **Notary Project** with the streamlined certificate management experience of **Trusted Signing**, you can strengthen the integrity and authenticity of every artifact in your pipeline without slowing down your teams.\n\nStart signing today and take the next step toward a trusted software supply chain.\n\nUpdated Sep 24, 2025\n\nVersion 1.0\n\n[cloud native](/tag/cloud%20native?nodeId=board%3AAppsonAzureBlog)\n\n[containers](/tag/containers?nodeId=board%3AAppsonAzureBlog)\n\n[!\\[YiZha&#x27;s avatar\\](https://techcommunity.microsoft.com/t5/s/gxcuf89792/images/dS0xNTIxMTgzLTUwNTYwMmk0MzczQjAxQ0IzMzVCNzk3?image-dimensions=50x50)](/users/yizha/1521183) [YiZha](/users/yizha/1521183) ![Icon for Microsoft rank](https://techcommunity.microsoft.com/t5/s/gxcuf89792/images/cmstNC05WEo0blc?image-dimensions=100x16&amp;constrain-image=true)Microsoft\n\nJoined September 15, 2022\n\n[View Profile](/users/yizha/1521183)\n\n/category/azure/blog/appsonazureblog [Apps on Azure Blog](/category/azure/blog/appsonazureblog) Follow this blog board to get notified when there's new activity",
  "Link": "https://techcommunity.microsoft.com/t5/apps-on-azure-blog/simplify-image-signing-and-verification-with-notary-project-and/ba-p/4455292",
  "Title": "Simplify Image Signing and Verification with Notary Project and Trusted Signing (Public Preview)",
  "FeedLevelAuthor": "rss.livelink.threads-in-node",
  "Tags": [],
  "OutputDir": "_community",
  "FeedName": "Microsoft Tech Community",
  "PubDate": "2025-09-25T15:23:36+00:00"
}
