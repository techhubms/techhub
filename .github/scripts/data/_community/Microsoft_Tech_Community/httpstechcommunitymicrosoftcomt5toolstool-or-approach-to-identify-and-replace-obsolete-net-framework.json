{
  "PubDate": "2025-08-22T09:39:46+00:00",
  "FeedUrl": "https://techcommunity.microsoft.com/t5/s/gxcuf89792/rss/Category?category.id=dotnet",
  "Link": "https://techcommunity.microsoft.com/t5/tools/tool-or-approach-to-identify-and-replace-obsolete-net-framework/m-p/4446845#M161",
  "EnhancedContent": "I'm in the process of migrating a solution containing multiple projects from .NET Framework 4.8 to .NET 8.\n\nAfter running the migration using the Upgrade Assistant, I encountered several issues where APIs used in the original codebase are either obsolete or no longer available in .NET 8.\n\nFor instance, System.IO.DirectoryInfo.FullName is flagged as unsupported. There are many such .NET Framework level APIs which cannot be migrated, listed below here..\n\nIs there a tool or approach that can help automatically identify and replace these obsolete .NET Framework APIs with their modern equivalents in .NET 8?\n\nIdeally, I’m looking for a solution that can work across multiple projects to streamline the migration process. Any guidance, tools, or best practices would be greatly appreciated!\n\nI tried upgrading each project in my solution using upgrade assistant tool, however most of the projects were set to .NET Standard 2.0 instead of migrating to .net8. On further analysis, it was found that as the libraries/APIs which these projects are dependent on are not supported in .NET8 or are obsolete. In order to migrate these projects to .net8, first the libraries/APIs needs to be fixed or replaced with versions which are supported by .net8.",
  "OutputDir": "_community",
  "FeedName": "Microsoft Tech Community",
  "Description": "I'm in the process of migrating a solution containing multiple projects from .NET Framework 4.8 to .NET 8.\n\nAfter running the migration using the Upgrade Assistant, I encountered several issues where APIs used in the original codebase are either obsolete or no longer available in .NET 8.\n\nFor instance, System.IO.DirectoryInfo.FullName is flagged as unsupported. There are many such .NET Framework level APIs which cannot be migrated, listed below here..\n\nIs there a tool or approach that can help automatically identify and replace these obsolete .NET Framework APIs with their modern equivalents in .NET 8?\n\nIdeally, I’m looking for a solution that can work across multiple projects to streamline the migration process. Any guidance, tools, or best practices would be greatly appreciated!\n\nI tried upgrading each project in my solution using upgrade assistant tool, however most of the projects were set to .NET Standard 2.0 instead of migrating to .net8. On further analysis, it was found that as the libraries/APIs which these projects are dependent on are not supported in .NET8 or are obsolete. In order to migrate these projects to .net8, first the libraries/APIs needs to be fixed or replaced with versions which are supported by .net8.\n\n![]()",
  "ProcessedDate": "2025-08-22 17:10:54",
  "FeedLevelAuthor": "rss.livelink.threads-in-node",
  "Title": "Tool or approach to identify and replace obsolete .NET Framework APIs during migration to .NET 8",
  "Tags": [],
  "Author": "GopalKrishnan"
}
