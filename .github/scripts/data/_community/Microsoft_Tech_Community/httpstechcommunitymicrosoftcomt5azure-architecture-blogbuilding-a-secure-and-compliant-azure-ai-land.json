{
  "FeedUrl": "https://techcommunity.microsoft.com/t5/s/gxcuf89792/rss/Category?category.id=Azure",
  "OutputDir": "_community",
  "Tags": [],
  "FeedName": "Microsoft Tech Community",
  "Description": "As organizations accelerate their AI adoption on Microsoft Azure, **governance, compliance, and security** become critical pillars for success. Deploying AI workloads without a structured compliance framework can expose enterprises to data privacy issues, misconfigurations, and regulatory risks.\n\nTo address this challenge, the **Azure AI Landing Zone** provides a **scalable and secure foundation** — bringing together **Azure Policy, Blueprints, and Infrastructure-as-Code (IaC)** to ensure every resource aligns with organizational and regulatory standards.\n\nThe **Azure Policy & Compliance Framework** acts as the **governance backbone** of this landing zone. It enforces consistency across environments by applying **policy definitions**, **initiatives**, and **assignments** that monitor and remediate non-compliant resources automatically.\n\nThis blog will guide you through:\n\n- 🧭 The **architecture and layers** of an AI Landing Zone\n- 🧩 How **Azure Policy as Code** enables automated governance\n- ⚙️ Steps to **implement and deploy** policies using IaC pipelines\n- 📈 Visualizing **compliance flows** for AI-specific resources\n\n### What is Azure AI Landing Zone (AI ALZ)?\n\nAI ALZ is a foundational architecture that integrates core Azure services (ML, OpenAI, Cognitive Services) with best practices in identity, networking, governance, and operations. To ensure consistency, security, and responsibility, a robust policy framework is essential.\n\n### Policy & Compliance in AI ALZ\n\nAzure Policy helps enforce standards across subscriptions and resource groups. You define policies (single rules), group them into initiatives (policy sets), and assign them with certain scopes & exemptions. Compliance reporting helps surface noncompliant resources for mitigation.\n\nIn AI workloads, some unique considerations:\n\n- Sensitive data (PII, models)\n- Model accountability, logging, audit trails\n- Cost & performance from heavy compute usage\n- Preview features and frequent updates\n![]()\n\n### Scope\n\nThis framework covers:\n\n![]()\n\n- Azure Machine Learning (AML)\n- Azure API Management\n- Azure AI Foundry\n- Azure App Service\n- Azure Cognitive Services\n- Azure OpenAI\n- Azure Storage Accounts\n- Azure Databases (SQL, Cosmos DB, MySQL, PostgreSQL)\n- Azure Key Vault\n- Azure Kubernetes Service\n\n### Core Policy Categories\n\n![]()\n\n1. Networking & Access Control\n\n- **Restrict resource deployment to approved regions** (e.g., Europe only).\n- **Enforce private link and private endpoint usage** for all critical resources.\n- **Disable public network access** for workspaces, storage, search, and key vaults.\n\n2. Identity & Authentication\n\n- **Require user-assigned managed identities** for resource access.\n- **Disable local authentication**; enforce Microsoft Entra ID (Azure AD) authentication.\n\n3. Data Protection\n\n- **Enforce encryption at rest with customer-managed keys (CMK)**.\n- **Restrict public access** to storage accounts and databases.\n\n4. Monitoring & Logging\n\n- **Deploy diagnostic settings** to Log Analytics for all key resources.\n- **Ensure activity/resource logs are enabled** and retained for at least one year.\n\n5. Resource-Specific Guardrails\n\n- **Apply built-in and custom policy initiatives** for OpenAI, Kubernetes, App Services, Databases, etc.\n\n> >\n> A detailed list of all policies is bundled and attached at the end of this blog. Be sure to check it out for a ready-to-use Excel file—perfect for customer workshops—which includes policy type (Standalone/Initiative), origin (Built-in/Custom), and more.\n> >\n\n### Implementation: Policy-as-Code using EPAC\n\nTo turn policies from Excel/JSON into operational governance, **Enterprise Policy as Code (EPAC)** is a powerful tool. EPAC transforms policy artifacts into a **desired state repository** and handles deployment, lifecycle, versioning, and CI/CD automation.\n\n#### What is EPAC & Why Use It?\n\n- EPAC is a set of PowerShell scripts / modules to deploy **policy definitions, initiatives, assignments, role assignments, exemptions**. [Enterprise Policy As Code (EPAC)](https://azure.github.io/enterprise-azure-policy-as-code/)\n- It supports **CI/CD integration** (GitHub Actions, Azure DevOps) so policy changes can be treated like code.\n- It handles ordering, dependency resolution, and enforcement of a “desired state” — any policy resources not in your repo may be pruned (depending on configuration).\n- It integrates with Azure Landing Zones (including governance baseline) out of the box.\n\n### References & Further Reading\n\n- [EPAC GitHub Repository](https://github.com/Azure/enterprise-azure-policy-as-code)\n- [Advanced Azure Policy management - Microsoft Learn](https://learn.microsoft.com/en-us/azure/cloud-adoption-framework/ready/policy-management/enterprise-policy-as-code) [\\[Advanced A...Framework\\]](https://learn.microsoft.com/en-us/azure/cloud-adoption-framework/ready/policy-management/enterprise-policy-as-code)\n- [How to deploy Azure policies the DevOps way](https://rabobank.jobs/en/techblog/gijs-reijn-how-to-deploy-azure-policy-the-devops-way/) [\\[How to dep...- Rabobank\\]](https://rabobank.jobs/en/techblog/gijs-reijn-how-to-deploy-azure-policy-the-devops-way/)",
  "PubDate": "2025-10-01T04:36:49+00:00",
  "Link": "https://techcommunity.microsoft.com/t5/azure-architecture-blog/building-a-secure-and-compliant-azure-ai-landing-zone-policy/ba-p/4457165",
  "EnhancedContent": "## In an AI-first world, deploying models, inference endpoints, or cognitive services without governance is risky. We need guardrails — ensuring security, compliance, cost control, and responsible AI. In this post, we’ll explore how to build a Policy & Compliance Framework specifically for Azure AI Landing Zone (AI ALZ), and how to implement it at scale using Enterprise Policy as Code (EPAC).\n\nAs organizations accelerate their AI adoption on Microsoft Azure, **governance, compliance, and security** become critical pillars for success. Deploying AI workloads without a structured compliance framework can expose enterprises to data privacy issues, misconfigurations, and regulatory risks.\n\nTo address this challenge, the **Azure AI Landing Zone** provides a **scalable and secure foundation** — bringing together **Azure Policy, Blueprints, and Infrastructure-as-Code (IaC)** to ensure every resource aligns with organizational and regulatory standards.\n\nThe **Azure Policy & Compliance Framework** acts as the **governance backbone** of this landing zone. It enforces consistency across environments by applying **policy definitions**, **initiatives**, and **assignments** that monitor and remediate non-compliant resources automatically.\n\nThis blog will guide you through:\n\n- 🧭 The **architecture and layers** of an AI Landing Zone\n- 🧩 How **Azure Policy as Code** enables automated governance\n- ⚙️ Steps to **implement and deploy** policies using IaC pipelines\n- 📈 Visualizing **compliance flows** for AI-specific resources\n\n### What is Azure AI Landing Zone (AI ALZ)?\n\nAI ALZ is a foundational architecture that integrates core Azure services (ML, OpenAI, Cognitive Services) with best practices in identity, networking, governance, and operations. To ensure consistency, security, and responsibility, a robust policy framework is essential.\n\n### Policy & Compliance in AI ALZ\n\nAzure Policy helps enforce standards across subscriptions and resource groups. You define policies (single rules), group them into initiatives (policy sets), and assign them with certain scopes & exemptions. Compliance reporting helps surface noncompliant resources for mitigation.\n\nIn AI workloads, some unique considerations:\n\n- Sensitive data (PII, models)\n- Model accountability, logging, audit trails\n- Cost & performance from heavy compute usage\n- Preview features and frequent updates\n\n### Scope\n\nThis framework covers:\n\n- Azure Machine Learning (AML)\n- Azure API Management\n- Azure AI Foundry\n- Azure App Service\n- Azure Cognitive Services\n- Azure OpenAI\n- Azure Storage Accounts\n- Azure Databases (SQL, Cosmos DB, MySQL, PostgreSQL)\n- Azure Key Vault\n- Azure Kubernetes Service\n\n### Core Policy Categories\n\n1. Networking & Access Control\n\n- **Restrict resource deployment to approved regions** (e.g., Europe only).\n- **Enforce private link and private endpoint usage** for all critical resources.\n- **Disable public network access** for workspaces, storage, search, and key vaults.\n\n2. Identity & Authentication\n\n- **Require user-assigned managed identities** for resource access.\n- **Disable local authentication**; enforce Microsoft Entra ID (Azure AD) authentication.\n\n3. Data Protection\n\n- **Enforce encryption at rest with customer-managed keys (CMK)**.\n- **Restrict public access** to storage accounts and databases.\n\n4. Monitoring & Logging\n\n- **Deploy diagnostic settings** to Log Analytics for all key resources.\n- **Ensure activity/resource logs are enabled** and retained for at least one year.\n\n5. Resource-Specific Guardrails\n\n- **Apply built-in and custom policy initiatives** for OpenAI, Kubernetes, App Services, Databases, etc.\n\n> >\n> A detailed list of all policies is bundled and attached at the end of this blog. Be sure to check it out for a ready-to-use Excel file—perfect for customer workshops—which includes policy type (Standalone/Initiative), origin (Built-in/Custom), and more.\n> >\n\n### Implementation: Policy-as-Code using EPAC\n\nTo turn policies from Excel/JSON into operational governance, **Enterprise Policy as Code (EPAC)** is a powerful tool. EPAC transforms policy artifacts into a **desired state repository** and handles deployment, lifecycle, versioning, and CI/CD automation.\n\n#### What is EPAC & Why Use It?\n\n- EPAC is a set of PowerShell scripts / modules to deploy **policy definitions, initiatives, assignments, role assignments, exemptions**. [Enterprise Policy As Code (EPAC)](https://azure.github.io/enterprise-azure-policy-as-code/)\n- It supports **CI/CD integration** (GitHub Actions, Azure DevOps) so policy changes can be treated like code.\n- It handles ordering, dependency resolution, and enforcement of a “desired state” — any policy resources not in your repo may be pruned (depending on configuration).\n- It integrates with Azure Landing Zones (including governance baseline) out of the box.\n\n### References & Further Reading\n\n- [EPAC GitHub Repository](https://github.com/Azure/enterprise-azure-policy-as-code)\n- [Advanced Azure Policy management - Microsoft Learn](https://learn.microsoft.com/en-us/azure/cloud-adoption-framework/ready/policy-management/enterprise-policy-as-code) [\\[Advanced A...Framework\\]](https://learn.microsoft.com/en-us/azure/cloud-adoption-framework/ready/policy-management/enterprise-policy-as-code)\n- [How to deploy Azure policies the DevOps way](https://rabobank.jobs/en/techblog/gijs-reijn-how-to-deploy-azure-policy-the-devops-way/) [\\[How to dep...- Rabobank\\]](https://rabobank.jobs/en/techblog/gijs-reijn-how-to-deploy-azure-policy-the-devops-way/)\n\nUpdated Oct 01, 2025\n\nVersion 1.0\n\n[apps & devops](/tag/apps%20%26%20devops?nodeId=board%3AAzureArchitectureBlog)\n\n[artificial intelligence](/tag/artificial%20intelligence?nodeId=board%3AAzureArchitectureBlog)\n\n[infrastructure](/tag/infrastructure?nodeId=board%3AAzureArchitectureBlog)\n\n[well architected](/tag/well%20architected?nodeId=board%3AAzureArchitectureBlog)\n\n[!\\[Madhur_Shukla&#x27;s avatar\\](https://techcommunity.microsoft.com/t5/s/gxcuf89792/m_assets/avatars/default/avatar-2.svg?image-dimensions=50x50)](/users/madhur_shukla/2646569) [Madhur_Shukla](/users/madhur_shukla/2646569) ![Icon for Microsoft rank](https://techcommunity.microsoft.com/t5/s/gxcuf89792/images/cmstNC05WEo0blc?image-dimensions=100x16&amp;constrain-image=true)Microsoft\n\nJoined September 01, 2024\n\n[View Profile](/users/madhur_shukla/2646569)\n\n/category/azure/blog/azurearchitectureblog [Azure Architecture Blog](/category/azure/blog/azurearchitectureblog) Follow this blog board to get notified when there's new activity",
  "ProcessedDate": "2025-10-01 05:04:00",
  "Author": "Madhur_Shukla",
  "FeedLevelAuthor": "rss.livelink.threads-in-node",
  "Title": "Building a Secure and Compliant Azure AI Landing Zone: Policy Framework & Best Practices"
}
