{
  "FeedUrl": "https://techcommunity.microsoft.com/t5/s/gxcuf89792/rss/Category?category.id=Azure",
  "Link": "https://techcommunity.microsoft.com/t5/apps-on-azure-blog/introducing-azure-app-testing-scalable-end-to-end-app-validation/ba-p/4440496",
  "Tags": [],
  "OutputDir": "_community",
  "FeedName": "Microsoft Tech Community",
  "ProcessedDate": "2025-08-08 15:46:10",
  "Title": "Introducing Azure App Testing: Scalable End-to-end App Validation",
  "FeedLevelAuthor": "rss.livelink.threads-in-node",
  "EnhancedContent": "[**Azure App Testing**](https://aka.ms/AzureAppTesting/product) enables developers and QA teams to run large-scale functional and performance tests to pinpoint issues in their applications, across frameworks like Playwright, JMeter, or Locust. It brings together two powerful testing capabilities—**Azure Load Testing** and **Microsoft Playwright Testing**—into a single hub in the Azure Portal, providing a consistent experience for resource provisioning, access control, and consolidated billing. With Azure App Testing, our goal is to help you spend less time managing infrastructure and more time harnessing AI-driven test automation to boost quality and innovation.\n\n### Key Benefits\n\n- **AI-driven testing:** Accelerate test creation and insights with AI-powered tooling.\n- **Limitless scale**: Simulate real-world traffic from multiple regions with load tests, and run highly parallel, cross-browser end-to-end web tests.\n- **Infrastructure free testing**: Azure handles provisioning, scaling, and maintenance so you can focus purely on quality.\n\n## Core Capabilities\n\nWith Azure App Testing, developer and QA teams can provision, manage, and pay for both Load Testing and Playwright Workspaces under a single umbrella.\n\n### Load Testing\n\n[**Load Testing**](https://aka.ms/loadtesting/docs) **** in Azure App Testing enables teams to simulate high-scale traffic using JMeter or Locust to uncover performance bottlenecks:\n\n- **AI-powered test authoring** in [VS Code with GitHub Copilot Agent mode](https://aka.ms/malt-vscode/get) .\n- **AI-driven insights** that [detect issues and recommend fixes](https://aka.ms/malt-insights/docs).\n- **Multi-region traffic simulation** with support for public/private endpoints.\n- **Quick URL-based tests**in the Azure Portal—no scripts required.\n\n### Playwright Workspaces\n\nPlaywright’s rich tooling—[VS Code extension](https://marketplace.visualstudio.com/items?itemName=ms-playwright.playwright), [Codegen](https://playwright.dev/docs/codegen), and [Playwright MCP](https://github.com/microsoft/playwright-mcp) with AI-assisted support—powers your test authoring. [**Playwright Workspaces**](https://aka.ms/pww/docs) builds on that by running scalable, cross-browser end-to-end web tests without managing infrastructure:\n\n- **Cloud-hosted parallel execution** to speed up end-to-end test validation and feedback loops.\n- **Multi‑OS & browser support** across Windows and Linux, and all major browsers (Chromium, Firefox, WebKit).\n- **CI integration** for continuous testing and early regression detection.\n\n# Get Started with Azure App Testing\n\n1. Open the **Azure Portal** and search for **Azure App Testing**.\n2. Select **Azure App Testing**.\n3. Create workspaces for either **Azure Load Testing** or **Playwright Workspaces**.\n4. Begin authoring and executing tests at scale to drive accelerated development workflows.\n\n### Load Testing Quickstarts\n\n- [Create and run a load test with GitHub Copilot in VS Code](https://aka.ms/malt-vscode/get)\n- [Create and run a URL-based load test](https://aka.ms/loadtesting/quickstart)\n- [Run a load test using an existing JMeter script](https://aka.ms/loadtesting/quickstart-jmeter)\n- [Run a load test using an existing Locust script](https://aka.ms/loadtesting/quickstart-locust)\n- [Automate load tests in Azure Pipelines or GitHub Actions](https://aka.ms/loadtesting/quickstart-ci)\n\n### Playwright Workspaces Quickstarts\n\n- [Run end-to-end web tests at scale](https://aka.ms/pww/docs/quickstart)\n- [Set up continuous testing in your CI workflow](https://aka.ms/pww/docs/speed-up-ci)\n\n# For Existing Customers\n\n### Azure Load Testing users\n\n- **No changes**: Your resources and tests continue working as before—now visible within the Azure App Testing hub.\n- **Same pricing and management**: Features and billing remain unchanged.\n\n### Microsoft Playwright Testing users\n\n- **Migrate to Playwright Workspaces:** To take advantage of the unified experience in Azure App Testing, we recommend migrating your existing [Microsoft Playwright Testing (Preview)](https://aka.ms/mpt/docs) workloads to [Playwright Workspaces](https://aka.ms/pww/docs) in Azure App Testing. See our [migration guide](https://aka.ms/mpt/migration-guidance) for step-by-step instructions and best practices.\n\n# Learn more about Azure App Testing\n\n[Product page & pricing](https://aka.ms/azureapptesting/product)\n\n[Documentation](https://aka.ms/azureapptesting/docs)\n\nUpdated Aug 07, 2025\n\nVersion 1.0\n\n[azure app service](/tag/azure%20app%20service?nodeId=board%3AAppsonAzureBlog)\n\n[azure load testing](/tag/azure%20load%20testing?nodeId=board%3AAppsonAzureBlog)\n\n[devops](/tag/devops?nodeId=board%3AAppsonAzureBlog)\n\n[microsoft playwright testing](/tag/microsoft%20playwright%20testing?nodeId=board%3AAppsonAzureBlog)\n\n[web apps](/tag/web%20apps?nodeId=board%3AAppsonAzureBlog)\n\n[!\\[John_Stallo&#x27;s avatar\\](https://techcommunity.microsoft.com/t5/s/gxcuf89792/images/dS0xOTkwODczLTdONndmaA?image-coordinates=0%2C0%2C191%2C191&amp;image-dimensions=50x50)](/users/john_stallo/1990873) [John_Stallo](/users/john_stallo/1990873) ![Icon for Microsoft rank](https://techcommunity.microsoft.com/t5/s/gxcuf89792/images/cmstNC05WEo0blc?image-dimensions=100x16&amp;constrain-image=true)Microsoft\n\nJoined August 22, 2023\n\n[View Profile](/users/john_stallo/1990873)\n\n/category/azure/blog/appsonazureblog [Apps on Azure Blog](/category/azure/blog/appsonazureblog) Follow this blog board to get notified when there's new activity",
  "Author": "John_Stallo",
  "PubDate": "2025-08-07T17:43:18+00:00",
  "Description": "[**Azure App Testing**](https://aka.ms/AzureAppTesting/product) enables developers and QA teams to run large-scale functional and performance tests to pinpoint issues in their applications, across frameworks like Playwright, JMeter, or Locust. It brings together two powerful testing capabilities—**Azure Load Testing** and **Microsoft Playwright Testing**—into a single hub in the Azure Portal, providing a consistent experience for resource provisioning, access control, and consolidated billing. With Azure App Testing, our goal is to help you spend less time managing infrastructure and more time harnessing AI-driven test automation to boost quality and innovation.\n\n### Key Benefits\n\n- **AI-driven testing:** Accelerate test creation and insights with AI-powered tooling.\n- **Limitless scale**: Simulate real-world traffic from multiple regions with load tests, and run highly parallel, cross-browser end-to-end web tests.\n- **Infrastructure free testing**: Azure handles provisioning, scaling, and maintenance so you can focus purely on quality.\n\n![]()\n\n## Core Capabilities\n\nWith Azure App Testing, developer and QA teams can provision, manage, and pay for both Load Testing and Playwright Workspaces under a single umbrella.\n\n### Load Testing\n\n[**Load Testing**](https://aka.ms/loadtesting/docs) **** in Azure App Testing enables teams to simulate high-scale traffic using JMeter or Locust to uncover performance bottlenecks:\n\n- **AI-powered test authoring** in [VS Code with GitHub Copilot Agent mode](https://aka.ms/malt-vscode/get) .\n- **AI-driven insights** that [detect issues and recommend fixes](https://aka.ms/malt-insights/docs).\n- **Multi-region traffic simulation** with support for public/private endpoints.\n- **Quick URL-based tests**in the Azure Portal—no scripts required.\n\n### Playwright Workspaces\n\nPlaywright’s rich tooling—[VS Code extension](https://marketplace.visualstudio.com/items?itemName=ms-playwright.playwright), [Codegen](https://playwright.dev/docs/codegen), and [Playwright MCP](https://github.com/microsoft/playwright-mcp) with AI-assisted support—powers your test authoring. [**Playwright Workspaces**](https://aka.ms/pww/docs) builds on that by running scalable, cross-browser end-to-end web tests without managing infrastructure:\n\n- **Cloud-hosted parallel execution** to speed up end-to-end test validation and feedback loops.\n- **Multi‑OS & browser support** across Windows and Linux, and all major browsers (Chromium, Firefox, WebKit).\n- **CI integration** for continuous testing and early regression detection.\n\n# Get Started with Azure App Testing\n\n1. Open the **Azure Portal** and search for **Azure App Testing**.\n2. Select **Azure App Testing**.\n3. Create workspaces for either **Azure Load Testing** or **Playwright Workspaces**.\n4. Begin authoring and executing tests at scale to drive accelerated development workflows.\n\n### Load Testing Quickstarts\n\n- [Create and run a load test with GitHub Copilot in VS Code](https://aka.ms/malt-vscode/get)\n- [Create and run a URL-based load test](https://aka.ms/loadtesting/quickstart)\n- [Run a load test using an existing JMeter script](https://aka.ms/loadtesting/quickstart-jmeter)\n- [Run a load test using an existing Locust script](https://aka.ms/loadtesting/quickstart-locust)\n- [Automate load tests in Azure Pipelines or GitHub Actions](https://aka.ms/loadtesting/quickstart-ci)\n\n### Playwright Workspaces Quickstarts\n\n- [Run end-to-end web tests at scale](https://aka.ms/pww/docs/quickstart)\n- [Set up continuous testing in your CI workflow](https://aka.ms/pww/docs/speed-up-ci)\n\n# For Existing Customers\n\n### Azure Load Testing users\n\n- **No changes**: Your resources and tests continue working as before—now visible within the Azure App Testing hub.\n- **Same pricing and management**: Features and billing remain unchanged.\n\n### Microsoft Playwright Testing users\n\n- **Migrate to Playwright Workspaces:** To take advantage of the unified experience in Azure App Testing, we recommend migrating your existing [Microsoft Playwright Testing (Preview)](https://aka.ms/mpt/docs) workloads to [Playwright Workspaces](https://aka.ms/pww/docs) in Azure App Testing. See our [migration guide](https://aka.ms/mpt/migration-guidance) for step-by-step instructions and best practices.\n\n# Learn more about Azure App Testing\n\n[Product page & pricing](https://aka.ms/azureapptesting/product)\n\n[Documentation](https://aka.ms/azureapptesting/docs)"
}
