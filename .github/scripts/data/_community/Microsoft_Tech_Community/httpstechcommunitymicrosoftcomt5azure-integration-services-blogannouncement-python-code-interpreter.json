{
  "FeedLevelAuthor": "rss.livelink.threads-in-node",
  "ProcessedDate": "2025-09-09 18:15:44",
  "FeedName": "Microsoft Tech Community",
  "PubDate": "2025-09-09T18:10:15+00:00",
  "Tags": [],
  "FeedUrl": "https://techcommunity.microsoft.com/t5/s/gxcuf89792/rss/Category?category.id=Azure",
  "Title": "üì¢Announcement! Python Code Interpreter in Logic Apps is now in Public Preview",
  "Author": "DivSwa",
  "Description": "As AI agents evolve, they increasingly need to do more than just respond to text‚Äîthey must analyze structured data, reason over complex patterns, and perform custom computations on demand. This is especially true in real-world scenarios where users upload large CSV files and expect agents to perform tasks like exploratory data analysis or generating insights‚Äîall from natural language prompts.\n\n## Why This Matters\n\n![]()\n\nThe above image captures why this matters - behind this need lies a real challenge that many businesses face today. Data is diverse, fragmented, and large. It often comes in the form of CSV files, Excel spreadsheets, or JSON‚Äîcontaining thousands or even millions of rows. But this raw data is rarely useful on its own.\n\nIt typically requires:\n\n- Cleaning and transformation\n- Custom logic to extract insights\n- Visualizations or summaries that make the data actionable\n\nThese steps are often manual, error-prone, and time-consuming‚Äîespecially for users without data science or engineering expertise.\n\n## Introducing Python Code Interpreter in Logic Apps Agent Loop\n\nWe‚Äôre excited to announce support for **Python code execution**, powered by [Azure Container Apps (ACA) session pool](https://learn.microsoft.com/en-us/azure/container-apps/sessions-code-interpreter).\n\n![]()\n\nThis capability enables Logic Apps developers to use Python Code Interpreter in their workflows and also as a tool in Agent loop. You can author the code or use LLM to write code for you. As a code interpreter tool, it\n\n- Accept natural language instructions\n- Automatically generate Python code\n- Execute that code securely on uploaded datasets (like CSV or JSON)\n- Return insights, visualizations, or next-step data back to the user\n\nThis brings the power of a code interpreter‚Äîsimilar to ChatGPT‚Äôs advanced data analysis tool‚Äîright into the Logic Apps runtime. Instead of writing code or manually manipulating spreadsheets, users can now describe their intent in natural language‚Äîfor example:\n\n- ‚ÄúFind the top 5 products by revenue‚Äù\n- ‚ÄúForecast demand by region for the next quarter‚Äù\n- ‚ÄúHighlight customer segments based on purchase patterns‚Äù\n\nUnder the hood, Logic Apps now enables this flow by interpreting the instruction, generating Python code, executing it securely in an isolated environment, and returning usable results‚Äî summaries, forecasts, or data transformations‚Äîwithin the same workflow.\n\n## Real-World Use Cases\n\nThis opens up a wide range of possibilities for businesses looking to embed intelligence into their automation:\n\n- Sales & Marketing: Upload raw sales data and get on-the-fly summaries, forecasts, or regional comparisons.\n- Finance: Analyze expense reports, detect anomalies, or generate quarterly breakdowns from Excel exports.\n- Operations: Clean large log files, surface exceptions, and generate insights to improve reliability.\n- Data Exploration: Let business users ask questions like ‚ÄúWhich region had the highest YoY growth?‚Äù without writing a single line of code.\n\n## How It Works\n\n- The action to execute Python code is powered by Azure Container Apps (ACA)session pool. Azure Container Apps [dynamic sessions](https://learn.microsoft.com/en-us/azure/container-apps/sessions)provides fast and scalable access to a code interpreter. Each code interpreter session is fully isolated by a Hyper-V boundary and is designed to run untrusted code. By enabling network isolation on ACA, your data never leaves the defined network boundaries\n- In Logic Apps, choose the action to execute Python code. You need to create a connection to the ACA session before you use the action. The code to execute can be authored by the developer or generated by the agent\n- Optionally, upload file to the ACA session which can then be referenced as a data source in the Python code\n- Run the workflow to get insights/results from the action execution\n\n## Getting Started\n\nWe can‚Äôt wait to see developers use this feature to build powerful agents! You can find all the details about the feature and step by step guidance to use this capability in our [MS Learn document](https://learn.microsoft.com/azure/logic-apps/connectors/code-interpreter-python-container-apps-session).\n\nIf you have any questions, comments or feedback, please reach out to us via this form: [http://aka.ms/la/feedback](http://aka.ms/la/feedback)",
  "Link": "https://techcommunity.microsoft.com/t5/azure-integration-services-blog/announcement-python-code-interpreter-in-logic-apps-is-now-in/ba-p/4452239",
  "EnhancedContent": "As AI agents evolve, they increasingly need to do more than just respond to text‚Äîthey must analyze structured data, reason over complex patterns, and perform custom computations on demand. This is especially true in real-world scenarios where users upload large CSV files and expect agents to perform tasks like exploratory data analysis or generating insights‚Äîall from natural language prompts.\n\n## Why This Matters\n\nThe above image captures why this matters - behind this need lies a real challenge that many businesses face today. Data is diverse, fragmented, and large. It often comes in the form of CSV files, Excel spreadsheets, or JSON‚Äîcontaining thousands or even millions of rows. But this raw data is rarely useful on its own.\n\nIt typically requires:\n\n- Cleaning and transformation\n- Custom logic to extract insights\n- Visualizations or summaries that make the data actionable\n\nThese steps are often manual, error-prone, and time-consuming‚Äîespecially for users without data science or engineering expertise.\n\n## Introducing Python Code Interpreter in Logic Apps Agent Loop\n\nWe‚Äôre excited to announce support for **Python code execution**, powered by [Azure Container Apps (ACA) session pool](https://learn.microsoft.com/en-us/azure/container-apps/sessions-code-interpreter).\n\nThis capability enables Logic Apps developers to use Python Code Interpreter in their workflows and also as a tool in Agent loop. You can author the code or use LLM to write code for you. As a code interpreter tool, it\n\n- Accept natural language instructions\n- Automatically generate Python code\n- Execute that code securely on uploaded datasets (like CSV or JSON)\n- Return insights, visualizations, or next-step data back to the user\n\nThis brings the power of a code interpreter‚Äîsimilar to ChatGPT‚Äôs advanced data analysis tool‚Äîright into the Logic Apps runtime. Instead of writing code or manually manipulating spreadsheets, users can now describe their intent in natural language‚Äîfor example:\n\n- ‚ÄúFind the top 5 products by revenue‚Äù\n- ‚ÄúForecast demand by region for the next quarter‚Äù\n- ‚ÄúHighlight customer segments based on purchase patterns‚Äù\n\nUnder the hood, Logic Apps now enables this flow by interpreting the instruction, generating Python code, executing it securely in an isolated environment, and returning usable results‚Äî summaries, forecasts, or data transformations‚Äîwithin the same workflow.\n\n## Real-World Use Cases\n\nThis opens up a wide range of possibilities for businesses looking to embed intelligence into their automation:\n\n- Sales & Marketing: Upload raw sales data and get on-the-fly summaries, forecasts, or regional comparisons.\n- Finance: Analyze expense reports, detect anomalies, or generate quarterly breakdowns from Excel exports.\n- Operations: Clean large log files, surface exceptions, and generate insights to improve reliability.\n- Data Exploration: Let business users ask questions like ‚ÄúWhich region had the highest YoY growth?‚Äù without writing a single line of code.\n\n## How It Works\n\n- The action to execute Python code is powered by Azure Container Apps (ACA)session pool. Azure Container Apps¬†[dynamic sessions](https://learn.microsoft.com/en-us/azure/container-apps/sessions)provides fast and scalable access to a code interpreter. Each code interpreter session is fully isolated by a Hyper-V boundary and is designed to run untrusted code. By enabling network isolation on ACA, your data never leaves the defined network boundaries\n- In Logic Apps, choose the action to execute Python code. You need to create a connection to the ACA session before you use the action. The code to execute can be authored by the developer or generated by the agent\n- Optionally, upload file to the ACA session which can then be referenced as a data source in the Python code\n- Run the workflow to get insights/results from the action execution\n\n## Getting Started\n\nWe can‚Äôt wait to see developers use this feature to build powerful agents! ¬†You can find all the details about the feature and step by step guidance to use this capability in our [MS Learn document](https://learn.microsoft.com/azure/logic-apps/connectors/code-interpreter-python-container-apps-session).\n\nIf you have any questions, comments or feedback, please reach out to us via this form: [http://aka.ms/la/feedback](http://aka.ms/la/feedback)\n\nUpdated Sep 09, 2025\n\nVersion 2.0\n\n[ai](/tag/ai?nodeId=board%3AIntegrationsonAzureBlog)\n\n[logic apps standard](/tag/logic%20apps%20standard?nodeId=board%3AIntegrationsonAzureBlog)\n\n[openai](/tag/openai?nodeId=board%3AIntegrationsonAzureBlog)\n\n[!\\[DivSwa&#x27;s avatar\\](https://techcommunity.microsoft.com/t5/s/gxcuf89792/images/dS0xNTYxNTYzLTQxNzI3NmlGRjYyMDM2MjI1MjVFMjhD?image-dimensions=50x50)](/users/divswa/1561563) [DivSwa](/users/divswa/1561563) ![Icon for Microsoft rank](https://techcommunity.microsoft.com/t5/s/gxcuf89792/images/cmstNC05WEo0blc?image-dimensions=100x16&amp;constrain-image=true)Microsoft\n\nJoined October 11, 2022\n\n[View Profile](/users/divswa/1561563)\n\n/category/azure/blog/integrationsonazureblog [Azure Integration Services Blog](/category/azure/blog/integrationsonazureblog) Follow this blog board to get notified when there's new activity",
  "OutputDir": "_community"
}
