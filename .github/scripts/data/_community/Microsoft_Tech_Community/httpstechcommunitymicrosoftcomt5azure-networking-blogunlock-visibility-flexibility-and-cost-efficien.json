{
  "FeedLevelAuthor": "rss.livelink.threads-in-node",
  "EnhancedContent": "#### **Introduction**\n\nIn today’s cloud-native landscape, organizations are accelerating the deployment of web applications at unprecedented speed. But with rapid scale comes increased complexity—and a growing need for deep, actionable visibility into the underlying infrastructure. As businesses embrace modern architectures, the demand for scalable, secure, and observable web applications continues to rise. Azure Application Gateway is evolving to meet these needs, offering enhanced logging capabilities that empower teams to gain richer insights, optimize costs, and simplify operations.\n\nThis article highlights three powerful enhancements that are transforming how teams use logging in Azure Application Gateway:\n\n- Resource-specific tables\n\n- Data collection rule (DCR) transformations\n\n- Basic log plan\n\nResource-specific tables improve organization and query performance. DCR transformations give teams fine-grained control over the structure and content of their log data. And the basic log plan makes comprehensive logging more accessible and cost-effective. Together, these capabilities deliver a smarter, more structured, and cost-aware approach to observability.\n\n#### **Resource-specific tables: Structured and efficient logging**\n\nAzure Monitor stores logs in a Log Analytics workspace powered by [Azure Data Explorer](https://learn.microsoft.com/en-us/azure/data-explorer/). Previously, when you configured Log Analytics, all diagnostic data for Application Gateway was stored in a single, generic table called AzureDiagnostics. This approach often led to slower queries and increased complexity, especially when working with large datasets.\n\nWith resource-specific logging, Application Gateway logs are now organised into dedicated tables, each optimised for a specific log type:\n\n- [AGWAccessLogs](https://learn.microsoft.com/en-us/azure/azure-monitor/reference/tables/agwaccesslogs)- Contains access log information\n\n- [AGWPerformanceLogs-](https://learn.microsoft.com/en-us/azure/azure-monitor/reference/tables/agwperformancelogs)Contains performance metrics and data\n\n- [AGWFirewallLogs-](https://learn.microsoft.com/en-us/azure/azure-monitor/reference/tables/agwfirewalllogs)Contains Web Application Firewall (WAF) log data\n\nThis structured approach delivers several key benefits:\n\n- Simplified queries – Reduces the need for complex filtering and data manipulation\n\n- Improved schema discovery – Makes it easier to understand log structure and fields\n\n- Enhanced performance – Speeds up both ingestion and query execution\n\n- Granular access control – Allows you to [grant Azure role-based access control](https://docs.microsoft.com/en-us/azure/azure-monitor/logs/manage-access?tabs=portal#table-level-azure-rbac) (RBAC) permissions on specific tables\n\nExample: Azure diagnostics vs. resource-specific table approach\n\nTraditional AzureDiagnostics query:\n\nAzureDiagnostics\n\n| where ResourceType == \"APPLICATIONGATEWAYS\" and Category == \"ApplicationGatewayAccessLog\"\n\n| extend clientIp\\_s = todynamic(properties\\_s).clientIP\n\n| where clientIp\\_s == \"203.0.113.1\"\n\nNew resource-specific table query:\n\nAGWAccessLogs\n\n| where ClientIP == \"203.0.113.1\"\n\nThe resource-specific approach is cleaner, faster, and easier to maintain as it eliminates complex filtering and data manipulation.\n\n#### **Data collection rules (DCR) log transformations: Take control of your log pipeline**\n\nDCR transformations offer a flexible way to shape log data before it reaches your Log Analytics workspace. Instead of ingesting raw logs and filtering them post-ingestion, you can now filter, enrich, and transform logs at the source, giving you greater control and efficiency.\n\nWhy DCR transformations matter:\n\n- Optimize costs: Reduce ingestion volume by excluding non-essential data\n\n- Support compliance: Strip out personally identifiable information (PII) before logs are stored, helping meet GDPR and CCPA requirements\n\n- Manage volume: Ideal for high-throughput environments where only actionable data is needed\n\n#### **Real-world use cases**\n\nWhether you're handling high-traffic e-commerce workloads, processing sensitive healthcare data, or managing development environments with cost constraints, DCR transformations help tailor your logging strategy to meet specific business and regulatory needs.\n\nFor implementation guidance and best practices, refer to [Transformations Azure Monitor - Azure Monitor](https://learn.microsoft.com/en-us/azure/azure-monitor/data-collection/data-collection-transformations)\n\nBasic log plan - Cost-effective logging for low-priority data\n\nNot all logs require real-time analysis. Some are used for occasional debugging or compliance audits. The Basic log plan in Log Analytics provides a cost-effective way to retain high-volume, low-priority diagnostic data—without paying for premium features you may not need.\n\nWhen to use the Basic log plan\n\n- Save on costs: Pay-as-you-go pricing with lower ingestion rates\n\n- Debugging and forensics: Retain data for troubleshooting and incident analysis, without paying premium costs for features you don't use regularly\n\n#### **Understanding the trade-offs**\n\nWhile the Basic plan offers significant savings, it comes with limitations:\n\n- No real-time alerts: Not suitable for monitoring critical health metrics\n\n- Query constraints: Limited KQL functionality and additional query costs\n\nChoose the Basic plan when deep analytics and alerting aren’t required and focus premium resources on critical logs.\n\n#### **Building a smart logging strategy with Azure Application Gateway**\n\nTo get the most out of Azure Application Gateway logging, combine the strengths of all three capabilities:\n\n- Assess your needs: Identify which logs require real-time monitoring versus those used for compliance or debugging\n\n- Design for efficiency: Use the Basic log plan for low-priority data, and reserve standard tiers for critical logs\n\n- Transform at the source: Apply DCR transformations to reduce costs and meet compliance before ingestion\n\n- Query with precision: Use resource-specific tables to simplify queries and improve performance\n\nThis integrated approach helps teams achieve deep visibility, maintain compliance, and manage costs.\n\nUpdated Sep 25, 2025\n\nVersion 1.0\n\n[application gateway](/tag/application%20gateway?nodeId=board%3AAzureNetworkingBlog)\n\n[azure networking](/tag/azure%20networking?nodeId=board%3AAzureNetworkingBlog)\n\n[updates](/tag/updates?nodeId=board%3AAzureNetworkingBlog)\n\n[!\\[vnamani&#x27;s avatar\\](https://techcommunity.microsoft.com/t5/s/gxcuf89792/m_assets/avatars/default/avatar-8.svg?image-dimensions=50x50)](/users/vnamani/3092431) [vnamani](/users/vnamani/3092431) ![Icon for Microsoft rank](https://techcommunity.microsoft.com/t5/s/gxcuf89792/images/cmstNC05WEo0blc?image-dimensions=100x16&amp;constrain-image=true)Microsoft\n\nJoined June 30, 2025\n\n[View Profile](/users/vnamani/3092431)\n\n/category/azure/blog/azurenetworkingblog [Azure Networking Blog](/category/azure/blog/azurenetworkingblog) Follow this blog board to get notified when there's new activity",
  "Tags": [],
  "FeedUrl": "https://techcommunity.microsoft.com/t5/s/gxcuf89792/rss/Category?category.id=Azure",
  "PubDate": "2025-09-25T21:12:08+00:00",
  "OutputDir": "_community",
  "ProcessedDate": "2025-09-25 22:10:18",
  "Description": "#### **Introduction**\n\nIn today’s cloud-native landscape, organizations are accelerating the deployment of web applications at unprecedented speed. But with rapid scale comes increased complexity—and a growing need for deep, actionable visibility into the underlying infrastructure. As businesses embrace modern architectures, the demand for scalable, secure, and observable web applications continues to rise. Azure Application Gateway is evolving to meet these needs, offering enhanced logging capabilities that empower teams to gain richer insights, optimize costs, and simplify operations.\n\nThis article highlights three powerful enhancements that are transforming how teams use logging in Azure Application Gateway:\n\n- Resource-specific tables\n\n- Data collection rule (DCR) transformations\n\n- Basic log plan\n\nResource-specific tables improve organization and query performance. DCR transformations give teams fine-grained control over the structure and content of their log data. And the basic log plan makes comprehensive logging more accessible and cost-effective. Together, these capabilities deliver a smarter, more structured, and cost-aware approach to observability.\n\n#### **Resource-specific tables: Structured and efficient logging**\n\nAzure Monitor stores logs in a Log Analytics workspace powered by [Azure Data Explorer](https://learn.microsoft.com/en-us/azure/data-explorer/). Previously, when you configured Log Analytics, all diagnostic data for Application Gateway was stored in a single, generic table called AzureDiagnostics. This approach often led to slower queries and increased complexity, especially when working with large datasets.\n\nWith resource-specific logging, Application Gateway logs are now organised into dedicated tables, each optimised for a specific log type:\n\n- [AGWAccessLogs](https://learn.microsoft.com/en-us/azure/azure-monitor/reference/tables/agwaccesslogs)- Contains access log information\n\n- [AGWPerformanceLogs-](https://learn.microsoft.com/en-us/azure/azure-monitor/reference/tables/agwperformancelogs)Contains performance metrics and data\n\n- [AGWFirewallLogs-](https://learn.microsoft.com/en-us/azure/azure-monitor/reference/tables/agwfirewalllogs)Contains Web Application Firewall (WAF) log data\n\nThis structured approach delivers several key benefits:\n\n- Simplified queries – Reduces the need for complex filtering and data manipulation\n\n- Improved schema discovery – Makes it easier to understand log structure and fields\n\n- Enhanced performance – Speeds up both ingestion and query execution\n\n- Granular access control – Allows you to [grant Azure role-based access control](https://docs.microsoft.com/en-us/azure/azure-monitor/logs/manage-access?tabs=portal#table-level-azure-rbac) (RBAC) permissions on specific tables\n\nExample: Azure diagnostics vs. resource-specific table approach\n\nTraditional AzureDiagnostics query:\n\nAzureDiagnostics\n\n| where ResourceType == \"APPLICATIONGATEWAYS\" and Category == \"ApplicationGatewayAccessLog\"\n\n| extend clientIp\\_s = todynamic(properties\\_s).clientIP\n\n| where clientIp\\_s == \"203.0.113.1\"\n\nNew resource-specific table query:\n\nAGWAccessLogs\n\n| where ClientIP == \"203.0.113.1\"\n\nThe resource-specific approach is cleaner, faster, and easier to maintain as it eliminates complex filtering and data manipulation.\n\n#### **Data collection rules (DCR) log transformations: Take control of your log pipeline**\n\nDCR transformations offer a flexible way to shape log data before it reaches your Log Analytics workspace. Instead of ingesting raw logs and filtering them post-ingestion, you can now filter, enrich, and transform logs at the source, giving you greater control and efficiency.\n\nWhy DCR transformations matter:\n\n- Optimize costs: Reduce ingestion volume by excluding non-essential data\n\n- Support compliance: Strip out personally identifiable information (PII) before logs are stored, helping meet GDPR and CCPA requirements\n\n- Manage volume: Ideal for high-throughput environments where only actionable data is needed\n\n![]()\n\n#### **Real-world use cases**\n\nWhether you're handling high-traffic e-commerce workloads, processing sensitive healthcare data, or managing development environments with cost constraints, DCR transformations help tailor your logging strategy to meet specific business and regulatory needs.\n\nFor implementation guidance and best practices, refer to [Transformations Azure Monitor - Azure Monitor](https://learn.microsoft.com/en-us/azure/azure-monitor/data-collection/data-collection-transformations)\n\nBasic log plan - Cost-effective logging for low-priority data\n\nNot all logs require real-time analysis. Some are used for occasional debugging or compliance audits. The Basic log plan in Log Analytics provides a cost-effective way to retain high-volume, low-priority diagnostic data—without paying for premium features you may not need.\n\nWhen to use the Basic log plan\n\n- Save on costs: Pay-as-you-go pricing with lower ingestion rates\n\n- Debugging and forensics: Retain data for troubleshooting and incident analysis, without paying premium costs for features you don't use regularly\n\n#### **Understanding the trade-offs**\n\nWhile the Basic plan offers significant savings, it comes with limitations:\n\n- No real-time alerts: Not suitable for monitoring critical health metrics\n\n- Query constraints: Limited KQL functionality and additional query costs\n\nChoose the Basic plan when deep analytics and alerting aren’t required and focus premium resources on critical logs.\n\n#### **Building a smart logging strategy with Azure Application Gateway**\n\nTo get the most out of Azure Application Gateway logging, combine the strengths of all three capabilities:\n\n- Assess your needs: Identify which logs require real-time monitoring versus those used for compliance or debugging\n\n- Design for efficiency: Use the Basic log plan for low-priority data, and reserve standard tiers for critical logs\n\n- Transform at the source: Apply DCR transformations to reduce costs and meet compliance before ingestion\n\n- Query with precision: Use resource-specific tables to simplify queries and improve performance\n\nThis integrated approach helps teams achieve deep visibility, maintain compliance, and manage costs.",
  "Title": "Unlock visibility, flexibility, and cost efficiency with Application Gateway logging enhancements",
  "FeedName": "Microsoft Tech Community",
  "Author": "vnamani",
  "Link": "https://techcommunity.microsoft.com/t5/azure-networking-blog/unlock-visibility-flexibility-and-cost-efficiency-with/ba-p/4456707"
}
