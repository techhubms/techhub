{
  "FeedLevelAuthor": "rss.livelink.threads-in-node",
  "FeedName": "Microsoft Tech Community",
  "Tags": [],
  "FeedUrl": "https://techcommunity.microsoft.com/t5/s/gxcuf89792/rss/Category?category.id=Azure",
  "EnhancedContent": "## A scalable, secure, and well-governed framework for deploying AI workloads across multiple subscriptions in an enterprise environment\n\nThis architecture diagram illustrates a Microsoft Azure AI Landing Zone Pattern ‚Äî a scalable, secure, and well-governed framework for deploying AI workloads across multiple subscriptions in an enterprise environment. Let's walk through it end-to-end, breaking down each section, the flow, and key Azure services involved.\n\nüß≠ Overview: The architecture is split into 4 major landing zones:\n\n1. Connectivity Subscription\n2. AI Apps Landing Zone Subscription\n3. AI Hub Landing Zone Subscription\n4. AI Services Landing Zone Subscription\n\nüîÅ Step-by-Step Breakdown\n\nüîπ 1. Users ‚Üí Application Gateway (WAF)\n\n- Users (e.g., enterprise employees or external users) access the system via the Application Gateway with Web Application Firewall (WAF).\n- This is part of the Connectivity Subscription and provides:\n- Centralized ingress control\n- Zone redundancy\n- Protection against common exploits\n\nüîπ 2. Route to AI Apps Landing Zone Subscription\n\n- Traffic is routed to the AI Apps Landing Zone Subscription via the Application Gateway.\n- This subscription hosts applications that use AI services, typically in a containerized or App Service-based architecture.\n\nüîπ 3. AI Apps Workload Components\n\nThis section includes:\n\n- App Hosting:\n- Azure App Services\n- Container Apps (with Container Registry)\n- Networking:\n- Private Endpoints\n- Subnets\n- Network Security Groups\n- Monitoring:\n- Log Analytics Workspaces\n- Diagnostic Settings\n- App Agents:\n- Represent container/app service instances (Agent 1, 2, 3)\n\nüîπ 4. Integration with AI Services & Secrets Management\n\n- These apps securely connect to:\n- Azure Key Vault (secrets, credentials)\n- Azure AI Search\n- Azure Cosmos DB\n- Azure Storage\n- Azure OpenAI\n- App Insights is used for application performance monitoring.\n- Logic Apps & Functions handle:\n- Knowledge Management Processing\n- LLM Integration Workflows\n\nüîπ 5 & 6. Connectivity to Centralized Services\n\n- Virtual Network Peering connects AI Apps Landing Zone with:\n- Connectivity Subscription\n- Hub Virtual Network in the Platform Landing Zone Subscription\n- These provide access to shared infrastructure:\n- Azure Firewall\n- Azure Bastion\n- VPN Gateway / ExpressRoute\n- Azure DNS / Private Resolver\n- Azure DDoS Protection\n\nüîπ 7. AI Hub Landing Zone Subscription\n\nThis acts as a centralized workload processing zone with components like:\n\n- Event Hubs\n- Azure Key Vault\n- App Insights\n- Power BI\n- Cosmos DB\n- API Management (OpenAI Endpoints)\n\nUsed for:\n\n- Observability\n- Usage processing\n- API integration\n\nüîπ 8 & 9. FTU Usage Processing & Reporting\n\n- Function Apps & Logic Apps:\n- Process usage data (e.g., for chargebacks, monitoring)\n- FTU = \"Fair Tenant Usage\"\n- Reporting is done using Power BI and stored in Cosmos DB\n\nüîπ 10 & 11. Network Peering to Platform Zone\n\n- AI Hub connects back to Platform Landing Zone via Virtual Network Peering\n- Provides access to shared DNS zones and network services\n\nüîπ 12. AI Services Landing Zone Subscription\n\nThis is where core AI capabilities live, such as:\n\n- Azure OpenAI\n- Azure AI Services:\n- Speech\n- Vision\n- Language\n- Machine Learning\n- Foundry Project:\n- OpenAI Agents\n- Agent Service Dependencies\n- Models hosted in Azure (e.g., GPT)\n\nThis zone is accessed securely via:\n\n- Private Endpoints\n- Azure Key Vault\n- Network rules\n\nüì¶ Subscription Vending (All Zones)\n\nEach subscription includes a Subscription Vending Framework for:\n\n- Spoke VNet placement\n- Route configurations\n- Policy/role assignments\n- Defender for Cloud & cost management\n\nThis ensures a consistent and compliant environment across the enterprise.\n\nüìå Key Architectural Benefits\n\n| Feature | Purpose | | --- | --- | | üîê Zero Trust Network | Controlled access via WAF, private endpoints | | üì° Scalable AI Apps | Container Apps & App Services | | üß† Central AI Services | Managed in isolated subscriptions | | üîç Monitoring | Deep insights via App Insights, Log Analytics | | üßæ Governance | Role-based access, policy enforcement | | üîå Secure Integration | VNet Peering, Azure Key Vault, API Management |\n\nüîö End-to-End Data Flow Summary\n\n1. Users access app through Application Gateway (WAF)\n2. Apps in AI Apps Landing Zone process input\n3. Apps call AI services (OpenAI, Cognitive) via private endpoints\n4. Data usage and insights flow to AI Hub for logging and analysis\n5. FTU and usage metrics processed and stored\n6. Platform services support routing, DNS, security\n\nüéØ **Goal of the User Journey**\n\nThe user interacts with an AI-powered application (e.g., chatbot, document summarizer, recommendation engine) deployed on Azure. The app is secure, scalable, and integrated with advanced Azure AI services (like OpenAI).\n\nüë£ **User Journey: Step-by-Step Breakdown**\n\n‚úÖ 1. User Access (Public Entry Point)\n\n- The user (browser or mobile app) sends a request (e.g., opens an AI web app or sends a prompt to a chatbot).\n- The request hits the Azure Application Gateway with Web Application Firewall (WAF).\n- ‚úÖ Filters and protects against malicious traffic.\n- ‚úÖ Ensures high availability with zone redundancy.\n\nüß† Think of it as the front door to the AI platform.\n\n‚úÖ 2. Routing to AI Application\n\n- The Application Gateway securely routes the request to the AI Apps Landing Zone Subscription.\n- The user request reaches the App Service or Container App hosting the AI-based application logic.\n\nExample: A user submits a product question via a chatbot UI hosted here.\n\n‚úÖ 3. Processing the Request (App Logic)\n\n- The app receives the input and begins processing:\n- App uses App Insights for performance telemetry.\n- Secrets or config (API keys, connection strings) are securely pulled from Azure Key Vault.\n- Based on the business logic, the app needs to call an AI model (e.g., OpenAI).\n\n‚úÖ 4. Calling AI Services (via Private Endpoints)\n\n- The app securely connects (using private endpoints) to the AI Services Landing Zone to:\n- üîπ Call Azure OpenAI (e.g., ChatGPT, DALL¬∑E, embeddings)\n- üîπ Use Azure Cognitive Services (e.g., speech, vision, search)\n- These services are isolated in their own subscription for security, scalability, and cost governance.\n\nüß† Here‚Äôs where the ‚ÄúAI magic‚Äù happens.\n\n‚úÖ 5. Retrieval-Augmented Generation (Optional)\n\n- If the AI needs additional knowledge (RAG pattern), the app can:\n- Query Azure AI Search for documents.\n- Pull knowledge from Azure Cosmos DB or Azure Storage.\n- AI results are processed via Logic Apps / Functions (e.g., post-processing, formatting).\n\n‚úÖ 6. Return the Response to the User\n\n- The application receives the AI-generated output.\n- It formats the result (e.g., chatbot message, visual, PDF, etc.) and returns it to the user via the original secure path.\n\n‚úÖ 7. Observability & Usage Logging\n\n- App, AI service usage, and telemetry are logged in:\n- Log Analytics / App Insights\n- Event Hub ‚Üí Streamed to AI Hub Landing Zone\n- This enables centralized monitoring and analytics (Power BI dashboards, anomaly detection, etc.)\n\n‚úÖ 8. Usage Reporting & Governance\n\n- Function App & Logic App in the AI Hub Landing Zone process usage logs.\n- Usage is stored in Azure Cosmos DB.\n- FTU (Fair Tenant Usage) policies are enforced and reported via Power BI dashboards.\n\n‚úÖ 9. Admin/Platform Layer\n\n- All resources and subscriptions are governed via the Platform Landing Zone:\n- Shared services like DNS, security policies, firewalls\n- Cost controls, Defender for Cloud, DDoS protection\n- Subscription vending and network segmentation\n\nüó∫Ô∏è Visual Recap: User Journey Flow\n\nUser ‚Üí App Gateway (WAF) ‚Üí App in AI Apps Landing Zone ‚Üí Call to Azure OpenAI / AI Services ‚Üí (Optional: Knowledge retrieval) ‚Üí AI Response ‚ÜíReturned to User ‚Üí Usage logged & monitored ‚Üí Usage reporting in AI Hub\n\n**User Workflow**\n\nüîê Security Throughout the Journey\n\n| **Step** | **Security Feature** | | --- | --- | | App Gateway | Web Application Firewall | | App Hosting | Private Endpoints, Managed Identity | | Secrets | Azure Key Vault | | Network | Virtual Network Peering, NSGs | | Governance | Role-based access, Policy Assignments |\n\nüß† Example: Real-World Use Case\n\nScenario: A doctor uses a medical AI assistant to analyze patient notes.\n\n1. Logs in via secure portal (WAF gateway)\n2. Submits patient notes (App Service)\n3. App calls OpenAI with prompt: \"Summarize this diagnosis.\"\n4. App also queries internal document store (RAG)\n5. OpenAI returns result ‚Üí displayed in UI\n6. Usage tracked for audit and reporting\n\nüß≠ User Journey Flow\n\n1. Users\n- End users initiate a request (e.g., accessing an AI-powered app).\n2. Application Gateway + WAF (Connectivity Subscription)\n- Request is routed through the Application Gateway with Web Application Firewall for security and traffic filtering.\n3. AI Apps Landing Zone Subscription\n- Request enters the AI Apps subscription.\n- Workloads run on App Services or Container Apps (Agents 1, 2, 3).\n4. Secure Access\n- Application services authenticate and securely retrieve data from Azure Key Vault, Cosmos DB, Azure Storage, and Azure AI Search.\n5. Knowledge Management Processing\n- Logic Apps / Function Apps process the request, enabling workflows, integrations, and knowledge enrichment.\n6. AI Hub Gateway Application\n- Requests requiring AI services are routed to the AI Hub for centralized management.\n7. API Management (OpenAI Endpoints)\n- APIs handle communication with downstream AI services.\n8. Event Hub + App Insights\n- Telemetry and logs are captured for monitoring and troubleshooting.\n9. Power BI + Cosmos DB\n- Usage data is aggregated and analyzed for reporting (FTU usage tracking).\n10. AI Services Subscription\n- API calls are directed to the AI Services subscription.\n11. Azure AI Models Execution\n- Requests hit Azure OpenAI, Azure AI Foundry, Cognitive Services (Speech, Vision, Search, etc.).\n- Foundry/Agent services provide additional AI processing.\n12. Response back to User\n- Processed AI output is routed back through the pipeline ‚Üí API ‚Üí Hub ‚Üí Apps ‚Üí Application Gateway ‚Üí returned to the user.\n\n**High Level Architecture Diagram**\n\n**** **Security & Governance Overview**\n\n**** **AI Landing Zone Lifecycle Workflow**\n\n**URL Reference Architectures:**\n\n- [Baseline Azure AI Foundry Chat Reference Architecture in an Azure Landing Zone - Azure Architecture Center | Microsoft Learn](https://learn.microsoft.com/en-us/azure/architecture/ai-ml/architecture/baseline-azure-ai-foundry-landing-zone)\n\nUpdated Sep 25, 2025\n\nVersion 2.0\n\n[infrastructure](/tag/infrastructure?nodeId=board%3AAzureArchitectureBlog)\n\n[well architected](/tag/well%20architected?nodeId=board%3AAzureArchitectureBlog)\n\n[!\\[Rohon_Mohapatra&#x27;s avatar\\](https://techcommunity.microsoft.com/t5/s/gxcuf89792/m_assets/avatars/default/avatar-10.svg?image-dimensions=50x50)](/users/rohon_mohapatra/2995713) [Rohon_Mohapatra](/users/rohon_mohapatra/2995713) ![Icon for Microsoft rank](https://techcommunity.microsoft.com/t5/s/gxcuf89792/images/cmstNC05WEo0blc?image-dimensions=100x16&amp;constrain-image=true)Microsoft\n\nJoined April 14, 2025\n\n[View Profile](/users/rohon_mohapatra/2995713)\n\n/category/azure/blog/azurearchitectureblog [Azure Architecture Blog](/category/azure/blog/azurearchitectureblog) Follow this blog board to get notified when there's new activity",
  "OutputDir": "_community",
  "Author": "Rohon_Mohapatra",
  "Description": "![]()\n\nThis architecture diagram illustrates a Microsoft Azure AI Landing Zone Pattern ‚Äî a scalable, secure, and well-governed framework for deploying AI workloads across multiple subscriptions in an enterprise environment. Let's walk through it end-to-end, breaking down each section, the flow, and key Azure services involved.\n\nüß≠ Overview: The architecture is split into 4 major landing zones:\n\n1. Connectivity Subscription\n2. AI Apps Landing Zone Subscription\n3. AI Hub Landing Zone Subscription\n4. AI Services Landing Zone Subscription\n\nüîÅ Step-by-Step Breakdown\n\nüîπ 1. Users ‚Üí Application Gateway (WAF)\n\n- Users (e.g., enterprise employees or external users) access the system via the Application Gateway with Web Application Firewall (WAF).\n- This is part of the Connectivity Subscription and provides:\n- Centralized ingress control\n- Zone redundancy\n- Protection against common exploits\n\nüîπ 2. Route to AI Apps Landing Zone Subscription\n\n- Traffic is routed to the AI Apps Landing Zone Subscription via the Application Gateway.\n- This subscription hosts applications that use AI services, typically in a containerized or App Service-based architecture.\n\nüîπ 3. AI Apps Workload Components\n\nThis section includes:\n\n- App Hosting:\n- Azure App Services\n- Container Apps (with Container Registry)\n- Networking:\n- Private Endpoints\n- Subnets\n- Network Security Groups\n- Monitoring:\n- Log Analytics Workspaces\n- Diagnostic Settings\n- App Agents:\n- Represent container/app service instances (Agent 1, 2, 3)\n\nüîπ 4. Integration with AI Services & Secrets Management\n\n- These apps securely connect to:\n- Azure Key Vault (secrets, credentials)\n- Azure AI Search\n- Azure Cosmos DB\n- Azure Storage\n- Azure OpenAI\n- App Insights is used for application performance monitoring.\n- Logic Apps & Functions handle:\n- Knowledge Management Processing\n- LLM Integration Workflows\n\nüîπ 5 & 6. Connectivity to Centralized Services\n\n- Virtual Network Peering connects AI Apps Landing Zone with:\n- Connectivity Subscription\n- Hub Virtual Network in the Platform Landing Zone Subscription\n- These provide access to shared infrastructure:\n- Azure Firewall\n- Azure Bastion\n- VPN Gateway / ExpressRoute\n- Azure DNS / Private Resolver\n- Azure DDoS Protection\n\nüîπ 7. AI Hub Landing Zone Subscription\n\nThis acts as a centralized workload processing zone with components like:\n\n- Event Hubs\n- Azure Key Vault\n- App Insights\n- Power BI\n- Cosmos DB\n- API Management (OpenAI Endpoints)\n\nUsed for:\n\n- Observability\n- Usage processing\n- API integration\n\nüîπ 8 & 9. FTU Usage Processing & Reporting\n\n- Function Apps & Logic Apps:\n- Process usage data (e.g., for chargebacks, monitoring)\n- FTU = \"Fair Tenant Usage\"\n- Reporting is done using Power BI and stored in Cosmos DB\n\nüîπ 10 & 11. Network Peering to Platform Zone\n\n- AI Hub connects back to Platform Landing Zone via Virtual Network Peering\n- Provides access to shared DNS zones and network services\n\nüîπ 12. AI Services Landing Zone Subscription\n\nThis is where core AI capabilities live, such as:\n\n- Azure OpenAI\n- Azure AI Services:\n- Speech\n- Vision\n- Language\n- Machine Learning\n- Foundry Project:\n- OpenAI Agents\n- Agent Service Dependencies\n- Models hosted in Azure (e.g., GPT)\n\nThis zone is accessed securely via:\n\n- Private Endpoints\n- Azure Key Vault\n- Network rules\n\nüì¶ Subscription Vending (All Zones)\n\nEach subscription includes a Subscription Vending Framework for:\n\n- Spoke VNet placement\n- Route configurations\n- Policy/role assignments\n- Defender for Cloud & cost management\n\nThis ensures a consistent and compliant environment across the enterprise.\n\nüìå Key Architectural Benefits\n\n| Feature | Purpose | | --- | --- | | üîê Zero Trust Network | Controlled access via WAF, private endpoints | | üì° Scalable AI Apps | Container Apps & App Services | | üß† Central AI Services | Managed in isolated subscriptions | | üîç Monitoring | Deep insights via App Insights, Log Analytics | | üßæ Governance | Role-based access, policy enforcement | | üîå Secure Integration | VNet Peering, Azure Key Vault, API Management |\n\nüîö End-to-End Data Flow Summary\n\n1. Users access app through Application Gateway (WAF)\n2. Apps in AI Apps Landing Zone process input\n3. Apps call AI services (OpenAI, Cognitive) via private endpoints\n4. Data usage and insights flow to AI Hub for logging and analysis\n5. FTU and usage metrics processed and stored\n6. Platform services support routing, DNS, security\n\nüéØ **Goal of the User Journey**\n\nThe user interacts with an AI-powered application (e.g., chatbot, document summarizer, recommendation engine) deployed on Azure. The app is secure, scalable, and integrated with advanced Azure AI services (like OpenAI).\n\nüë£ **User Journey: Step-by-Step Breakdown**\n\n‚úÖ 1. User Access (Public Entry Point)\n\n- The user (browser or mobile app) sends a request (e.g., opens an AI web app or sends a prompt to a chatbot).\n- The request hits the Azure Application Gateway with Web Application Firewall (WAF).\n- ‚úÖ Filters and protects against malicious traffic.\n- ‚úÖ Ensures high availability with zone redundancy.\n\nüß† Think of it as the front door to the AI platform.\n\n‚úÖ 2. Routing to AI Application\n\n- The Application Gateway securely routes the request to the AI Apps Landing Zone Subscription.\n- The user request reaches the App Service or Container App hosting the AI-based application logic.\n\nExample: A user submits a product question via a chatbot UI hosted here.\n\n‚úÖ 3. Processing the Request (App Logic)\n\n- The app receives the input and begins processing:\n- App uses App Insights for performance telemetry.\n- Secrets or config (API keys, connection strings) are securely pulled from Azure Key Vault.\n- Based on the business logic, the app needs to call an AI model (e.g., OpenAI).\n\n‚úÖ 4. Calling AI Services (via Private Endpoints)\n\n- The app securely connects (using private endpoints) to the AI Services Landing Zone to:\n- üîπ Call Azure OpenAI (e.g., ChatGPT, DALL¬∑E, embeddings)\n- üîπ Use Azure Cognitive Services (e.g., speech, vision, search)\n- These services are isolated in their own subscription for security, scalability, and cost governance.\n\nüß† Here‚Äôs where the ‚ÄúAI magic‚Äù happens.\n\n‚úÖ 5. Retrieval-Augmented Generation (Optional)\n\n- If the AI needs additional knowledge (RAG pattern), the app can:\n- Query Azure AI Search for documents.\n- Pull knowledge from Azure Cosmos DB or Azure Storage.\n- AI results are processed via Logic Apps / Functions (e.g., post-processing, formatting).\n\n‚úÖ 6. Return the Response to the User\n\n- The application receives the AI-generated output.\n- It formats the result (e.g., chatbot message, visual, PDF, etc.) and returns it to the user via the original secure path.\n\n‚úÖ 7. Observability & Usage Logging\n\n- App, AI service usage, and telemetry are logged in:\n- Log Analytics / App Insights\n- Event Hub ‚Üí Streamed to AI Hub Landing Zone\n- This enables centralized monitoring and analytics (Power BI dashboards, anomaly detection, etc.)\n\n‚úÖ 8. Usage Reporting & Governance\n\n- Function App & Logic App in the AI Hub Landing Zone process usage logs.\n- Usage is stored in Azure Cosmos DB.\n- FTU (Fair Tenant Usage) policies are enforced and reported via Power BI dashboards.\n\n‚úÖ 9. Admin/Platform Layer\n\n- All resources and subscriptions are governed via the Platform Landing Zone:\n- Shared services like DNS, security policies, firewalls\n- Cost controls, Defender for Cloud, DDoS protection\n- Subscription vending and network segmentation\n\nüó∫Ô∏è Visual Recap: User Journey Flow\n\nUser ‚Üí App Gateway (WAF) ‚Üí App in AI Apps Landing Zone ‚Üí Call to Azure OpenAI / AI Services ‚Üí (Optional: Knowledge retrieval) ‚Üí AI Response ‚ÜíReturned to User ‚Üí Usage logged & monitored ‚Üí Usage reporting in AI Hub\n\n**User Workflow**\n\n![]()\n\nüîê Security Throughout the Journey\n\n| **Step** | **Security Feature** | | --- | --- | | App Gateway | Web Application Firewall | | App Hosting | Private Endpoints, Managed Identity | | Secrets | Azure Key Vault | | Network | Virtual Network Peering, NSGs | | Governance | Role-based access, Policy Assignments |\n\nüß† Example: Real-World Use Case\n\nScenario: A doctor uses a medical AI assistant to analyze patient notes.\n\n1. Logs in via secure portal (WAF gateway)\n2. Submits patient notes (App Service)\n3. App calls OpenAI with prompt: \"Summarize this diagnosis.\"\n4. App also queries internal document store (RAG)\n5. OpenAI returns result ‚Üí displayed in UI\n6. Usage tracked for audit and reporting\n\nüß≠ User Journey Flow\n\n1. Users\n- End users initiate a request (e.g., accessing an AI-powered app).\n2. Application Gateway + WAF (Connectivity Subscription)\n- Request is routed through the Application Gateway with Web Application Firewall for security and traffic filtering.\n3. AI Apps Landing Zone Subscription\n- Request enters the AI Apps subscription.\n- Workloads run on App Services or Container Apps (Agents 1, 2, 3).\n4. Secure Access\n- Application services authenticate and securely retrieve data from Azure Key Vault, Cosmos DB, Azure Storage, and Azure AI Search.\n5. Knowledge Management Processing\n- Logic Apps / Function Apps process the request, enabling workflows, integrations, and knowledge enrichment.\n6. AI Hub Gateway Application\n- Requests requiring AI services are routed to the AI Hub for centralized management.\n7. API Management (OpenAI Endpoints)\n- APIs handle communication with downstream AI services.\n8. Event Hub + App Insights\n- Telemetry and logs are captured for monitoring and troubleshooting.\n9. Power BI + Cosmos DB\n- Usage data is aggregated and analyzed for reporting (FTU usage tracking).\n10. AI Services Subscription\n- API calls are directed to the AI Services subscription.\n11. Azure AI Models Execution\n- Requests hit Azure OpenAI, Azure AI Foundry, Cognitive Services (Speech, Vision, Search, etc.).\n- Foundry/Agent services provide additional AI processing.\n12. Response back to User\n- Processed AI output is routed back through the pipeline ‚Üí API ‚Üí Hub ‚Üí Apps ‚Üí Application Gateway ‚Üí returned to the user.\n\n**High Level Architecture Diagram**\n\n![]()\n\n**** **Security & Governance Overview**\n\n![]()\n\n**** **AI Landing Zone Lifecycle Workflow**\n\n![]()\n\n**URL Reference Architectures:**\n\n- [Baseline Azure AI Foundry Chat Reference Architecture in an Azure Landing Zone - Azure Architecture Center | Microsoft Learn](https://learn.microsoft.com/en-us/azure/architecture/ai-ml/architecture/baseline-azure-ai-foundry-landing-zone)",
  "ProcessedDate": "2025-09-25 19:10:39",
  "PubDate": "2025-09-25T18:32:35+00:00",
  "Title": "AI Azure Landing Zone: Shared Capabilities and Models to Enable AI as a Platform",
  "Link": "https://techcommunity.microsoft.com/t5/azure-architecture-blog/ai-azure-landing-zone-shared-capabilities-and-models-to-enable/ba-p/4455951"
}
