{
  "FeedUrl": "https://www.reddit.com/r/azure/.rss",
  "Link": "https://www.reddit.com/r/AZURE/comments/1mjo656/is_hyperv_running_on_azure_host_os_or_azure_host/",
  "Tags": [
    "AZURE"
  ],
  "OutputDir": "_community",
  "FeedName": "Reddit Azure",
  "ProcessedDate": "2025-08-08 16:14:03",
  "Title": "Is Hyper-V running on Azure Host OS or Azure Host OS running on Hyper-V?",
  "FeedLevelAuthor": "Microsoft Azure",
  "EnhancedContent": "Hey everyone, I'm trying to figure out what is actually running at the bottom of Azure. The common answer is Hyper-V, but latter on I got confused by this article: [Azure Host OS – Cloud Host](https://techcommunity.microsoft.com/blog/windowsosplatform/azure-host-os-%E2%80%93-cloud-host/3709528)\n\n> > >\n> Since Azure uses Windows as the operating system, all these VMs run as guests of Microsoft Hyper-V, which is our hypervisor. Microsoft Hyper-V is a type 1 hypervisor and hence when I say Azure Host operating system, its technically the root operating system. This is the OS that has full control of the hardware and provides virtualization facilities to run guest VMs.\n> > > >\n\nIn the beginning, my understanding was that the Azure Host OS has full control of the hardware, with Hyper-V running on top of it. If this is the case, then Hyper-V would not be a Type 1 hypervisor. Clearly, something is wrong with my understanding, so I tried to dig deeper, but I couldn’t find additional resources about the Azure Host OS online. I also asked various AI models, but unfortunately, they provided inaccurate or hallucinated responses. Hence creating this post to seek help!\n\nEdit: Thank you so much! Redditors never let me disappoint as usual!\n\nThere are three points which leads to my confusing:\n\n1. [Michal_F](https://www.reddit.com/user/Michal_F/) You are right, the missing puzzles exactly are [x86 virtualization](https://en.wikipedia.org/wiki/X86_virtualization#Intel_virtualization_%28VT-x%29) and [Protection Ring](https://en.wikipedia.org/wiki/Protection_ring). I never thought about CPU(hardware) can help with change running software privilege.\n2. I made a common-sense mistake. Initially, I imagined cloud server usage would be like PC usage. But then I realized that cloud servers run 24/7 and generally only boot up once until their hardware lifespan ends.\n3. I understand why some developers hate Microsoft. It always manages to make Windows miraculously forward compatible. But it also keeps screw up of naming new technologies and document, The OneCore prototype I believe should be[Server Core](https://en.wikipedia.org/wiki/Server_Core)from [Windows Server 2008](https://en.wikipedia.org/wiki/Windows_Server_2008#Server_Core). Additionally, the definitions of Hyper-V, Hyper-V Server, and Hyper-V Hypervisor have changed over time with code changes, and Microsoft seems to have never tried to clarify them. I'm not alone, the [Hyper-V Wikipedia](https://en.wikipedia.org/wiki/Hyper-V)page editors seems also got focused. At top of Hyper-V wiki page, it says:\"Not to be confused with Windows Hypervisor Platform or Windows Hypervisor Virtualization Platform.\"\n\n[!\\[r/AZURE - HV Architecture\\](https://preview.redd.it/is-hyper-v-running-on-azure-host-os-or-azure-host-os-v0-hhm2ndwv3ohf1.gif?width=834&amp;auto=webp&amp;s=893837aa0da31997fb2f3f7e132acd6bccaf53bf)](https://preview.redd.it/is-hyper-v-running-on-azure-host-os-or-azure-host-os-v0-hhm2ndwv3ohf1.gif?width=834&amp;auto=webp&amp;s=893837aa0da31997fb2f3f7e132acd6bccaf53bf) HV Architecture\n\nIn the end, I'm sharing my understanding here, hoping it will help other Azure beginners. The article ' [Hyper-V Architecture](https://learn.microsoft.com/en-us/virtualization/hyper-v-on-windows/reference/hyper-v-architecture)' is the most helpful one. Let's forget about the definitions of Hyper-V, Azure Host Cloud, OS, and Hypervisor. Here is what I understand:\n\nBefore I start a brand-new Azure physical machine, it has a program or package called Hyper-V already installed. The Hyper-V program consists of two parts:\n\nPart one is a bundle of components working together to manage VMs (the Hypervisor part); let's call it the Hypervisor bundle.\n\nPart two is a bundle of components working together to run a minimalist Windows (the Root Partition yellow part); let's call it the Windows bundle.\n\nThe components in the two bundles are not fixed; there can be hundreds of combinations to satisfy different clients and maximize profits. However, both bundles must include the necessary components to run a minimalist Windows and a minimalist Hypervisor. When I plug in the power and press the power button, the BIOS always runs first. There may be other firmware or software for different x86 CPUs, but that’s not today’s topic. Let’s go directly to the software: the Hyper-V program starts running. Since this is the first time starting the server, only the Windows bundle includes the Windows kernel, so we initially see only the minimalist Windows start running. Next, either through automation or manually(I have not idea), the Hypervisor bundle starts running on the minimalist Windows. Then, the x86 hardware virtualization begins its work.\n\n[!\\[r/AZURE - Is Hyper-V running on Azure Host OS or Azure Host OS running on Hyper-V?\\](https://preview.redd.it/is-hyper-v-running-on-azure-host-os-or-azure-host-os-v0-k48hol7elohf1.png?width=1288&amp;format=png&amp;auto=webp&amp;s=157ee2a8875a1779324381dc4dfe957110313973)](https://preview.redd.it/is-hyper-v-running-on-azure-host-os-or-azure-host-os-v0-k48hol7elohf1.png?width=1288&amp;format=png&amp;auto=webp&amp;s=157ee2a8875a1779324381dc4dfe957110313973)\n\nActually, the VMCS operates on top of the hardware (CPU). There exists a mechanism that allows the CPU to recognize that the Hypervisor is running, so it needs to operate at the lowest ring layer. Then, the VMCS works together with the Hypervisor to complete ring swapping, informing the Hypervisor that it is the true Ring 0, while labeling itself as Ring -1. Meanwhile, for the minimalist Windows, since it is still labeled as Ring 0, it will run smoothly until the end of the hardware or software's lifetime. This is also the most familiar state for Azure Hyper-V.\n\nI believe the paragraphs above must be lots of mistakes and missing details, please point out, thanks!\n\nI was originally attracted to the OneCore based edition of Windows, which started me down this rabbit hole journey. It turns out that Microsoft made it in 2008. Again, Dave Cutler shows why he’s the engineer’s engineer. Amitabh Srivastava is also an engineer’s engineer in my mind. From Windows NT 1.0 to Windows Server 2008's Server Core, those were a crazy 20 years!\n\nHyper-V is a Type 1 hypervisor. The Windows OS starts out directly controlling the hardware, but when Hyper-V is enabled, it takes over as the hypervisor at the hardware layer and the Windows OS becomes the first parent partition on the Hyper-V host. All other VMs are guests in sub-partitions under the OS parent and run directly on the hypervisor.\n\nThis is a good explanation, but he should also look at how virtualization on x86 works. And what does it mean how hypervisor runs and guest OS can be on ring 0.\n\n[https://en.m.wikipedia.org/wiki/Protection_ring](https://en.m.wikipedia.org/wiki/Protection_ring)\n\nWith HW virtualization, hypervisor can run on CPU ring -1 and the guest OS and host OS therefore can run on ring 0. Reducing performance penalty for virtualization...\n\nAt least this is how I remember it.\n\nEdit: So Hyper-V is Microsoft implementation of hypervisor virtualization and is a feature of Azure Host OS.\n\nThink of it like this:\n\nThe Azure Host OS is a specially designed version of Windows Server that runs in a highly privileged, virtualized partition, often referred to as the \"root partition\". This root partition is created and managed by the Hyper-V hypervisor. The Host OS doesn't have direct control of the hardware; it's the hypervisor that owns the hardware. Instead, the Host OS provides a management layer and access to I/O devices for the hypervisor, allowing it to manage other virtual machines (VMs) or \"child partitions.\"\n\nPhysical Hardware --&gt; Hyper-V Hypervisor --&gt; Azure Host OS (Root Partition) --&gt; Guest VMs (Child Partitions)\n\nHyper-V is a Type 1 hypervisor, which means it runs directly on the hardware. What we often call the \"Azure Host OS\" is actually a specialized and minimal version of Windows (often referred to as the Root Partition or Parent Partition) that runs on top of the Hyper-V hypervisor, not the other way around.\n\nThe correct stack looks like\n\nHardware -  Hyper-V -  Root Partition - Guest VMs\n\nI’m half falling asleep so I apologize in advance if I get some stuff backwards.\n\nThe simplest way I can put it, in this instance (the article is from 2023), azure OS is what controls the hardware, hyper-v is the role that provides the virtualization and is what is exposed to the VMs.\n\nNow if you look at Azure local (right now it is probably is the easiest to break down) you have a highly customized and hardened version of windows server core that runs hyper-v, failover cluster, storage spaces direct, software defined networking, kubernetes, and azure ARC, Microsoft on-premise cloud (MOC) and assorted bits and pieces of security. While it isn’t azure native hardware and software in the sense that you’ll find it in a Microsoft Datacenter, it is pretty dang close. To the VM it just reports as Microsoft azure bios and hardware just like a vm would on a normal hyper-v host.\n\nThe combination of windows server and the hyper-v role is what makes the tier 1 hypervisor, just how proxmox and VMware use custom Linux based OSs as their base and add the modules for storage, networking, etc. to make their tier 1 offerings.\n\nJohn savill has a hyperv video that explains exactly how this works\n\nUsually a horrifying old version of Hyper-V\n\nSo HyperV sits below the OS, and then the “OS” that you experience when plugging a keyboard and mouse into is the first guest OS that is more privileged than any other guest VM, and has all hardware passed to it that is not specifically required by the hypervisor layer. Any new VMs you create sit next to the first guest OS, not within it.\n\nIf you have been around since the ESX 3.5 days, this is similar to thinking of the first guest OS as the Service Console that ESX had, as the hypervisor is extremely small - around 40MiB.",
  "Author": "mogeko233",
  "PubDate": "2025-08-07T02:26:59+00:00",
  "Description": "| [!\\[Is Hyper-V running on Azure Host OS or Azure Host OS running on Hyper-V?\\](https://external-preview.redd.it/HvWo5SZixUz1jvMkF7dJ-5xq1iEfKa_FR4jnft0b-R8.png?width=640&crop=smart&auto=webp&s=cd2be493b483a91bf461702de001d0bbabf0ba4b \"Is Hyper-V running on Azure Host OS or Azure Host OS running on Hyper-V?\")](https://www.reddit.com/r/AZURE/comments/1mjo656/is_hyperv_running_on_azure_host_os_or_azure_host/) | Hey everyone, I'm trying to figure out what is actually running at the bottom of Azure. The common answer is Hyper-V, but latter on I got confused by this article: [Azure Host OS – Cloud Host](https://techcommunity.microsoft.com/blog/windowsosplatform/azure-host-os-%E2%80%93-cloud-host/3709528)<br><br> <br><br>> <br>> Since Azure uses Windows as the operating system, all these VMs run as guests of Microsoft Hyper-V, which is our hypervisor. Microsoft Hyper-V is a type 1 hypervisor and hence when I say Azure Host operating system, its technically the root operating system. This is the OS that has full control of the hardware and provides virtualization facilities to run guest VMs.<br>> <br>> <br><br><br><br> <br>In the beginning, my understanding was that the Azure Host OS has full control of the hardware, with Hyper-V running on top of it. If this is the case, then Hyper-V would not be a Type 1 hypervisor. Clearly, something is wrong with my understanding, so I tried to dig deeper, but I couldn’t find additional resources about the Azure Host OS online. I also asked various AI models, but unfortunately, they provided inaccurate or hallucinated responses. Hence creating this post to seek help!<br><br> <br>Edit: Thank you so much! Redditors never let me disappoint as usual!<br><br> <br>There are three points which leads to my confusing:<br><br> <ol> <li><p><a href=\"https://www.reddit.com/user/Michal_F/\">Michal_F</a> You are right, the missing puzzles exactly are <a href=\"https://en.wikipedia.org/wiki/X86_virtualization#Intel_virtualization_(VT-x\">x86 virtualization</a>) and <a href=\"https://en.wikipedia.org/wiki/Protection_ring\">Protection Ring</a>. I never thought about CPU(hardware) can help with change running software privilege.</p><br></li><br> <li><p>I made a common-sense mistake. Initially, I imagined cloud server usage would be like PC usage. But then I realized that cloud servers run 24/7 and generally only boot up once until their hardware lifespan ends. </p><br></li><br> <li><p>I understand why some developers hate Microsoft. It always manages to make Windows miraculously forward compatible. But it also keeps screw up of naming new technologies and document, The OneCore prototype I believe should be<a href=\"https://en.wikipedia.org/wiki/Server_Core\"> Server Core </a>from <a href=\"https://en.wikipedia.org/wiki/Windows_Server_2008#Server_Core\">Windows Server 2008</a>. Additionally, the definitions of Hyper-V, Hyper-V Server, and Hyper-V Hypervisor have changed over time with code changes, and Microsoft seems to have never tried to clarify them. I'm not alone, the <a href=\"https://en.wikipedia.org/wiki/Hyper-V\">Hyper-V Wikipedia </a>page editors seems also got focused. At top of Hyper-V wiki page, it says:\"Not to be confused with Windows Hypervisor Platform or Windows Hypervisor Virtualization Platform.\"</p><br></li><br> </ol><br><br> <br>*Processing img hhm2ndwv3ohf1...*<br><br> <br>In the end, I'm sharing my understanding here, hoping it will help other Azure beginners. The article ' [Hyper-V Architecture](https://learn.microsoft.com/en-us/virtualization/hyper-v-on-windows/reference/hyper-v-architecture)' is the most helpful one. Let's forget about the definitions of Hyper-V, Azure Host Cloud, OS, and Hypervisor. Here is what I understand:<br><br> <br>Before I start a brand-new Azure physical machine, it has a program or package called Hyper-V already installed. The Hyper-V program consists of two parts:<br><br> <br>Part one is a bundle of components working together to manage VMs (the Hypervisor part); let's call it the Hypervisor bundle.<br><br> <br>Part two is a bundle of components working together to run a minimalist Windows (the Root Partition yellow part); let's call it the Windows bundle.<br><br> <br>The components in the two bundles are not fixed; there can be hundreds of combinations to satisfy different clients and maximize profits. However, both bundles must include the necessary components to run a minimalist Windows and a minimalist Hypervisor. When I plug in the power and press the power button, the BIOS always runs first. There may be other firmware or software for different x86 CPUs, but that’s not today’s topic. Let’s go directly to the software: the Hyper-V program starts running. Since this is the first time starting the server, only the Windows bundle includes the Windows kernel, so we initially see only the minimalist Windows start running. Next, either through automation or manually(I have not idea), the Hypervisor bundle starts running on the minimalist Windows. Then, the x86 hardware virtualization begins its work.<br><br> <br>[https://preview.redd.it/k48hol7elohf1.png?width=1288&format=png&auto=webp&s=c9c9b18cb55f3a91dded2c02f73c7d13a9adf273](https://preview.redd.it/k48hol7elohf1.png?width=1288&format=png&auto=webp&s=c9c9b18cb55f3a91dded2c02f73c7d13a9adf273)<br><br> <br>Actually, the VMCS operates on top of the hardware (CPU). There exists a mechanism that allows the CPU to recognize that the Hypervisor is running, so it needs to operate at the lowest ring layer. Then, the VMCS works together with the Hypervisor to complete ring swapping, informing the Hypervisor that it is the true Ring 0, while labeling itself as Ring -1. Meanwhile, for the minimalist Windows, since it is still labeled as Ring 0, it will run smoothly until the end of the hardware or software's lifetime. This is also the most familiar state for Azure Hyper-V.<br><br> <br>I believe the paragraphs above must be lots of mistakes and missing details, please point out, thanks!<br><br> <br>I was originally attracted to the OneCore based edition of Windows, which started me down this rabbit hole journey. It turns out that Microsoft made it in 2008. Again, Dave Cutler shows why he’s the engineer’s engineer. Amitabh Srivastava is also an engineer’s engineer in my mind. From Windows NT 1.0 to Windows Server 2008's Server Core, those were a crazy 20 years!<br>"
}
