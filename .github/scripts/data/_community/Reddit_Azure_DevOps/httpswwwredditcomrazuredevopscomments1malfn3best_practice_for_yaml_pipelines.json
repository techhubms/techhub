{
  "Title": "Best practice for YAML pipelines",
  "FeedName": "Reddit Azure DevOps",
  "OutputDir": "_community",
  "Tags": [
    "azuredevops"
  ],
  "ProcessedDate": "2025-08-05 17:37:33",
  "Description": "Hi everyone. I'm a bit confused and hope to get an answer and get this confusion cleared.\n\nAt my current job, I have an application which is deployed to 3 environments. The application is separated into 2 parts, the UI in Angular and API in .NET 8. I have 6 classic build pipelines which builds the frontend and backend for each environment (qa, preprod and prod for ui. Same for api). I have one classic release pipeline which consumes all the artifacts and deploys the specific artifact (e.g PreProd) to a respective Azure App Service (e.g PreProd). I also have a repository which contains MS Playwright tests which does my regression. The regression is a stage in my release pipeline, before deploying UI and API to prod.\n\nI need to migrate to YAML pipeline. I know it's one azure-pipelines.yaml per repository. How do I do the same setup? Since I have two repositories, I'm confused how do I do the release setup I currently have? Is there an industry standard / best practice way of achieving this?",
  "Author": "DrippinInSuccess",
  "Link": "https://www.reddit.com/r/azuredevops/comments/1malfn3/best_practice_for_yaml_pipelines/",
  "PubDate": "2025-07-27T12:47:44+00:00",
  "EnhancedContent": "Hi everyone. I'm a bit confused and hope to get an answer and get this confusion cleared.\n\nAt my current job, I have an application which is deployed to 3 environments. The application is separated into 2 parts, the UI in Angular and API in .NET 8. I have 6 classic build pipelines which builds the frontend and backend for each environment (qa, preprod and prod for ui. Same for api). I have one classic release pipeline which consumes all the artifacts and deploys the specific artifact (e.g PreProd) to a respective Azure App Service (e.g PreProd). I also have a repository which contains MS Playwright tests which does my regression. The regression is a stage in my release pipeline, before deploying UI and API to prod.\n\nI need to migrate to YAML pipeline. I know it's one azure-pipelines.yaml per repository. How do I do the same setup? Since I have two repositories, I'm confused how do I do the release setup I currently have? Is there an industry standard / best practice way of achieving this?\n\nYou can have as many yaml pipeline files in a repo as you want. You don't need a separate pipeline for each env, though. You can use conditional logic to load separate libraries, variables, etc based on the branch name. At least that is how we do it\n\nThanks. I'll give that a try.\n\nFew ways to achieve this in YAML\n\ncreate templates for UI and API and use it azure-pipeline.yml otherwise you add all your build and release steps in single yaml file for all stages/environments.\n\nOk thanks. I'll try it out.\n\nAs others have said, with yaml you can have *n* amount of pipelines in a repository.\n\nFor individual configuration per environment, I use a json file following this naming per environment: myapiname.parameters.dev.json\n\nThen you can specify your environment name or parameter file suffix and consume that in the pipeline: myapiname.parameters.${{ parameters.environment }}.json\n\nIdeally, you would have a template(s) to deploy your web app / UI which you can then use in multiple stages in your deployment pipeline to have the same deployment result for each environment.\n\nSo I have a template for building and a template for deploying which I have in a different repo which I can then access using a resource in the pipeline. I have it for about 12 APIs and it makes life super easy for maintenance and upgrades.\n\nThat's an interesting setup. I've been binge learning about YAML for the past day. I'll try out something like this too. Thanks man.",
  "FeedLevelAuthor": "Azure DevOps",
  "FeedUrl": "https://www.reddit.com/r/azuredevops/.rss"
}
