{
  "Title": "üöÄ I built a dynamic Azure DevOps MCP server for Claude Code that auto-switches contexts based on your directory",
  "FeedName": "Reddit Azure DevOps",
  "OutputDir": "_community",
  "Tags": [
    "azuredevops"
  ],
  "ProcessedDate": "2025-08-05 17:37:33",
  "Description": "**TL;DR**: Created an MCP server that lets Claude Code seamlessly work with multiple Azure DevOps projects by automatically detecting which project you're in and switching authentication contexts on the fly.\n\n# The Problem I Solved\n\nIf you're using Claude Code with Azure DevOps and working on multiple projects, you've probably hit this frustrating wall: MCP servers use static environment variables, so you can only authenticate to ONE Azure DevOps organization at a time. Want to switch between projects? Restart Claude, change configs, repeat. üò§\n\n# The Solution: Dynamic Context Switching\n\nI built `u/wangkanai/devops-mcp`\n- an MCP server that automatically detects which project directory you're in and switches Azure DevOps authentication contexts instantly. No restarts, no manual config changes, just seamless workflow.\n\n# How It Works\n\n1. **Local Config Files**: Each project has its own `.azure-devops.json`\nwith org-specific PAT tokens\n2. **Smart Directory Detection**: Server automatically detects project context from your current directory\n3. **Instant Switching**: Move between project directories and authentication switches automatically\n4. **Security First**: All tokens stored locally, never committed to git\n\n# Features That Make Life Better\n\n**üîÑ Zero-Configuration Switching**\n\n``` cd ~/projects/company-a # Auto-switches to Company A's Azure DevOps cd ~/projects/company-b # Auto-switches to Company B's Azure DevOps ```\n\n**üõ†Ô∏è Comprehensive Tool Set** (8 tools total):\n\n- Create/query work items with full metadata\n- Repository and build management\n- Pipeline triggering and monitoring\n- Pull request operations\n- Dynamic context reporting\n\n**üîí Security Built-In**:\n\n- Repository-specific PAT tokens\n- Local configuration (never committed)\n- Credential isolation between projects\n- GitHub secret scanning compliant\n\n# Installation\n\nSuper simple with Claude Code:\n\n```\n# One command installation claude mcp add devops-mcp -- npx u/wangkanai/devops-mcp\n```\n\nThen just add a `.azure-devops.json` to each project:\n\n``` { \"organizationUrl\": \"https://dev.azure.com/your-org\", \"project\": \"YourProject\", \"pat\": \"your-pat-token\", \"description\": \"Project-specific Azure DevOps config\" } ```\n\n# Real-World Impact\n\nSince deploying this across my projects:\n\n- **90% faster** context switching (no more Claude restarts)\n- **Zero authentication errors** when switching projects\n- **Simplified workflow** for multi-client consulting work\n- **Better security** with isolated, local credential storage\n\n# Tech Stack & Metrics\n\n- **Node.js + TypeScript** with MCP SDK integration\n- **>95% test coverage** with comprehensive validation\n- **Sub-200ms overhead** for detection and routing\n- **Production-ready** with error handling and fallbacks\n\n# Why This Matters for DevOps Workflows\n\nIf you're working with multiple Azure DevOps organizations (consulting, multi-team environments, client work), this eliminates the biggest friction point in Claude Code workflows. Instead of context-switching being a 30-second interruption, it's now completely transparent.\n\n**GitHub**: [https://github.com/wangkanai/devops-mcp](https://github.com/wangkanai/devops-mcp) **NPM**: `@wangkanai/devops-mcp`\n\n**Questions?** Happy to explain the technical implementation or help with setup issues! This was a fun project that solved a real daily annoyance in my workflow.\n\n*Tags: #DevOps #AzureDevOps #Claude #MCP #Automation #WorkflowOptimization*",
  "Author": "OkAdministration2514",
  "Link": "https://www.reddit.com/r/azuredevops/comments/1m91urt/i_built_a_dynamic_azure_devops_mcp_server_for/",
  "PubDate": "2025-07-25T15:14:49+00:00",
  "EnhancedContent": "**TL;DR**: Created an MCP server that lets Claude Code seamlessly work with multiple Azure DevOps projects by automatically detecting which project you're in and switching authentication contexts on the fly.\n\n# The Problem I Solved\n\nIf you're using Claude Code with Azure DevOps and working on multiple projects, you've probably hit this frustrating wall: MCP servers use static environment variables, so you can only authenticate to ONE Azure DevOps organization at a time. Want to switch between projects? Restart Claude, change configs, repeat. üò§\n\n# The Solution: Dynamic Context Switching\n\nI built `u/wangkanai/devops-mcp`\n- an MCP server that automatically detects which project directory you're in and switches Azure DevOps authentication contexts instantly. No restarts, no manual config changes, just seamless workflow.\n\n# How It Works\n\n1. **Local Config Files**: Each project has its own `.azure-devops.json`\nwith org-specific PAT tokens\n2. **Smart Directory Detection**: Server automatically detects project context from your current directory\n3. **Instant Switching**: Move between project directories and authentication switches automatically\n4. **Security First**: All tokens stored locally, never committed to git\n\n# Features That Make Life Better\n\n**üîÑ Zero-Configuration Switching**\n\n``` cd ~/projects/company-a # Auto-switches to Company A's Azure DevOps cd ~/projects/company-b # Auto-switches to Company B's Azure DevOps ```\n\n**üõ†Ô∏è Comprehensive Tool Set** (8 tools total):\n\n- Create/query work items with full metadata\n- Repository and build management\n- Pipeline triggering and monitoring\n- Pull request operations\n- Dynamic context reporting\n\n**üîí Security Built-In**:\n\n- Repository-specific PAT tokens\n- Local configuration (never committed)\n- Credential isolation between projects\n- GitHub secret scanning compliant\n\n# Installation\n\nSuper simple with Claude Code:\n\n```\n# One command installation\nclaude mcp add devops-mcp -- npx u/wangkanai/devops-mcp ```\n\nThen just add a `.azure-devops.json` to each project:\n\n``` { \"organizationUrl\": \"https://dev.azure.com/your-org\", \"project\": \"YourProject\", \"pat\": \"your-pat-token\", \"description\": \"Project-specific Azure DevOps config\" } ```\n\n# Real-World Impact\n\nSince deploying this across my projects:\n\n- **90% faster** context switching (no more Claude restarts)\n- **Zero authentication errors** when switching projects\n- **Simplified workflow** for multi-client consulting work\n- **Better security** with isolated, local credential storage\n\n# Tech Stack & Metrics\n\n- **Node.js + TypeScript** with MCP SDK integration\n- **&gt;95% test coverage** with comprehensive validation\n- **Sub-200ms overhead** for detection and routing\n- **Production-ready** with error handling and fallbacks\n\n# Why This Matters for DevOps Workflows\n\nIf you're working with multiple Azure DevOps organizations (consulting, multi-team environments, client work), this eliminates the biggest friction point in Claude Code workflows. Instead of context-switching being a 30-second interruption, it's now completely transparent.\n\n**GitHub**: [https://github.com/wangkanai/devops-mcp](https://github.com/wangkanai/devops-mcp) **NPM**: `@wangkanai/devops-mcp`\n\n**Questions?** Happy to explain the technical implementation or help with setup issues! This was a fun project that solved a real daily annoyance in my workflow.\n\n*Tags: #DevOps #AzureDevOps #Claude #MCP #Automation #WorkflowOptimization*",
  "FeedLevelAuthor": "Azure DevOps",
  "FeedUrl": "https://www.reddit.com/r/azuredevops/.rss"
}
