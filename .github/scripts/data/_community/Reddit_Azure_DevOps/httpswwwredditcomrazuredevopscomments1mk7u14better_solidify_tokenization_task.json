{
  "FeedUrl": "https://www.reddit.com/r/azuredevops/.rss",
  "Link": "https://www.reddit.com/r/azuredevops/comments/1mk7u14/better_solidify_tokenization_task/",
  "Tags": [
    "azuredevops"
  ],
  "OutputDir": "_community",
  "FeedName": "Reddit Azure DevOps",
  "ProcessedDate": "2025-08-08 16:04:30",
  "Title": "Better Solidify tokenization task",
  "FeedLevelAuthor": "Azure DevOps",
  "EnhancedContent": "HI! For our deployments to Azure app services we like to use the [solidify tokenization](https://github.com/solidify/vsts-task-tokenize-in-archive) task, whilst it has worked for a long time, we still have 2 issues with it:\n\n- only runs on windows agents\n\n- the task must be installed on the runner\n\nWe are looking to replace it with something that can run on linux and windows and should not be installed on the agent itself, but this looks to be an impossible challenge. We have tried creating our own tokenization task (mainly using AI tools), but the issue we are facing is that it is impossible to load secrets dynamically without referencing them hardcoded.\n\nHas anyone also encountered this? And/or has an idea how to fix this?\n\nThanks!\n\nEdit: for me it seems weird that we cannot get this working to load the secrets dynamically, since the solidify tokenization task can do this\n\nWhat's your tech stack?\n\nYou should follow the best practice: one build, meant deploys.\n\nBuild process is part of CI. It should produce an immutable build artifact.\n\nDeployment process is part of CD. You should take your immutable build artifact, combine it with runtime configuration, and deploy to a specific environment.\n\nYou shouldn't change the build artifact. You should use mechanism to load runtime configuration separately.\n\nImagine, if you would use Docker image. You wouldn't try to change Docker image to substitute some variables. You'd take an image an would use environment variables for your runtime configuration.\n\nSame stuff with ZIP deploy to App Service. In all tech stacks you can use environment variables. You can set them during deployment additionally to deploying ZIP Archive.\n\nWe use .net 8 and Umbraco 13. I also am more or less a fan of moving secrets and variable replacement put of the pipeline, it should be something set up on the machine or in Azure. That being said, it is also something historical why we still work this way, and it is to be backwards compatible with the current working flow. We do only do the tokenization right before the deploy to azure (or on prem iis site), so we build the artifact, publish it in the pipeline, download it again on deploy, run tokenization and then do the actual deploy to the iis site or azure app service",
  "Author": "YaMoef",
  "PubDate": "2025-08-07T18:24:01+00:00",
  "Description": "HI! For our deployments to Azure app services we like to use the [solidify tokenization](https://github.com/solidify/vsts-task-tokenize-in-archive) task, whilst it has worked for a long time, we still have 2 issues with it:\n\n- only runs on windows agents\n\n- the task must be installed on the runner\n\nWe are looking to replace it with something that can run on linux and windows and should not be installed on the agent itself, but this looks to be an impossible challenge. We have tried creating our own tokenization task (mainly using AI tools), but the issue we are facing is that it is impossible to load secrets dynamically without referencing them hardcoded.\n\nHas anyone also encountered this? And/or has an idea how to fix this?\n\nThanks!\n\nEdit: for me it seems weird that we cannot get this working to load the secrets dynamically, since the solidify tokenization task can do this"
}
