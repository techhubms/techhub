{
  "FeedUrl": "https://www.reddit.com/r/azuredevops/.rss",
  "Link": "https://www.reddit.com/r/azuredevops/comments/1mks3po/planning_without_tasks/",
  "Tags": [
    "azuredevops"
  ],
  "OutputDir": "_community",
  "FeedName": "Reddit Azure DevOps",
  "ProcessedDate": "2025-08-08 16:04:30",
  "Title": "Planning without tasks",
  "FeedLevelAuthor": "Azure DevOps",
  "EnhancedContent": "I have been given the task in my team to migrate our work over to Azure dev ops. The set up at the moment is the team get requests, we triage and estimate story points and add to a backlog. These tickets are then allocated to members and it's their responsibility to scope and compete the ticket, and we record the hours taken.\n\nMy manager wants to use Dev ops to be able to work in a more granular way (seeing the individual steps of a ticket so she can see progress throughout the week), so my thought process was make each request a user story and then have the members create tasks as they are working through the ticket.\n\nThe issue I'm facing is when it comes to sprint planning, capacity is measured in hours of tasks and the tasks wouldn't necessarily exist at the point of planning, just the story points attached to the user story. Is there any way to manage this so we can see capacity by number of story points, and then allow members to create tasks throughout the sprint, that the hours are collected for at the end of the sprint so we can see how much work was needed for the request? I've been looking online but am just getting overwhelmed by it all.\n\nYou just drop stories into the Sprint untill you feel like it fits! There is a planning feature on the backlog by story points... It's on one of the view buttons and then \"forecasting\". Gives you a static number that you can use for your sprint capacity and it draws lines based on story points.\n\nThen select what you want and add to the Sprint.\n\nThe tooling is designed by agile teams for agile teams, and the \"capacity planning\" tools are only there to service more traditional \"waterfall\" customers.\n\nIn general I'd try to avoid falling into the [estimation trap](https://preview.nkdagility.com/resources/blog/the-estimation-trap-how-tracking-accuracy-undermines-trust-flow-and-value-in-software-delivery/) from the start.",
  "Author": "TimePerfect8403",
  "PubDate": "2025-08-08T10:59:17+00:00",
  "Description": "I have been given the task in my team to migrate our work over to Azure dev ops. The set up at the moment is the team get requests, we triage and estimate story points and add to a backlog. These tickets are then allocated to members and it's their responsibility to scope and compete the ticket, and we record the hours taken.\n\nMy manager wants to use Dev ops to be able to work in a more granular way (seeing the individual steps of a ticket so she can see progress throughout the week), so my thought process was make each request a user story and then have the members create tasks as they are working through the ticket.\n\nThe issue I'm facing is when it comes to sprint planning, capacity is measured in hours of tasks and the tasks wouldn't necessarily exist at the point of planning, just the story points attached to the user story. Is there any way to manage this so we can see capacity by number of story points, and then allow members to create tasks throughout the sprint, that the hours are collected for at the end of the sprint so we can see how much work was needed for the request? I've been looking online but am just getting overwhelmed by it all."
}
