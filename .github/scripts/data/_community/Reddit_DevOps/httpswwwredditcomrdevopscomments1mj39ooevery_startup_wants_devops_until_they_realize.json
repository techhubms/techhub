{
  "FeedUrl": "https://www.reddit.com/r/devops/.rss",
  "Link": "https://www.reddit.com/r/devops/comments/1mj39oo/every_startup_wants_devops_until_they_realize/",
  "Tags": [
    "devops"
  ],
  "OutputDir": "_community",
  "FeedName": "Reddit DevOps",
  "ProcessedDate": "2025-08-08 15:55:47",
  "Title": "Every startup wants \"DevOps\", until they realize what it actually takes",
  "FeedLevelAuthor": "Everything DevOps",
  "EnhancedContent": "I’ve lost count of how many early-stage teams want CI/CD, infra-as-code, multi-env setups, monitoring, rollback, zero-downtime deploys… all before even having stable revenue.\n\nAnd they assign it to a solo dev or junior engineer as a “side task”.\n\nMeanwhile:\n\nNo one owns infra debt. No budget for proper tooling.\n\nEveryone wants “just one more feature” instead of paying infra tech debt.\n\nWhen something breaks in prod, it’s magically “DevOps’ fault”.\n\nDevOps is not a checkbox. It’s a long-term investment that touches culture, workflows, and team maturity.\n\nYou either take it seriously, or you're just writing TODOs that'll bite you in 3AM alerts later.\n\nPreach! They think DevOps is like plugging CI/CD YAML and calling it a day.\n\nIf leadership doesn't own platform/infra as a 1st class product (with real accountability, roadmap and budget) it will ALWAYS be duct tape on legacy pain.\n\nThey might ship faster at first but ops debt compounds fast.... and then tech & people burnout is inevitable.\n\nI've told clients: if you want real devops, you need to make it everyone's problem - NOT A HERO ROLE\n\nWe used to say \"Spray some Agile on it\", now I feel like it's \"Spray some DevOps on it\".\n\n> > >\n\nI've told clients: if you want real devops, you need to make it everyone's problem - NOT A HERO ROLE\n\nWell said.\n\nManager here, AI can do that in those \"clouds\" and can be done using shipping containers with helm or something.\n\nSo get rekt!\n\nWhere my bonus?\n\n/S\n\nManager also wonders why the whole thing is fucked when years down the road they actually begin thinking about how to properly host and serve their absolute snowflake of an app\n\n> > >\n> bonus\n> > > >\n\nHere’s your bonus: You get replaced by AI first\n\nStartups are usually lean and product-focused, where do you see these startups focusing on solid and scalable infra?\n\nThe problem is basically pure budgeting.\n\nSame reason why startups don't have DBAs and network engineers. They have developers who know a bit about these things, but not particularly deep knowledge.\n\nBecause these jobs don't instantly generate revenue. A \"good enough\" database and a \"good enough\" network, is enough to get you to the point of revenue generation, long before you need to think about optimisation.\n\nAnd the same applies for DevOps. If they can deploy the code without making a total mess, then that's \"good enough\".\n\nAnd everyone here knows that a skilled devops engineer kicking off a greenfield project could have a well-architected IaC setup with CI/CD pipelines, all done in a month. But that's a $20k bill the start-up doesnt want to spend. They want to hire that junior engineer for $60k and have him struggle with these tasks during his 60-hour weeks.\n\nOr on the other end, you start your startup with zero platform/devops engineers, so you end up architecting your infrastructure in a way that doesn’t scale well, isn’t flexible, and costs $40,000/month in AWS charges for a handful of customers, then hire platform engineers who are horrified when they start\n\nTell me how I know lol\n\nI mean it’s a right of passage, startup everything is chaos and then it’s series B+ when it matters. Right before IPO they’re all scrambling for SOX SOC2. That’s where we come in demanding fat pay cheques\n\nYep…. Or you even see startups with dedicated DevOps team with no foresight. They implement process and infra which works for current, small setup and is not ready for scaling. This introduces huge bottlenecks once teams and requirements start to grow. Adding infra/devops/see procedures into your business is a very risky and dangerous process that has to pay attention to future as much as it does to the present. That’s why you have to have to think of “platform engineering”, “devex” etc at once, even if your team is named “just” DevOps.\n\nIts definitely not a task with people with no or next-to-zero experience.",
  "Author": "Pichipaul",
  "PubDate": "2025-08-06T12:26:20+00:00",
  "Description": "I’ve lost count of how many early-stage teams want CI/CD, infra-as-code, multi-env setups, monitoring, rollback, zero-downtime deploys… all before even having stable revenue.\n\nAnd they assign it to a solo dev or junior engineer as a “side task”.\n\nMeanwhile:\n\nNo one owns infra debt. No budget for proper tooling.\n\nEveryone wants “just one more feature” instead of paying infra tech debt.\n\nWhen something breaks in prod, it’s magically “DevOps’ fault”.\n\nDevOps is not a checkbox. It’s a long-term investment that touches culture, workflows, and team maturity.\n\nYou either take it seriously, or you're just writing TODOs that'll bite you in 3AM alerts later."
}
