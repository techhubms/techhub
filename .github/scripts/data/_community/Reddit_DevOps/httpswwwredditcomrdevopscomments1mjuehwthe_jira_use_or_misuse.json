{
  "FeedUrl": "https://www.reddit.com/r/devops/.rss",
  "Link": "https://www.reddit.com/r/devops/comments/1mjuehw/the_jira_use_or_misuse/",
  "Tags": [
    "devops"
  ],
  "OutputDir": "_community",
  "FeedName": "Reddit DevOps",
  "ProcessedDate": "2025-08-08 15:55:47",
  "Title": "The Jira use (or misuse)",
  "FeedLevelAuthor": "Everything DevOps",
  "EnhancedContent": "Do you find it funny that, engineers or senior managers who advocate for tools like jira, are the ones who less use it, while engineers who most use it, hate it?\n\nWhat I mean is, senior managers or PMs for example, usually only deal with setting milestones and writing epics, then every now and then pull some reports and that's about it. While engineers do have to deal with setting boards, sprints, labels, views, queries and what not...which can be frustrating to say the least.\n\nI just don't understand how this tool made it to be industry standard, when 80% of its features nobody uses. Its so bloated, now AI is being pushed into it of course.\n\nI'd be willing to bet other tools would achieve the same just fine, for a fraction of the cost. Now, of course, fighting that fight with a while company is another story...\n\n> > >\n> while engineers who most use it, hate it?\n> > > >\n\nEngineers barely keep their ticket status up-to-date, let alone actually \"use\" Jira as God intended.\n\nI guess neither of us has anything beyond anecdotal evidence, but setting up boards, queries, etc. shouldn't be the responsibility of engineers.\n\nWhat OP said is weird too. I never actually used query and stuff. Like, we have the board, but I didn't create it, I just open it using shortcut and update my status. The managers are using the charts, but none of us devs are required to use it.\n\nI’ve used Jira extensively across teams for years, and while it’s not perfect, I’ve seen it work very well when implemented thoughtfully.\n\nThe problem isn’t Jira, it’s often poor implementation. Teams complain about clutter, but that’s usually because they’ve piled on custom fields, convoluted workflows, and inconsistent labeling without governance. Jira gives you flexibility, but with that comes responsibility.\n\nWhen set up cleanly, with clear issue types, simple boards, meaningful sprints, and disciplined backlog grooming - it creates alignment between engineering, product, and leadership. Yes, PMs use it differently than engineers, but that’s by design: different roles, different views.\n\nAnd while the AI push is marketing-heavy, core features like traceability, reporting, and integration with DevOps tools (Bitbucket, OpsGenie, etc.) are solid.\n\nJira itself is OK for managing tickets but the reporting and dashboarding is abysmal. OpsGenie is dead, replaced by JSM which is NOT worth 22 bucks per seat, does the bare minimum as a paging tool. And Bitbucket is not a great code repo, engineers love GH. But yeah, for the core feature set of managing work it's fine.\n\nWhich tool do you think is better ? I mean i have seen somewhat better in newer tools but not by any means drastically better.\n\nYeah what have the Romans ever done for us?\n\nApart from a wide ecosystem of tooling integrations, customizable workflows, flexibility to accommodate all types of work within an engineering org, customizable reporting, dashboards, product management roadmaps, scalability for millions of tickets, granular permission schemes, automation, etc.\n\nApart from that, what has Jira ever done for us?\n\nLinear is drastically better. Fast and easy to use, super scriptable\n\nI use it a lot. Professionally and personally, as a senior engineer / team lead. Helps keeping things on track, easy(ish) with reports, great with automation and integrations.\n\nWhat I have found is that those who complain about it fall in 2 categories: they don't know how to use it properly/more than a ticket system (and aren't encouraged to learn that either), or have a malconfigured setup (admin with God complex or nobody knows how to use it so all just using it as a ticket system only).\n\nMost commonly I have encountered the lack of knowledge. People making reports with third party tools and custom API calls/scripts to populate some Google sheet to generate some graph. I would encourage the engineers, leads and managers to dollow some of the courses on Atlassian University (relevant for them or advancement) and just see what more is possible. You're likely already paying for the features, might as well put them to use.\n\nJira is great. If you don’t like it is implemented wrong. Is one of the best tools to plan work and sprints in agile\n\nI have been using Jira since its inception in all kinds of roles.\n\nIt does its job very well.",
  "Author": "jmch16",
  "PubDate": "2025-08-07T08:20:19+00:00",
  "Description": "Do you find it funny that, engineers or senior managers who advocate for tools like jira, are the ones who less use it, while engineers who most use it, hate it?\n\nWhat I mean is, senior managers or PMs for example, usually only deal with setting milestones and writing epics, then every now and then pull some reports and that's about it. While engineers do have to deal with setting boards, sprints, labels, views, queries and what not...which can be frustrating to say the least.\n\nI just don't understand how this tool made it to be industry standard, when 80% of its features nobody uses. Its so bloated, now AI is being pushed into it of course.\n\nI'd be willing to bet other tools would achieve the same just fine, for a fraction of the cost. Now, of course, fighting that fight with a while company is another story..."
}
