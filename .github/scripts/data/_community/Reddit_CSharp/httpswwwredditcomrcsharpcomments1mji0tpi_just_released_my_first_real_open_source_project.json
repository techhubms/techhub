{
  "FeedUrl": "https://www.reddit.com/r/csharp/.rss",
  "Link": "https://www.reddit.com/r/csharp/comments/1mji0tp/i_just_released_my_first_real_open_source_project/",
  "Tags": [
    "csharp"
  ],
  "OutputDir": "_community",
  "FeedName": "Reddit CSharp",
  "ProcessedDate": "2025-08-08 15:50:34",
  "Title": "I just released my first \"real\" open source project - looking for feedback!",
  "FeedLevelAuthor": "C#",
  "EnhancedContent": "Hello there!\n\nA few months ago I decided to learn new UI framework and it landed on Avalonia. I wanted to make something that would make some of my \"daily\" tasks easier so I decided to make MyAnimeList wrapper. **Aniki** is built with Avalonia and .NET, you can use it to manage MAL account, browse and watch anime. It features torrent search via Nyaa. It's my first \"serious\" open source project and I want to keep updating and improving it.\n\nI'm looking forward to tips, feedback critique, etc. :)\n\n[https://github.com/TrueTheos/Aniki](https://github.com/TrueTheos/Aniki)\n\n- Your code doesn't take advantage of [nullable reference types](https://learn.microsoft.com/en-us/dotnet/csharp/nullable-references). This is easily the single most important thing you're not currently doing.\n- Use [file scoped namespaces](https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/proposals/csharp-10.0/file-scoped-namespaces), saving yourself a level of indentation.\n- If you want to boost your code quality, always add `<TreatWarningsAsErrors>true</TreatWarningsAsErrors>`\nto your `.csproj` and address every single problem correctly. And don't just suppress warnings about potential null references, write the necessary null checks.\n- Seeing as you've got some unchanging regex patterns, consider using the [regex source generator](https://learn.microsoft.com/en-us/dotnet/standard/base-types/regular-expression-source-generators).\n- Use [global and implicit usings](https://devblogs.microsoft.com/dotnet/welcome-to-csharp-10/#global-and-implicit-usings) to avoid unnecessarily restating commonly referenced namespaces.\n- `Aniki.csproj`\nreferences `Resources\\CLIENTID.txt` , but no such file exists in source control.\n\nThanks for your feedback :) Will look into nullable reference types and try to implement them. I keep forgeting about file scoped namespaces, sometimes I use them and sometimes I don't. Will make use of them in the whole project now. `&lt;TreatWarningsAsErrors&gt;true&lt;/TreatWarningsAsErrors&gt;` didn't know such thing existed, I will also try that one. Regex source gen is also something I've never heard about, looks really good after quick read. Will use it.\n\nAbout CLIENTID.txt, in the `Self-Hosting` section of Readme there is a note `Create `CLIENTID.txt` inside `Resources` folder and paste in the ClientID`\n\nMight be a nitpick, but from a branding perspective it’s very similar to Anki, the flashcard tool. With it being in a similar realm to anime (lots of people use Anki for Japanese vocab) I wonder if another name would help this stand out?\n\nAlso maybe some screenshots/a demo would be useful in the readme.\n\nYeah, I probably should have done some more research about the name. I only googled \"Aniki\" to check if there isn't a tool named like that. I think it's not that big deal right now, need to think about it.\n\nWill add screenshots in a minute :)\n\nCongrats on building something and putting out into the world. I am proud of you for identifying a need and successfully planning and implementing a solution for it, that is not easy!\n\n``` private` static string EncryptData(string data) { byte[] bytes = Encoding.UTF8.GetBytes(data); return Convert.ToBase64String(bytes); } ```\n\nDo not store sensitive data like access tokens using base 64 encoding.\n\nyea, fair point.\n\nWill fix that :)",
  "Author": "Loiuy123_",
  "PubDate": "2025-08-06T21:57:29+00:00",
  "Description": "Hello there!\n\nA few months ago I decided to learn new UI framework and it landed on Avalonia. I wanted to make something that would make some of my \"daily\" tasks easier so I decided to make MyAnimeList wrapper. **Aniki** is built with Avalonia and .NET, you can use it to manage MAL account, browse and watch anime. It features torrent search via Nyaa. It's my first \"serious\" open source project and I want to keep updating and improving it.\n\nI'm looking forward to tips, feedback critique, etc. :)\n\n[https://github.com/TrueTheos/Aniki](https://github.com/TrueTheos/Aniki)"
}
