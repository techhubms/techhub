{
  "FeedUrl": "https://www.reddit.com/r/csharp/.rss",
  "Link": "https://www.reddit.com/r/csharp/comments/1mjszox/need_help_automating_windows_forms_inside_remote/",
  "Tags": [
    "csharp"
  ],
  "OutputDir": "_community",
  "FeedName": "Reddit CSharp",
  "ProcessedDate": "2025-08-08 15:50:34",
  "Title": "Need help automating Windows forms inside Remote Desktop (RDP) - UI Automation vs Computer Vision approach?",
  "FeedLevelAuthor": "C#",
  "EnhancedContent": "``` Need help automating Windows forms inside Remote Desktop (RDP) - UI Automation vs Computer Vision approach?\n\nHey r/csharp community,\n\nI'm working on automating a legacy Windows Forms application (insurance management system) that runs inside a Remote Desktop session. The software doesn't have any API, and I need to automate repetitive tasks like searching records, clicking buttons, and extracting data.\n\nThe Challenge:\n- The application runs inside RDP (mstsc.exe)\n- Traditional UI Automation (FlaUI, Windows UI Automation API) can't see inside the RDP window - it just sees it as one big image\n- Coordinates-based clicking is unreliable due to different screen resolutions and RDP scaling\n\nWhat I've Tried:\n\n1. FlaUI with UI Automation - Works great for local apps but can't penetrate the RDP session\n```csharp var automation = new UIA3Automation(); var window = automation.GetDesktop().FindFirstDescendant(cf => cf.ByClassName(\"TscShellContainerClass\")); // Can find the RDP window, but can't see elements inside it ```\n\n2. SendKeys and coordinate clicking - Too fragile, breaks with resolution changes\n\n3. AutoHotkey - Same coordinate problems, plus I'd prefer a C# solution\n\nWhat I'm Considering:\n\n1. Computer Vision approach using OpenCV or ML.NET to:\n\n- Find UI elements visually\n- Use template matching or YOLO models for button detection\n- OCR for text recognition (the UI is in Italian)\n2. Commercial RPA tools (UiPath, Blue Prism) - But looking for a programmatic solution\n3. Running automation agent inside the RDP session - But I can't install software on the remote machine\n\nQuestions:\n\n1. Has anyone successfully automated applications inside RDP using C#?\n2. Is computer vision the way to go? Any recommended libraries/approaches?\n3. Are there any tricks to make UI Automation work through RDP that I'm missing?\n4. Anyone used Windows' OCR API or other alternatives for reading text from RDP windows?\n\nTech Stack:\n\n- C# .NET 6/7\n- Windows 11 client\n- Windows Server 2019 remote\n- Legacy WinForms app (no source code access)\n\nAny insights or alternative approaches would be greatly appreciated! Happy to share more details if needed.\n\n```\n\n```\n\nA bit off topic, but check out how it does these operations underneath. Many such programs are just frontend to their dynamic linked libraries handling all heavy lifting.\n\nYou can just check files in program’s directory and try to identify dlls which most likely contains such logic. (Best way to identify such dlls is with their size)\n\nIf such candidate dll(s) exist, next thing would be to check its exports( if you are lucky there will be named exports). And after confirming its calling convention and argument types, you can easily call those with a c# dllimport attributed function.\n\nAlso, because u mentioned it’s an insurance related project it’s more likely that it uses some kind of database to store data. It might be sqlite(if it was developed in last decade) or mdb(which can be opened by Microsoft access).\n\nYou need to reverse engineer a little bit to know how its handled on abstract level and then hook up between data and presentation layer.\n\nA few tools which would help you,\n\nPE Explorer (info about imported/exported functions)\n\nProcess Monitor (similar to api monitor, but only readonly. Use this for file system access to identify potential database location)\n\nApi monitor v2 ([https://rohitab.com](https://rohitab.com)), lets you log/intercept/modify api calls\n\nMicrosoft detours\n\nPInvoke.net\n\nOllydbg (very extreme case, if you want to patch)\n\nIDA Pro or Ghidra (for static analysis and check what might be happening)\n\nEdit: I missed to read that OP cant install an agent on remote, well in that case all above mostly goes out of window.\n\nAlso, RDP is interactive video streaming. I am not sure why resolution be an issue though, given you can query about it using win api. Also you may want to checkout WinAutomation, when i used it like 10 years ago it had an option to click based on image matching or something like that.\n\nPS: as OP mentioned that remote is running windows 2019, it’s possible to run powershell scripts. If running poweshell scripts is possible then alot of above mentioned tricks can be simulated on local computer and then you can have your script run there.\n\nGrazie mille, il software gira attraverso mcaccess facilissimo quindi da maneggiare e molto vecchio oltretutto il problema è che sul terminale server non posso fare nulla che sia installare e azioni admin. Posso operare solo attraverso la connessione remota\n\nA slightly different idea, connect to the remote machine using a terminal. Like Windows PowerShell remoting or SSH. This will be a lot easiere to automate your tasks.\n\nAnd if the application you are trying to interact with has a CLI, that will make your life a lot easiere.\n\nIn general in process-to-process communication if you can avoid a UI it will make it so much easiere.\n\nIs there anyway to have the MS Access database copied to an online location, such as OneDrive? Then it can be pulled down to your local network so that a local app, either a C# desktop app to query data or just an Access front end. Could you install something on the RDP PC that copies the accdb (or mdb if older) every few hours (it sounds like you aren't required to get real time info).\n\nGrazie della risposta purtroppo è molto fragile e di parecchi gb con server chiuso . Mi sa che posso solo usare computer vision",
  "Author": "Grifone87",
  "PubDate": "2025-08-07T06:50:03+00:00",
  "Description": "``` Need help automating Windows forms inside Remote Desktop (RDP) - UI Automation vs Computer Vision approach?\n\nHey [r/csharp](/r/csharp) community,\n\nI'm working on automating a legacy Windows Forms application (insurance management system) that runs inside a Remote Desktop session. The software doesn't have any API, and I need to automate repetitive tasks like searching records, clicking buttons, and extracting data.\n\nThe Challenge: - The application runs inside RDP (mstsc.exe) - Traditional UI Automation (FlaUI, Windows UI Automation API) can't see inside the RDP window - it just sees it as one big image - Coordinates-based clicking is unreliable due to different screen resolutions and RDP scaling\n\nWhat I've Tried:\n\n1. FlaUI with UI Automation - Works great for local apps but can't penetrate the RDP session `csharp var automation = new UIA3Automation(); var window = automation.GetDesktop().FindFirstDescendant(cf => cf.ByClassName(\"TscShellContainerClass\")); // Can find the RDP window, but can't see elements inside it `\n2. SendKeys and coordinate clicking - Too fragile, breaks with resolution changes\n3. AutoHotkey - Same coordinate problems, plus I'd prefer a C# solution\n\nWhat I'm Considering:\n\n1. Computer Vision approach using OpenCV or ML.NET to:\n\n- Find UI elements visually\n- Use template matching or YOLO models for button detection\n- OCR for text recognition (the UI is in Italian)\n2. Commercial RPA tools (UiPath, Blue Prism) - But looking for a programmatic solution\n3. Running automation agent inside the RDP session - But I can't install software on the remote machine\n\nQuestions: 1. Has anyone successfully automated applications inside RDP using C#? 2. Is computer vision the way to go? Any recommended libraries/approaches? 3. Are there any tricks to make UI Automation work through RDP that I'm missing? 4. Anyone used Windows' OCR API or other alternatives for reading text from RDP windows?\n\nTech Stack: - C# .NET 6/7 - Windows 11 client - Windows Server 2019 remote - Legacy WinForms app (no source code access)\n\nAny insights or alternative approaches would be greatly appreciated! Happy to share more details if needed. ```"
}
