{
  "FeedUrl": "https://www.reddit.com/r/csharp/.rss",
  "Link": "https://www.reddit.com/r/csharp/comments/1mk7faj/non_printable_space/",
  "Tags": [
    "csharp"
  ],
  "OutputDir": "_community",
  "FeedName": "Reddit CSharp",
  "ProcessedDate": "2025-08-08 15:50:34",
  "Title": "Non Printable Space",
  "FeedLevelAuthor": "C#",
  "EnhancedContent": "I have a console app and I want to output a string with characters and spaces somewhere on the screen. But I do not want the spaces to clear any existing characters that might be under them.\n\nFor example:\n\n``` Console.SetCursorPosition(0,0); Console.Write(\"ABCDEFG\"); Console.SetCursorPosition(0,0); Console.Write(\"* * *\"); ```\n\nBut the resulting output as seen on the screen to be\n\n``` *BC*EF* ```\n\nI know there is a zero length Unicode character, but is there a non printable space character that I can use instead of `\" \"` ?\n\nIs there a way to do this without having to manually loop through the string and output any non space chars at the corresponding position?\n\nDo you want to replace some chars with \\* or what? It's not clear what you want\n\nNot replace chars in a string.\n\nSee my edits above.\n\nYou could use Console.SetCursorPosition if you want to skip over columns/rows: [https://learn.microsoft.com/en-us/dotnet/api/system.console.setcursorposition?view=net-9.0](https://learn.microsoft.com/en-us/dotnet/api/system.console.setcursorposition?view=net-9.0)\n\nMight Spectre.Console be a way to control your user output? [https://spectreconsole.net/](https://spectreconsole.net/)\n\nYou'd be pivoting away from Console.WriteLine so it may be too big a departure, depending on how far you've progressed with your app\n\nIt is already written in the console. What I want is to write two or more character buffers on the screen with different colors, but I don't want the spaces to clear the already displayed characters.\n\nYou can use escape sequences to move the cursor. There isn't really a \"non-printing space\" in ASCII.\n\n- `\\x1b`\nESC sequence starter\n- `[2`\ntwo characters\n- `C`\nmove forward\n\nSo\n\n``` Console.Write(\"*\\x1b[2C*\\x1b[2C*\"); ```\n\nWill do what you need.\n\nNote that if you just do the above and allow the runtime to exit it will print a space over the next character for some reason.\n\nIMO it's more trouble than it's worth and maybe having your own \"screen buffer\" is sometimes better than updating the console buffer, but if you are really serious about it, writing to your own buffer and blitting the entire buffer to the Console memory space will probably be faster.\n\nYou could of course write an extension method to replace spaces with the appropriate ESC sequence.\n\nI can't reproduce this behaviour. When I run your example, I get this:\n\n```\n* * *FG\n```\n\nIs it already written on the console?\n\nOr you want to overwrite an existing string in memory?\n\nStrings are immutable, so to alter it, you have to create a new copy, which inevitably means looping over the characters in one way or another.\n\nFor the latter, you can write an extension method:\n\n``` var str = \"ABCDEFG\"; var result = str.Overwrite(\"* *\");\n\n// result = *BC*EFG\n\npublic static class StringExtensions { /// <summary> /// Writes the characters of another string over the characters current /// string when the characters of the other string is not a space /// </summary> public static string Overwrite(this string a, string b) { int i = 0; var result = new char[Math.Max(a.Length, b.Length)]; while(i < result.Length) { result[i] = i >= b.Length || i < a.Length && b[i] == ' ' ? a[i] : b[i]; i++; } return new String(result); } } ```\n\nFor the former, if the text is already written to the console, you can move the cursor and overwrite the screen buffer.\n\nIf your goal is to write directly to the screen without creating a new string, then you can do the same but just Console.Write the current character.\n\n``` public static class ConsoleEx { /// <summary> /// Writes the characters of another string over the characters current /// string when the characters of the other string is not a space /// </summary> public static void Overwrite(string a, string b) { int i = 0; var max = Math.Max(a.Length, b.Length); while(i < max) { Console.Write(i >= b.Length || i < a.Length && b[i] == ' ' ? a[i] : b[i]); i++; } } } USAGE:\n\nConsoleEx.Overwrite(\"ABCDEFG\", \"* *\"); ```\n\nSorry for the confusion. I edited my question to clarify that I am not interested in manipulating strings, but in *overlaying* one string over some existing text on the console.",
  "Author": "06Hexagram",
  "PubDate": "2025-08-07T18:08:40+00:00",
  "Description": "I have a console app and I want to output a string with characters and spaces somewhere on the screen. But I do not want the spaces to clear any existing characters that might be under them.\n\nFor example:\n\n` Console.SetCursorPosition(0,0); Console.Write(\"ABCDEFG\"); Console.SetCursorPosition(0,0); Console.Write(\"* * *\"); `\n\nBut the resulting output as seen on the screen to be\n\n` *BC*EF* `\n\nI know there is a zero length Unicode character, but is there a non printable space character that I can use instead of `\" \"` ?\n\nIs there a way to do this without having to manually loop through the string and output any non space chars at the corresponding position?"
}
